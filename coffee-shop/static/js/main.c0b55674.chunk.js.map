{"version":3,"sources":["app/shared/constants/permissions.const.ts","app/shared/constants/orders.const.ts","app/store/products/products.model.ts","reportWebVitals.ts","app/store/cardProduct/cardProduct.utils.ts","app/shared/constants/urls.const.ts","app/shared/constants/token.const.ts","app/mocks/productList/index.ts","app/shared/http/httpClient.ts","app/mocks/orderList/index.ts","app/shared/http/api.ts","app/store/orders/orders.actions.ts","app/store/orders/orders.reducers.ts","app/mocks/userList/index.ts","app/store/profile/profile.actions.ts","app/store/profile/profile.reducers.ts","app/store/profile/profile.selectors.ts","app/routing/routing.enums.ts","app/store/coordinates/coordinates.actions.ts","app/store/coordinates/coordinates.reducers.ts","app/store/coordinates/coordinates.selectors.ts","app/core/MainLayout/MainLayout.tsx","app/shared/components/Button/Button.model.ts","app/store/cardProduct/cardProduct.actions.ts","app/store/cardProduct/cardProduct.reducers.ts","app/store/cardProduct/cardProduct.selectors.ts","app/routing/RouterBuilder.ts","app/pages/CardProduct/components/PropertyBlock/PropertyBlock.tsx","app/pages/CardProduct/components/PropertyList/PropertyList.tsx","app/shared/components/ExtraProduct/ExtraProductList/ExtraProductList.model.ts","app/shared/components/Button/Button.tsx","app/store/shoppingBasket/shoppingBasket.actions.ts","app/store/shoppingBasket/shoppingBasket.reducers.ts","app/store/shoppingBasket/shoppingBasket.selectors.ts","app/store/shoppingBasket/shoppingBasket.utils.ts","app/shared/components/ExtraProduct/ExtraProductBlock/ExtraProductBlock.tsx","app/store/shoppingBasket/utils/extraProduct.utils.ts","app/store/products/products.actions.ts","app/store/products/products.reducers.ts","app/store/products/products.selectors.ts","app/shared/components/ExtraProduct/ExtraProductList/ExtraProductList.tsx","app/store/shoppingBasket/utils/product.utils.ts","app/shared/components/ShoppingBasket/ShoppingBasket.utils.ts","app/shared/components/ShoppingBasket/ShoppingBasket.tsx","assets/navbar/left-black.svg","app/shared/components/NavBar/NavBar.tsx","app/pages/CardProduct/CardProduct.tsx","app/pages/Login/Login.tsx","assets/navbar/cutlery.svg","assets/navbar/bio.svg","assets/navbar/recycle.svg","app/pages/Pay/Pay.utils.tsx","app/pages/Products/components/Product/Product.utils.ts","app/pages/Products/components/Product/Product.tsx","app/pages/Pay/Pay.tsx","app/pages/Personal/Personal.tsx","app/shared/components/LocationList/components/LocationButton/LocationButton.tsx","app/shared/components/LocationList/components/LocationButton/LocationButton.utils.ts","app/shared/components/LocationList/LocationList.tsx","app/pages/Products/Products.tsx","app/pages/PromoCode/PromoCode.tsx","app/routing/routing.const.tsx","app/routing/routing.tsx","app/store/middlewares/index.ts","app/store/reducers/index.ts","app/store/index.ts","App.tsx","index.tsx"],"names":["PermissionList","PaymentTypes","OrderStatuses","ProductCategory","PropertyTypes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getCardProduct","productId","productList","extraProductList","length","product","filter","id","urls","AUTH_DATA","HttpStatusValues","ProductListMock","price","kilocalories","carbohydrates","category","LUNCH","description","fats","name","proteins","weight","propertyTypes","ALL","src","DRINK","BREAKFAST","VEGAN","DINNER","FISH","ExtraProductListMock","OrderListMock","EmployeeId","startDate","Date","endDate","pyamentType","PAY","status","COMPLETED","cutlery","delivery","courierId","comment","serviceApi","a","getOrderList","idEmployee","data","getProductList","getExtraProductList","getUser","sendShoppingBasket","item","ordersActions","prefix","SET_ORDER_LIST","this","SET_STATUS_LOADING","setOrderList","createAction","setStatusLoading","fetchOrderList","dispatch","response","window","confirm","message","reduceMap","state","action","list","payload","isLoading","ordersReducer","handleActions","EmployeeListMock","cash","permissions","ADMIN","location","city","street","house","businessCenter","USER","profileActions","SET_USER_DATA","CLEAR_USER_DATA","setUserData","clearUserData","login","userData","localStorage","setItem","toString","e","logout","href","fetchUserData","isAuth","getItem","initialState","user","undefined","profileReducer","getProfile","profile","RouteUrls","ActionUrls","axiosInstance","AxiosStatis","create","baseURL","coordinatesActions","SET_COORDINATES","SET_GEOLOCATION","setCoordinates","setGeolocation","fetchCoordinates","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","fetchGeoLocation","url","get","results","components","coordinates","coordinatesReducer","getCoordinates","MainLayout","memo","children","useSelector","useDispatch","useEffect","content","useMemo","className","ButtonMode","cardProductActions","SET_CARD_PRODUCT","CLEAR_CARD_PRODUCT","setCardProduct","clearCardProduct","fetchCardProduct","redirectToProductList","getState","products","card","cardProductsReducer","cardProduct","routerBuilder","PRODUCTS_CREATE_PATH","PRODUCTS","CREATE","PRODUCTS_VIEW_EDIT_PATH","VIEW","EDIT","route","subRoute","params","mode","generatePath","PropertyBlock","title","subTitle","PropertyList","map","key","OrientationMode","Button","handleAdd","handleRemove","disabled","count","DEFAULT","defaultContent","onClick","miniContent","MINI","shoppingBasketActions","SET_PRODUCT","SET_EXTRA_PRODUCT","REMOVE_PRODUCT","REMOVE_EXTRA_PRODUCT","setProduct","setExtraProduct","removeProduct","removeExtraProduct","sendBasket","shoppingBasket","shoppingBasketReducer","getShoppingBasket","getIndexElementProduct","findIndex","ExtraProductBlock","extraProduct","useState","countOfCoincidences","setCountOfCoincidences","addProductToBasket","useCallback","prepareData","resultList","productIndex","extraProductIndex","countProduct","push","setExtraProductUtils","removeProductToBasket","splice","removeExtraProductUtils","forEach","getCountOfCoincidencesExtra","alt","loading","productsActions","SET_PRODUCT_LIST","SET_EXTRA_PRODUCT_LIST","setProductList","setExtraProductList","fetchProductList","fetchExtraProductList","productsReducer","getProducts","ExtraProductList","orientation","includes","classnames","HORIZONTAL","getCountOfCoincidencesProduct","setProductUtils","prepareItem","removeProductUtils","getFullPrice","resultPrice","ShoppingBasket","history","useHistory","fullPrice","redirectToPay","generateSimpleSubRoutePattern","MAIN","NavBar","leftCb","rightCb","arrowLeft","CardProduct","useParams","parseInt","propertyList","Login","handleAuth","WishesDataList","scr","iconCutley","component","iconBio","iconRecycle","getIcon","CHEESE","Product","handleGoCard","buildProductPath","event","stopPropagation","Pay","wishesList","Personal","LocationButton","activeButtonId","setActiveButton","handleClick","address","getFullAddress","time","getTimeInterval","LocationList","locationListLength","Products","PromoCode","Routes","path","LOGIN","exact","PERSONAL","PROMO_CODE","Routing","to","middlewares","composeWithDevTools","applyMiddleware","next","reducers","combineReducers","orders","store","createStore","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0b55674.chunk.js","sourcesContent":["export enum PermissionList {\n  ADMIN = \"ADMIN\",\n  USER = \"USER\",\n}\n","export enum PaymentTypes {\n  CARD = \"CARD\",\n  PAY = \"PAY\",\n  CASH = \"CASH\",\n}\n\nexport enum OrderStatuses {\n  AWAITING_PPAYMENT = \"AWAITING_PPAYMENT\",\n  PREPARATION = \"PREPARATION\",\n  READY = \"READY\",\n  DELIVERY = \"DELIVERY\",\n  COMPLETED = \"COMPLETED\",\n}\n","export enum ProductCategory {\n  BREAKFAST = \"BREAKFAST\",\n  LUNCH = \"LUNCH\",\n  DINNER = \"DINNER\",\n  DRINK = \"DRINK\",\n}\n\nexport enum PropertyTypes {\n  VEGAN = \"VEGAN\",\n  CHEESE = \"CHEESE\",\n  FISH = \"FISH\",\n  ALL = \"ALL\",\n}\n\nexport interface ProductModel {\n  id: number;\n  price: number;\n  kilocalories: number;\n  proteins: number;\n  fats: number;\n  carbohydrates: number;\n  weight: number;\n  description: string;\n  name: string;\n  category: ProductCategory;\n  propertyTypes: PropertyTypes;\n  src: string;\n}\n\nexport interface ExtraProductModel {\n  id: number;\n  price: number;\n  name: string;\n  weight: number;\n  src: string;\n  category: ProductCategory[];\n}\n\nexport interface ProductsStateModel {\n  productList: ProductModel[];\n  extraProductList: ExtraProductModel[];\n  isLoading: boolean;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ExtraProductModel, ProductModel } from \"../products/products.model\";\nimport { CardProductModel } from \"./cardProduct.model\";\n\n/**\n * Возвращаю карточку продукта\n */\nexport const getCardProduct = (\n  productId: number,\n  productList: ProductModel[],\n  extraProductList: ExtraProductModel[]\n): CardProductModel | undefined => {\n  let product: ProductModel | undefined = undefined;\n\n  if (!productList?.length) return undefined;\n\n  product = productList.filter((product) => product.id === productId)[0];\n\n  return { product, extraProductList };\n};\n\n/**\n * Возвращаю массив, отфильтрованных дополнительных продуктов\n */\nexport const getExtraProductList = (\n  list: ExtraProductModel[],\n  product: ProductModel\n): ExtraProductModel[] => {\n  return list.filter((item) => {\n    const category = product.category;\n    return item.category.includes(category);\n  });\n};\n","export const urls = {\n  baseUrl: \"\",\n  apiUrl: \"\",\n  logout: \"\",\n  geolocation: \"https://api.opencagedata.com/geocode/v1/\",\n};\n","export const AUTH_DATA = \"auth-data\";\r\n","import {\n  ExtraProductModel,\n  ProductCategory,\n  ProductModel,\n  PropertyTypes,\n} from \"../../store/products/products.model\";\n\nexport const ProductListMock: ProductModel[] = [\n  {\n    id: 1,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.LUNCH,\n    description: \"Пюре, сосиска с сыром\",\n    fats: 100,\n    name: \"Пюре с сосиской\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/8f702234-02d7-4093-a386-fd5395057dd9/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 2,\n    price: 200,\n    kilocalories: 201,\n    carbohydrates: 53,\n    category: ProductCategory.LUNCH,\n    description: \"Перловка, сосиска с сыром\",\n    fats: 91,\n    name: \"Перловка с сосиской\",\n    proteins: 55,\n    weight: 12,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/f55c83a3-bbef-43a0-9c4e-16f9f82667fd/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 3,\n    price: 90,\n    kilocalories: 303,\n    carbohydrates: 22,\n    category: ProductCategory.DRINK,\n    description: \"Клуб-мате\",\n    fats: 41,\n    name: \"Коктейль\",\n    proteins: 83,\n    weight: 22,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/4d2031b8-4b10-43cb-a1b5-de6d22d4c6bb/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 4,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.DRINK,\n    description: \"Горячий зелёный чай\",\n    fats: 100,\n    name: \"Зелёный чай\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/05e81d0f-f121-41d4-a065-6ef438556ce8/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 5,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.DRINK,\n    description: \"Чай черный\",\n    fats: 100,\n    name: \"Чёрный листовой чай\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/61bc5574-9c6e-4245-b168-d79fd42f7e5a/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 6,\n    price: 200,\n    kilocalories: 201,\n    carbohydrates: 53,\n    category: ProductCategory.BREAKFAST,\n    description: \"Пять творожных сырников, вишневое варенье, сметана, сгущенка\",\n    fats: 91,\n    name: \"Сырники\",\n    proteins: 55,\n    weight: 12,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/8b88d3b4-254a-42eb-abf2-6bca26a0d9df/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 7,\n    price: 90,\n    kilocalories: 303,\n    carbohydrates: 22,\n    category: ProductCategory.BREAKFAST,\n    description: \"Четыре блина с беконом и сыром\",\n    fats: 41,\n    name: \"Блинчики с беконом\",\n    proteins: 83,\n    weight: 22,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/b1159b2d-bfe6-4cf7-bad0-2e23efca4b4d/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 8,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.LUNCH,\n    description: \"Купаты, двойная глазунья, салат из капусты, два хлеба, латте\",\n    fats: 100,\n    name: \"Анлгийский завтрак\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/6571fda5-73d4-498d-a3c5-4166b6fd19fe/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 9,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.BREAKFAST,\n    description: \"Два блина с нутеллой\",\n    fats: 100,\n    name: \"Блинчики с нутеллой\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/fd8caaa5-fd9f-4904-8e70-77a1a76d7b34/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 10,\n    price: 200,\n    kilocalories: 201,\n    carbohydrates: 53,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 55,\n    weight: 12,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/8fcd3a34-087f-461d-81b5-72fc5a9ace94/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 11,\n    price: 90,\n    kilocalories: 303,\n    carbohydrates: 22,\n    category: ProductCategory.LUNCH,\n    description:\n      \"Фасоль стручковая, лук, соевый соус, масло растительное, соль и перец.\",\n    fats: 41,\n    name: \"Стручковая фасоль в соевом соусе\",\n    proteins: 83,\n    weight: 22,\n    propertyTypes: PropertyTypes.VEGAN,\n    src:\n      \"https://ucarecdn.com/118bb7ee-690e-4322-83bf-b7b770ba77c9/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 12,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.DINNER,\n    description:\n      \"Огурцы, томаты черри, тунец, яйцо, маслины, оливки, айсберг, руккола, шпинат, масло оливковое, лимон, чеснок, соль и перец\",\n    fats: 91,\n    name: \"Салат нисуаз с тунцом\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.FISH,\n    src:\n      \"https://ucarecdn.com/df7664c0-3577-4f30-9047-9e8a21705759/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 13,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/cce404f6-10a7-4b2d-ac6d-da8f5e1f5bad/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 14,\n    price: 200,\n    kilocalories: 201,\n    carbohydrates: 53,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 55,\n    weight: 12,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/8fcd3a34-087f-461d-81b5-72fc5a9ace94/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 15,\n    price: 90,\n    kilocalories: 303,\n    carbohydrates: 22,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 83,\n    weight: 22,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/cce404f6-10a7-4b2d-ac6d-da8f5e1f5bad/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 16,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/cce404f6-10a7-4b2d-ac6d-da8f5e1f5bad/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 17,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/8fcd3a34-087f-461d-81b5-72fc5a9ace94/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 18,\n    price: 200,\n    kilocalories: 201,\n    carbohydrates: 53,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 55,\n    weight: 12,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/cce404f6-10a7-4b2d-ac6d-da8f5e1f5bad/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 19,\n    price: 90,\n    kilocalories: 303,\n    carbohydrates: 22,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 83,\n    weight: 22,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/cce404f6-10a7-4b2d-ac6d-da8f5e1f5bad/-/resize/x1024/-/format/auto/\",\n  },\n  {\n    id: 20,\n    price: 350,\n    kilocalories: 405,\n    carbohydrates: 100,\n    category: ProductCategory.BREAKFAST,\n    description: \"Манная каша с сухофруктам\",\n    fats: 91,\n    name: \"Каша\",\n    proteins: 43,\n    weight: 30,\n    propertyTypes: PropertyTypes.ALL,\n    src:\n      \"https://ucarecdn.com/8fcd3a34-087f-461d-81b5-72fc5a9ace94/-/resize/x1024/-/format/auto/\",\n  },\n];\n\nexport const ExtraProductListMock: ExtraProductModel[] = [\n  {\n    id: 1,\n    price: 45,\n    name: \"Гренки\",\n    weight: 50,\n    category: [ProductCategory.LUNCH, ProductCategory.DINNER],\n    src:\n      \"https://ucarecdn.com/7d3b1c22-6797-4248-8eac-cbb673d20a78/-/resize/x256/-/format/auto/\",\n  },\n  {\n    id: 2,\n    price: 50,\n    name: \"Сметана\",\n    weight: 60,\n    category: [\n      ProductCategory.BREAKFAST,\n      ProductCategory.LUNCH,\n      ProductCategory.DINNER,\n    ],\n    src:\n      \"https://ucarecdn.com/4dd092e0-d65d-4b6c-ad25-f11f774ee400/-/resize/x256/-/format/auto/\",\n  },\n  {\n    id: 3,\n    price: 35,\n    name: \"Сгущенка\",\n    weight: 50,\n    category: [\n      ProductCategory.BREAKFAST,\n      ProductCategory.LUNCH,\n      ProductCategory.DINNER,\n      ProductCategory.DRINK,\n    ],\n    src:\n      \"https://ucarecdn.com/9d574fd8-33f1-45c3-bdd8-9cbf60e1b3a2/-/resize/x256/-/format/auto/\",\n  },\n  {\n    id: 4,\n    price: 65,\n    name: \"Бальзамик\",\n    weight: 50,\n    category: [\n      ProductCategory.BREAKFAST,\n      ProductCategory.LUNCH,\n      ProductCategory.DINNER,\n    ],\n    src:\n      \"https://ucarecdn.com/cac9072a-97c3-400f-a366-93e824bf33b9/-/resize/x256/-/format/auto/\",\n  },\n  {\n    id: 5,\n    price: 75,\n    name: \"Соевый соус\",\n    weight: 50,\n    category: [ProductCategory.LUNCH, ProductCategory.DINNER],\n    src:\n      \"https://ucarecdn.com/3f5069bf-c247-4848-b17d-17a286919179/-/resize/x256/-/format/auto/\",\n  },\n  {\n    id: 6,\n    price: 45,\n    name: \"Сацебели\",\n    weight: 50,\n    category: [ProductCategory.LUNCH, ProductCategory.DINNER],\n    src:\n      \"https://ucarecdn.com/75cb7926-1cee-49a1-a513-a51b11b2f632/-/resize/x256/-/format/auto/\",\n  },\n  {\n    id: 7,\n    price: 50,\n    name: \"ТарТар\",\n    weight: 30,\n    category: [ProductCategory.LUNCH, ProductCategory.DINNER],\n    src:\n      \"https://ucarecdn.com/57e98ec3-00ce-4910-8338-efa0c071f869/-/resize/x256/-/format/auto/\",\n  },\n];\n","import AxiosStatis, { AxiosInstance } from \"axios\";\nimport { urls } from \"app/shared/constants/urls.const\";\n\nexport enum HttpStatusValues {\n  Unauthorized = 401,\n  Forbidden = 403,\n  NotFound = 404,\n  InternalServerError = 500,\n  GatewayTimeout = 504,\n}\n\nexport const axiosInstance: AxiosInstance = AxiosStatis.create({\n  baseURL: urls.apiUrl,\n});\n","import { OrderStatuses, PaymentTypes } from \"../../shared/constants\";\nimport { OrderModel } from \"../../store/orders/orders.model\";\nimport { ProductListMock } from \"../productList\";\n\nexport const OrderListMock: OrderModel[] = [\n  {\n    id: 1,\n    EmployeeId: 1,\n    startDate: new Date(),\n    endDate: new Date(),\n    productList: [...ProductListMock],\n    pyamentType: PaymentTypes.PAY,\n    status: OrderStatuses.COMPLETED,\n    cutlery: 0,\n    delivery: {\n      courierId: 1,\n      price: 150,\n      startDate: new Date(),\n      endDate: new Date(),\n      comment: \"Третий этаж\",\n    },\n  },\n  {\n    id: 2,\n    EmployeeId: 2,\n    startDate: new Date(),\n    endDate: new Date(),\n    productList: [...ProductListMock],\n    pyamentType: PaymentTypes.PAY,\n    status: OrderStatuses.COMPLETED,\n    cutlery: 0,\n  },\n  {\n    id: 3,\n    EmployeeId: 3,\n    startDate: new Date(),\n    endDate: new Date(),\n    productList: [...ProductListMock],\n    pyamentType: PaymentTypes.PAY,\n    status: OrderStatuses.COMPLETED,\n    cutlery: 0,\n  },\n  {\n    id: 4,\n    EmployeeId: 4,\n    startDate: new Date(),\n    endDate: new Date(),\n    productList: [...ProductListMock],\n    pyamentType: PaymentTypes.PAY,\n    status: OrderStatuses.COMPLETED,\n    cutlery: 0,\n    delivery: {\n      courierId: 2,\n      price: 150,\n      startDate: new Date(),\n      endDate: new Date(),\n    },\n  },\n];\n","import { getCardProduct } from \"../../store/cardProduct/cardProduct.utils\";\nimport { CardProductModel } from \"../../store/cardProduct/cardProduct.model\";\nimport {\n  ExtraProductModel,\n  ProductModel,\n} from \"../../store/products/products.model\";\nimport { ProductBasketModel } from \"../../store/shoppingBasket/shoppingBasket.model\";\nimport { OrderModel } from \"../../store/orders/orders.model\";\nimport { OrderListMock } from \"../../mocks/orderList\";\nimport { ExtraProductListMock, ProductListMock } from \"../../mocks/productList\";\n\nclass ServieApi {\n  /** Получить карточку продукта */\n  public getCardProduct = async (\n    id: number,\n    productList: ProductModel[],\n    extraProductList: ExtraProductModel[]\n  ): Promise<CardProductModel | undefined> => {\n    return getCardProduct(id, productList, extraProductList);\n  };\n\n  /** Получить список покупок пользователя */\n  public getOrderList = async (\n    idEmployee: number\n  ): Promise<{ data: OrderModel[] }> => {\n    return { data: OrderListMock };\n  };\n\n  /** Получить полынй список продуктов */\n  public getProductList = async (): Promise<{ data: ProductModel[] }> => {\n    return { data: ProductListMock };\n  };\n\n  /** Получить полный список доп.продуктов */\n  public getExtraProductList = async (): Promise<{\n    data: ExtraProductModel[];\n  }> => {\n    return { data: ExtraProductListMock };\n  };\n\n  /** Получить информацию о пользователе */\n  public getUser = async (id: number) => {};\n\n  /** Отправить заказ */\n  public sendShoppingBasket = async (item: ProductBasketModel) => {};\n}\n\nexport const serviceApi = new ServieApi();\n","import { ActionFunction1, createAction, Action } from \"redux-actions\";\nimport { Dispatch } from \"redux\";\nimport { OrderModel } from \"./orders.model\";\nimport { serviceApi } from \"../../shared/http/api\";\n\nclass OrdersActions {\n  readonly prefix: string = \"ORDERS\";\n  readonly SET_ORDER_LIST: string = `${this.prefix}.SET_ORDER_LIST`;\n  readonly SET_STATUS_LOADING: string = `${this.prefix}.SET_STATUS_LOADING`;\n\n  setOrderList: ActionFunction1<\n    OrderModel[],\n    Action<OrderModel[]>\n  > = createAction(this.SET_ORDER_LIST);\n\n  setStatusLoading: ActionFunction1<boolean, Action<boolean>> = createAction(\n    this.SET_STATUS_LOADING\n  );\n\n  fetchOrderList = (idEmployee: number) => async (dispatch: Dispatch) => {\n    dispatch(this.setStatusLoading(true));\n\n    try {\n      const response = await serviceApi.getOrderList(idEmployee);\n      const data = response.data;\n      dispatch(this.setOrderList(data));\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить список заказов, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n}\n\nexport const ordersActions = new OrdersActions();\n","import { Action, handleActions } from \"redux-actions\";\n\nimport { ordersActions } from \"./orders.actions\";\n\nimport { OrderModel, OrdersStateModel } from \"./orders.model\";\n\nconst initialState: OrdersStateModel = {\n  list: [],\n  isLoading: false,\n};\n\nconst setOrderList = (\n  state: OrdersStateModel,\n  action: Action<OrderModel[]>\n): OrdersStateModel => ({\n  ...state,\n  list: action.payload,\n  isLoading: false,\n});\n\nconst setStatusLoading = (\n  state: OrdersStateModel,\n  action: Action<boolean>\n): OrdersStateModel => ({\n  ...state,\n  isLoading: action.payload,\n});\n\nconst reduceMap: { [key: string]: any } = {\n  [ordersActions.SET_ORDER_LIST]: setOrderList,\n  [ordersActions.SET_STATUS_LOADING]: setStatusLoading,\n};\n\nexport const ordersReducer = handleActions(reduceMap, initialState);\n","import { PermissionList } from \"app/shared/constants/permissions.const\";\nimport { UserModel } from \"app/store/profile/profile.model\";\n\nexport const EmployeeListMock: UserModel[] = [\n  {\n    id: 1,\n    name: \"Employee Admin\",\n    cash: 35_000,\n    permissions: PermissionList.ADMIN,\n    location: [\n      {\n        city: \"Тюмень\",\n        street: \"Челюскинцев\",\n        house: \"10\",\n        businessCenter: \"БЦ Альянс\",\n        startDate: new Date(),\n        endDate: new Date(),\n      },\n      {\n        city: \"Тюмень\",\n        street: \"Пермякова\",\n        house: \"1 строение 5\",\n        businessCenter: \"БЦ Альянс\",\n        startDate: new Date(),\n        endDate: new Date(),\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: \"Employee User\",\n    cash: 11_030,\n    permissions: PermissionList.USER,\n    location: [\n      {\n        city: \"Тюмень\",\n        street: \"Пермякова\",\n        house: \"1 строение 5\",\n        businessCenter: \"БЦ Альянс\",\n        startDate: new Date(),\n        endDate: new Date(),\n      },\n    ],\n  },\n];\n","import {\n  ActionFunction0,\n  ActionFunction1,\n  createAction,\n  Action,\n} from \"redux-actions\";\nimport { Dispatch } from \"redux\";\nimport { AUTH_DATA, urls } from \"../../shared/constants\";\nimport { UserModel } from \"./profile.model\";\nimport { EmployeeListMock } from \"../../mocks/userList\";\n\nclass ProfileActions {\n  readonly prefix: string = \"PROFILE\";\n  readonly SET_USER_DATA: string = `${this.prefix}.SET_USER_DATA`;\n  readonly CLEAR_USER_DATA: string = `${this.prefix}.CLEAR_USER_DATA`;\n  readonly SET_STATUS_LOADING: string = `${this.prefix}.SET_STATUS_LOADING`;\n\n  setUserData: ActionFunction1<UserModel, Action<UserModel>> = createAction(\n    this.SET_USER_DATA\n  );\n  clearUserData: ActionFunction0<Action<any>> = createAction(\n    this.CLEAR_USER_DATA\n  );\n  setStatusLoading: ActionFunction1<boolean, Action<boolean>> = createAction(\n    this.SET_STATUS_LOADING\n  );\n\n  login: any = (userData: UserModel) => (dispatch: Dispatch) => {\n    dispatch(this.setStatusLoading(true));\n    try {\n      localStorage.setItem(AUTH_DATA, userData.id.toString());\n      dispatch(this.setUserData(userData));\n    } catch (e) {\n      window.confirm(\n        `При попытке аторизации пользователя, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n\n  logout: any = () => (dispatch: Dispatch) => {\n    dispatch(this.clearUserData());\n    window.location.href = urls.logout;\n  };\n\n  fetchUserData: any = () => async (dispatch: Dispatch) => {\n    dispatch(this.setStatusLoading(true));\n    try {\n      /** const user: UserModel | undefined = undefined;\n      localStorage.setItem(AUTH_DATA, user.id.toString());\n      dispatch(this.setUserData(user)); */\n\n      const isAuth = !!localStorage.getItem(AUTH_DATA);\n\n      if (isAuth) {\n        dispatch(this.login(EmployeeListMock[0]));\n      }\n\n      if (!isAuth) {\n        dispatch(this.clearUserData());\n      }\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить данные пользователя, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n}\n\nexport const profileActions = new ProfileActions();\n","import { ProfileState, UserModel } from \"./profile.model\";\nimport { Action, handleActions } from \"redux-actions\";\nimport { profileActions } from \"./profile.actions\";\nimport { EmployeeListMock } from \"../../mocks/userList\";\n\nconst initialState: ProfileState = {\n  user: EmployeeListMock[0],\n  isLoading: false,\n};\n\nconst setUserData = (state: ProfileState, action: Action<UserModel>) => ({\n  ...state,\n  user: action.payload,\n  isLoading: false,\n});\n\nconst clearUserData = (state: ProfileState) => ({\n  ...state,\n  user: undefined,\n  isLoading: false,\n});\n\nconst setStatusLoading = (state: ProfileState, action: Action<boolean>) => ({\n  ...state,\n  isLoading: action.payload,\n});\n\nconst reduceMap: { [key: string]: any } = {\n  [profileActions.SET_USER_DATA]: setUserData,\n  [profileActions.CLEAR_USER_DATA]: clearUserData,\n  [profileActions.SET_STATUS_LOADING]: setStatusLoading,\n};\n\nexport const profileReducer = handleActions(reduceMap, initialState);\n","import { StoreModel } from \"../store.model\";\n\nexport const getProfile = (state: StoreModel) => state.profile;\n","export enum RouteUrls {\n  MAIN = \"\",\n  LOGIN = \"/login\",\n  PAY = \"/pay\",\n  PERSONAL = \"/personal\",\n  PRODUCTS = \"/products/\",\n  PROMO_CODE = \"/promo-code\",\n}\n\nexport enum ActionUrls {\n  CREATE = \"create\",\n  VIEW = \"view\",\n  EDIT = \"edit\",\n}\n","import { ActionFunction1, createAction, Action } from \"redux-actions\";\nimport { Dispatch } from \"redux\";\n\nimport { CoordinatesModel } from \"./coordinates.model\";\nimport { axiosInstance } from \"../../shared/http/httpClient\";\nimport { urls } from \"../../shared/constants\";\n\nclass CoordinatesActions {\n  readonly prefix: string = \"COORDINATES\";\n  readonly SET_STATUS_LOADING: string = `${this.prefix}.SET_STATUS_LOADING`;\n  readonly SET_COORDINATES: string = `${this.prefix}.SET_COORDINATES`;\n  readonly SET_GEOLOCATION: string = `${this.prefix}.SET_GEOLOCATION`;\n\n  setStatusLoading: ActionFunction1<boolean, Action<boolean>> = createAction(\n    this.SET_STATUS_LOADING\n  );\n  setCoordinates: ActionFunction1<\n    CoordinatesModel | undefined,\n    Action<CoordinatesModel | undefined>\n  > = createAction(this.SET_COORDINATES);\n\n  setGeolocation: ActionFunction1<any, Action<any>> = createAction(\n    this.SET_GEOLOCATION\n  );\n\n  fetchCoordinates = () => (dispatch: Dispatch) => {\n    dispatch(this.setStatusLoading(true));\n    try {\n      if (!navigator?.geolocation) return undefined;\n\n      navigator.geolocation.getCurrentPosition(({ coords }) => {\n        dispatch(\n          this.setCoordinates({\n            latitude: coords.latitude,\n            longitude: coords.longitude,\n          })\n        );\n      });\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить координаты устройства, произошла ошибка: ${e.message}`\n      );\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n\n  fetchGeoLocation = (coords: CoordinatesModel) => async (\n    dispatch: Dispatch\n  ) => {\n    const token = \"46c3cf317a3e408a88ccefa30701b1e5\";\n    const { latitude, longitude } = coords;\n    const url = `${urls.geolocation}json?q=${latitude}+${longitude}&key=${token}`;\n\n    dispatch(this.setStatusLoading(true));\n    try {\n      const response = await axiosInstance.get(url);\n\n      dispatch(this.setGeolocation(response?.data?.results?.[0]?.components));\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить местоположение устройства, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n}\n\nexport const coordinatesActions = new CoordinatesActions();\n","import { Action, handleActions } from \"redux-actions\";\nimport { coordinatesActions } from \"./coordinates.actions\";\n\nimport {\n  CoordinatesModel,\n  CoordinatesStateModel,\n  GeolocationModel,\n} from \"./coordinates.model\";\n\nconst initialState: CoordinatesStateModel = {\n  coordinates: undefined,\n  geolocation: undefined,\n  isLoading: false,\n};\n\nconst setCoordinates = (\n  state: CoordinatesStateModel,\n  action: Action<CoordinatesModel>\n): CoordinatesStateModel => ({\n  ...state,\n  coordinates: action.payload,\n  isLoading: false,\n});\n\nconst setGeolocation = (\n  state: CoordinatesStateModel,\n  action: Action<GeolocationModel>\n): CoordinatesStateModel => ({\n  ...state,\n  geolocation: action.payload,\n  isLoading: false,\n});\n\nconst setStatusLoading = (\n  state: CoordinatesStateModel,\n  action: Action<boolean>\n): CoordinatesStateModel => ({\n  ...state,\n  isLoading: action.payload,\n});\n\nconst reduceMap: { [key: string]: any } = {\n  [coordinatesActions.SET_COORDINATES]: setCoordinates,\n  [coordinatesActions.SET_GEOLOCATION]: setGeolocation,\n  [coordinatesActions.SET_STATUS_LOADING]: setStatusLoading,\n};\n\nexport const coordinatesReducer = handleActions(reduceMap, initialState);\n","import { StoreModel } from \"../store.model\";\n\nexport const getCoordinates = (state: StoreModel) => state.coordinates;\n","import React, { FC, memo, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ordersActions } from \"../../store/orders\";\nimport { getProfile } from \"../../store/profile\";\nimport { coordinatesActions, getCoordinates } from \"../../store/coordinates\";\n\nimport \"./MainLayout.scss\";\n\nexport const MainLayout: FC = memo(({ children }) => {\n  const { user, isLoading } = useSelector(getProfile);\n  const { coordinates, geolocation } = useSelector(getCoordinates);\n  const dispatch = useDispatch();\n\n  /** Проверяем информацию о пользователе */\n  // useEffect(() => {\n  //   dispatch(profileActions.fetchUserData());\n  // }, [dispatch]);\n\n  /** Редиректы */\n  // useEffect(() => {\n  //   if (!user) {\n  //     history.push(\n  //       routerBuilder.generateSimpleSubRoutePattern(\n  //         RouteUrls.MAIN,\n  //         RouteUrls.LOGIN\n  //       )\n  //     );\n  //   }\n  // }, [user, history]);\n\n  /** Запрашиваем список заказов */\n  useEffect(() => {\n    if (!!user) {\n      dispatch(ordersActions.fetchOrderList(user.id));\n    }\n  }, [user, dispatch]);\n\n  /** Запрашиваем координаты */\n  useEffect(() => {\n    if (!!user && !coordinates) {\n      dispatch(coordinatesActions.fetchCoordinates());\n    }\n  }, [user, coordinates, dispatch]);\n\n  /** Запрашиваем местоположение */\n  useEffect(() => {\n    if (\n      !!user &&\n      !geolocation &&\n      !!coordinates?.latitude &&\n      !!coordinates?.longitude\n    ) {\n      dispatch(coordinatesActions.fetchGeoLocation(coordinates));\n    }\n  }, [user, geolocation, coordinates, dispatch]);\n\n  const content = useMemo(\n    () => !isLoading && <div className=\"main-layout__content\">{children}</div>,\n    [isLoading, children]\n  );\n\n  return <div className=\"main-layout\">{content}</div>;\n});\n","export enum ButtonMode {\n  DEFAULT = \"DEFAULT\",\n  MINI = \"MINI\",\n}\n\nexport interface ButtonModel {\n  title: string;\n  handleAdd: any;\n  handleRemove: any;\n  disabled?: boolean;\n  count?: number;\n  mode?: ButtonMode;\n}\n","import { Dispatch } from \"redux\";\nimport {\n  ActionFunction1,\n  ActionFunction0,\n  createAction,\n  Action,\n} from \"redux-actions\";\nimport { serviceApi } from \"../../shared/http/api\";\nimport { StoreModel } from \"../store.model\";\nimport { CardProductModel } from \"./cardProduct.model\";\n\nclass CardProductActions {\n  readonly prefix: string = \"CARD_PRODUCT\";\n  readonly SET_CARD_PRODUCT: string = `${this.prefix}.SET_CARD_PRODUCT`;\n  readonly CLEAR_CARD_PRODUCT: string = `${this.prefix}.CLEAR_CARD_PRODUCT`;\n  readonly SET_STATUS_LOADING: string = `${this.prefix}.SET_STATUS_LOADING`;\n\n  setCardProduct: ActionFunction1<\n    CardProductModel | undefined,\n    Action<CardProductModel | undefined>\n  > = createAction(this.SET_CARD_PRODUCT);\n\n  clearCardProduct: ActionFunction0<Action<any>> = createAction(\n    this.CLEAR_CARD_PRODUCT\n  );\n\n  setStatusLoading: ActionFunction1<boolean, Action<boolean>> = createAction(\n    this.SET_STATUS_LOADING\n  );\n\n  fetchCardProduct = (id: number, redirectToProductList: () => any) => async (\n    dispatch: Dispatch,\n    getState: () => StoreModel\n  ) => {\n    dispatch(this.setStatusLoading(true));\n\n    const { productList } = getState()?.products;\n    const { extraProductList } = getState()?.products;\n\n    try {\n      const response = await serviceApi.getCardProduct(\n        id,\n        productList,\n        extraProductList\n      );\n\n      if (!response) {\n        redirectToProductList();\n      }\n\n      dispatch(this.setCardProduct(response));\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить карточку продукта, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n}\n\nexport const cardProductActions = new CardProductActions();\n","import { Action, handleActions } from \"redux-actions\";\nimport { cardProductActions } from \"./cardProduct.actions\";\nimport { CardProductModel, CardProductStateModel } from \"./cardProduct.model\";\n\nconst initialState: CardProductStateModel = {\n  card: undefined,\n  isLoading: false,\n};\n\nconst setCardProduct = (\n  state: CardProductStateModel,\n  action: Action<CardProductModel>\n): CardProductStateModel => ({\n  ...state,\n  card: action.payload,\n  isLoading: false,\n});\n\nconst clearCardProduct = (\n  state: CardProductStateModel\n): CardProductStateModel => ({\n  ...state,\n  card: undefined,\n  isLoading: false,\n});\n\nconst setStatusLoading = (\n  state: CardProductStateModel,\n  action: Action<boolean>\n): CardProductStateModel => ({\n  ...state,\n  isLoading: action.payload,\n});\n\nconst reduceMap: { [key: string]: any } = {\n  [cardProductActions.SET_CARD_PRODUCT]: setCardProduct,\n  [cardProductActions.CLEAR_CARD_PRODUCT]: clearCardProduct,\n  [cardProductActions.SET_STATUS_LOADING]: setStatusLoading,\n};\n\nexport const cardProductsReducer = handleActions(reduceMap, initialState);\n","import { StoreModel } from \"../store.model\";\n\nexport const getCardProduct = (state: StoreModel) => state.cardProduct;\n","import { generatePath } from \"react-router\";\n\nimport { RouteUrls, ActionUrls } from \"./routing.enums\";\n\nclass RouterBuilder {\n  PRODUCTS_CREATE_PATH = `${RouteUrls.PRODUCTS}:mode(${ActionUrls.CREATE})`;\n  PRODUCTS_VIEW_EDIT_PATH = `${RouteUrls.PRODUCTS}:mode(${ActionUrls.VIEW}|${ActionUrls.EDIT})/:id`;\n\n  generateSimpleSubRoutePattern(route: string, subRoute: string) {\n    return `${route}${subRoute}`;\n  }\n\n  buildProductPath(params: { mode: ActionUrls; id?: number }) {\n    const { mode, id } = params;\n    return mode === ActionUrls.CREATE\n      ? generatePath(this.PRODUCTS_CREATE_PATH, { mode })\n      : generatePath(this.PRODUCTS_VIEW_EDIT_PATH, { mode, id });\n  }\n}\n\nexport const routerBuilder = new RouterBuilder();\n","import React, { FC, memo } from \"react\";\n\nimport \"./PropertyBlock.scss\";\n\nexport const PropertyBlock: FC<{ title: string; subTitle: string }> = memo(\n  ({ title, subTitle }) => {\n    return (\n      <div className=\"property-block\">\n        <div className=\"property-block__title\">{title}</div>\n        <div className=\"property-block__subTitle\">{subTitle}</div>\n      </div>\n    );\n  }\n);\n","import React, { FC, memo } from \"react\";\n\nimport { PropertyBlock } from \"../PropertyBlock\";\nimport { PropertyListModel } from \"./PropertyList.model\";\n\nimport \"./PropertyList.scss\";\n\nexport const PropertyList: FC<PropertyListModel> = memo(({ list }) => {\n  return (\n    <div className=\"property-list\">\n      {list.map(({ title, subTitle }, key) => (\n        <PropertyBlock title={title} subTitle={subTitle} key={key} />\n      ))}\n    </div>\n  );\n});\n","import { ProductModel } from \"../../../../store/products/products.model\";\n\nexport enum OrientationMode {\n  VERTICAL = \"VERTICAL\",\n  HORIZONTAL = \"HORIZONTAL\",\n}\n\nexport interface ExtraProductListModel {\n  product: ProductModel;\n  orientation?: OrientationMode;\n}\n","import React, { FC, memo, useMemo } from \"react\";\n\nimport { ButtonMode, ButtonModel } from \"./Button.model\";\n\nimport \"./Button.scss\";\n\nexport const Button: FC<ButtonModel> = memo(\n  ({\n    title,\n    handleAdd,\n    handleRemove,\n    disabled,\n    count = 0,\n    mode = ButtonMode.DEFAULT,\n  }) => {\n    const defaultContent = useMemo(() => {\n      if (count > 0) {\n        return (\n          <div className=\"button-group button\">\n            <div className=\"button-group__button\" onClick={handleRemove}>\n              -\n            </div>\n            <div className=\"button-group__count\">{count}</div>\n            <div className=\"button-group__button\" onClick={handleAdd}>\n              +\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"button\" onClick={handleAdd}>\n          {title}\n        </div>\n      );\n    }, [count, handleRemove, handleAdd, title]);\n\n    const miniContent = useMemo(() => {\n      if (count > 0) {\n        return (\n          <div className=\"button-group button\">\n            <div className=\"button-group__button\" onClick={handleRemove}>\n              -\n            </div>\n            <div className=\"button-group__count\">{count}</div>\n            <div className=\"button-group__button\" onClick={handleAdd}>\n              +\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"button\" onClick={handleAdd}>\n          {title}\n          <div className=\"button__add\"/>\n        </div>\n      );\n    }, [count, handleRemove, handleAdd, title]);\n\n    const button = useMemo(() => {\n      switch (mode) {\n        case ButtonMode.DEFAULT:\n          return defaultContent;\n\n        case ButtonMode.MINI:\n          return miniContent;\n\n        default:\n          return defaultContent;\n      }\n    }, [mode, defaultContent, miniContent]);\n\n    return button;\n  }\n);\n","import { ActionFunction1, createAction, Action } from \"redux-actions\";\nimport { Dispatch } from \"redux\";\n\nimport { StoreModel } from \"app/store/store.model\";\nimport { ProductBasketModel } from \"./shoppingBasket.model\";\n\nclass ShoppingBasketActions {\n  readonly prefix: string = \"SHOPPING_BASKET\";\n  readonly SET_PRODUCT: string = `${this.prefix}.SET_PRODUCT`;\n  readonly SET_EXTRA_PRODUCT: string = `${this.prefix}.SET_EXTRA_PRODUCT`;\n  readonly REMOVE_PRODUCT: string = `${this.prefix}.REMOVE_PRODUCT`;\n  readonly REMOVE_EXTRA_PRODUCT: string = `${this.prefix}.REMOVE_EXTRA_PRODUCT`;\n  readonly SET_STATUS_LOADING: string = `${this.prefix}.SET_STATUS_LOADING`;\n\n  setProduct: ActionFunction1<\n    ProductBasketModel[],\n    Action<ProductBasketModel[]>\n  > = createAction(this.SET_PRODUCT);\n\n  setExtraProduct: ActionFunction1<\n    ProductBasketModel[],\n    Action<ProductBasketModel[]>\n  > = createAction(this.SET_EXTRA_PRODUCT);\n\n  removeProduct: ActionFunction1<\n    ProductBasketModel[],\n    Action<ProductBasketModel[]>\n  > = createAction(this.REMOVE_PRODUCT);\n\n  removeExtraProduct: ActionFunction1<\n    ProductBasketModel[],\n    Action<ProductBasketModel[]>\n  > = createAction(this.REMOVE_EXTRA_PRODUCT);\n\n  setStatusLoading: ActionFunction1<boolean, Action<boolean>> = createAction(\n    this.SET_STATUS_LOADING\n  );\n\n  sendBasket: any = () => async (\n    dispatch: Dispatch,\n    getState: () => StoreModel\n  ) => {\n    const { list } = getState().shoppingBasket;\n    dispatch(this.setStatusLoading(true));\n    try {\n    } catch (e) {\n      window.confirm(\n        `При попытке заказать продукты, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n}\n\nexport const shoppingBasketActions = new ShoppingBasketActions();\n","import { Action, handleActions } from \"redux-actions\";\nimport { shoppingBasketActions } from \"./shoppingBasket.actions\";\nimport {\n  ProductBasketModel,\n  ShoppingBasketStateModel,\n} from \"./shoppingBasket.model\";\n\nconst initialState: ShoppingBasketStateModel = {\n  list: [],\n  isLoading: false,\n};\n\nconst setProduct = (\n  state: ShoppingBasketStateModel,\n  action: Action<ProductBasketModel[]>\n): ShoppingBasketStateModel => ({\n  ...state,\n  list: [...action.payload],\n  isLoading: false,\n});\n\nconst setExtraProduct = (\n  state: ShoppingBasketStateModel,\n  action: Action<ProductBasketModel[]>\n): ShoppingBasketStateModel => ({\n  ...state,\n  list: [...action.payload],\n  isLoading: false,\n});\n\nconst removeProduct = (\n  state: ShoppingBasketStateModel,\n  action: Action<ProductBasketModel[]>\n): ShoppingBasketStateModel => ({\n  ...state,\n  list: [...action.payload],\n  isLoading: false,\n});\n\nconst removeExtraProduct = (\n  state: ShoppingBasketStateModel,\n  action: Action<ProductBasketModel[]>\n): ShoppingBasketStateModel => ({\n  ...state,\n  list: [...action.payload],\n  isLoading: false,\n});\n\nconst setStatusLoading = (\n  state: ShoppingBasketStateModel,\n  action: Action<boolean>\n): ShoppingBasketStateModel => ({\n  ...state,\n  isLoading: action.payload,\n});\n\nconst reduceMap: { [key: string]: any } = {\n  [shoppingBasketActions.SET_PRODUCT]: setProduct,\n  [shoppingBasketActions.SET_EXTRA_PRODUCT]: setExtraProduct,\n  [shoppingBasketActions.SET_STATUS_LOADING]: setStatusLoading,\n  [shoppingBasketActions.REMOVE_PRODUCT]: removeProduct,\n  [shoppingBasketActions.REMOVE_EXTRA_PRODUCT]: removeExtraProduct,\n};\n\nexport const shoppingBasketReducer = handleActions(reduceMap, initialState);\n","import { StoreModel } from \"../store.model\";\n\nexport const getShoppingBasket = (state: StoreModel) => state.shoppingBasket;\n","/**\n * Возвращаю индекс элемента в массиве\n * @param list\n * @param item\n */\nexport const getIndexElementProduct = <T extends { id: number }>(\n  list: T[],\n  item: { id: number }\n): number => list?.findIndex(({ id }) => id === item.id);\n","import React, { FC, memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Button } from \"app/shared/components/Button\";\nimport {\n  getShoppingBasket,\n  shoppingBasketActions,\n} from \"app/store/shoppingBasket\";\nimport {\n  getCountOfCoincidencesExtra,\n  removeExtraProductUtils,\n  setExtraProductUtils,\n} from \"app/store/shoppingBasket/utils/extraProduct.utils\";\nimport { ExtraProductBlockModel } from \"./ExtraProductBlock.model\";\n\nimport \"./ExtraProductBlock.scss\";\n\nexport const ExtraProductBlock: FC<ExtraProductBlockModel> = memo(\n  ({ product, extraProduct }) => {\n    const { src, name, weight, price } = extraProduct;\n    const dispatch = useDispatch();\n\n    const { list } = useSelector(getShoppingBasket);\n\n    const [countOfCoincidences, setCountOfCoincidences] = useState(0);\n\n    const addProductToBasket = useCallback(() => {\n      if (!extraProduct) return;\n\n      const prepareData = setExtraProductUtils(product, extraProduct, list);\n      dispatch(shoppingBasketActions.setExtraProduct(prepareData));\n    }, [dispatch, product, extraProduct, list]);\n\n    const removeProductToBasket = useCallback(() => {\n      if (!extraProduct) return;\n\n      const prepareData = removeExtraProductUtils(product, extraProduct, list);\n      dispatch(shoppingBasketActions.removeExtraProduct(prepareData));\n    }, [dispatch, product, extraProduct, list]);\n\n    /** Проверяем кол-во совпадений текущего доп. продукта, с кол-вом которое лежит в корзине */\n    useEffect(() => {\n      if (!extraProduct) return;\n\n      setCountOfCoincidences(\n        getCountOfCoincidencesExtra(product, extraProduct, list)\n      );\n    }, [extraProduct, product, list]);\n\n    return (\n      <div className=\"extra-product-block\">\n        <div className=\"extra-product-block__properties\">\n          <img src={src} alt={name} loading=\"lazy\" />\n          <div>\n            <div className=\"properties__title\">{name}</div>\n            <div className=\"properties__subTitle\">{`${weight} г`}</div>\n          </div>\n        </div>\n        <Button\n          title={`${price} ₽`}\n          handleAdd={addProductToBasket}\n          handleRemove={removeProductToBasket}\n          count={countOfCoincidences}\n        />\n      </div>\n    );\n  }\n);\n","import { ExtraProductModel, ProductModel } from \"../../products/products.model\";\nimport { ProductBasketModel } from \"../shoppingBasket.model\";\nimport { getIndexElementProduct } from \"../shoppingBasket.utils\";\n\n/**\n * Возвращаю кол-во повторений\n * для { ExtraProductModel }\n */\nexport const getCountOfCoincidencesExtra = (\n  product: ProductModel,\n  extraProduct: ExtraProductModel,\n  list: ProductBasketModel[]\n): number => {\n  let count = 0;\n\n  list.forEach(({ extraProductList, id }) => {\n    if (id === product.id) {\n      extraProductList.forEach(({ id, countProduct }) => {\n        if (id === extraProduct.id) {\n          count = countProduct;\n        }\n      });\n    }\n  });\n\n  return count;\n};\n\n/**\n * Добавляю доп. продукт к основному продукту, в массиве основных продуктов\n */\nexport const setExtraProductUtils = (\n  product: ProductModel,\n  extraProduct: ExtraProductModel,\n  list: ProductBasketModel[]\n): ProductBasketModel[] => {\n  const resultList: ProductBasketModel[] = [...list];\n\n  /** Порядковый индекс основного продукта, в массиве продуктов */\n  const productIndex = getIndexElementProduct(list, product);\n  /** Порядковый индекс доп. продукта элемента, в массиве доп. продуктов */\n  const extraProductIndex = getIndexElementProduct(\n    list?.[productIndex]?.extraProductList,\n    extraProduct\n  );\n  const countProduct =\n    resultList?.[productIndex]?.extraProductList?.[extraProductIndex]\n      ?.countProduct || 0;\n\n  /** Если такого доп. продукта еще нет, то добавляем его */\n  if (extraProductIndex < 0) {\n    resultList[productIndex].extraProductList.push({\n      ...extraProduct,\n      countProduct: 1,\n    });\n\n    return resultList;\n  }\n\n  /** Если такой продукт есть, увеличиваем счетчик на единицу */\n  if (extraProductIndex >= 0) {\n    resultList[productIndex].extraProductList[extraProductIndex].countProduct =\n      countProduct + 1;\n    return resultList;\n  }\n\n  return resultList;\n};\n\n/**\n * Удалаяю доп. продукт из основного продукту, в массиве основных продуктов\n */\nexport const removeExtraProductUtils = (\n  product: ProductModel,\n  extraProduct: ExtraProductModel,\n  list: ProductBasketModel[]\n): ProductBasketModel[] => {\n  const resultList: ProductBasketModel[] = [...list];\n\n  /** Порядковый индекс основного продукта, в массиве продуктов */\n  const productIndex = getIndexElementProduct(list, product);\n  /** Порядковый индекс доп. продукта элемента, в массиве доп. продуктов */\n  const extraProductIndex = getIndexElementProduct(\n    list?.[productIndex]?.extraProductList,\n    extraProduct\n  );\n  const countProduct =\n    resultList?.[productIndex]?.extraProductList?.[extraProductIndex]\n      ?.countProduct || 0;\n\n  /** Если такой продукт есть и он последний, то удаляем продукт */\n  if (extraProductIndex >= 0 && countProduct === 1) {\n    resultList[productIndex].extraProductList.splice(extraProductIndex, 1);\n\n    if (!resultList[productIndex].extraProductList?.length) {\n      resultList[productIndex].extraProductList = [];\n    }\n\n    return resultList;\n  }\n\n  /** Если такой продукт есть, уменьшаем счетчик на единицу */\n  if (extraProductIndex >= 0) {\n    resultList[productIndex].extraProductList[extraProductIndex].countProduct =\n      countProduct - 1;\n    return resultList;\n  }\n\n  return resultList;\n};\n","import { ActionFunction1, createAction, Action } from \"redux-actions\";\nimport { Dispatch } from \"redux\";\nimport { ExtraProductModel, ProductModel } from \"./products.model\";\nimport { serviceApi } from \"../../shared/http/api\";\n\nclass ProductsActions {\n  readonly prefix: string = \"PRODUCTS\";\n  readonly SET_PRODUCT_LIST: string = `${this.prefix}.SET_PRODUCT_LIST`;\n  readonly SET_EXTRA_PRODUCT_LIST: string = `${this.prefix}.SET_EXTRA_PRODUCT_LIST`;\n  readonly SET_STATUS_LOADING: string = `${this.prefix}.SET_STATUS_LOADING`;\n\n  setProductList: ActionFunction1<\n    ProductModel[],\n    Action<ProductModel[]>\n  > = createAction(this.SET_PRODUCT_LIST);\n\n  setExtraProductList: ActionFunction1<\n    ExtraProductModel[],\n    Action<ExtraProductModel[]>\n  > = createAction(this.SET_EXTRA_PRODUCT_LIST);\n\n  setStatusLoading: ActionFunction1<boolean, Action<boolean>> = createAction(\n    this.SET_STATUS_LOADING\n  );\n\n  fetchProductList = () => async (dispatch: Dispatch) => {\n    dispatch(this.setStatusLoading(true));\n\n    try {\n      const response = await serviceApi.getProductList();\n      const data = response.data;\n      dispatch(this.setProductList(data));\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить список продуктов, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n\n  fetchExtraProductList = () => async (dispatch: Dispatch) => {\n    dispatch(this.setStatusLoading(true));\n\n    try {\n      const response = await serviceApi.getExtraProductList();\n      const data = response.data;\n      dispatch(this.setExtraProductList(data));\n    } catch (e) {\n      window.confirm(\n        `При попытке загрузить список дополнительных продуктов, произошла ошибка: ${e.message}`\n      );\n    } finally {\n      dispatch(this.setStatusLoading(false));\n    }\n  };\n}\n\nexport const productsActions = new ProductsActions();\n","import { Action, handleActions } from \"redux-actions\";\nimport { ExtraProductListMock, ProductListMock } from \"../../mocks/productList\";\nimport { productsActions } from \"./products.actions\";\n\nimport {\n  ExtraProductModel,\n  ProductModel,\n  ProductsStateModel,\n} from \"./products.model\";\n\nconst initialState: ProductsStateModel = {\n  productList: [...ProductListMock],\n  extraProductList: [...ExtraProductListMock],\n  isLoading: false,\n};\n\nconst setProdutcList = (\n  state: ProductsStateModel,\n  action: Action<ProductModel[]>\n): ProductsStateModel => ({\n  ...state,\n  productList: action.payload,\n  isLoading: false,\n});\n\nconst setExtraProdutcList = (\n  state: ProductsStateModel,\n  action: Action<ExtraProductModel[]>\n): ProductsStateModel => ({\n  ...state,\n  extraProductList: action.payload,\n  isLoading: false,\n});\n\nconst setStatusLoading = (\n  state: ProductsStateModel,\n  action: Action<boolean>\n): ProductsStateModel => ({\n  ...state,\n  isLoading: action.payload,\n});\n\nconst reduceMap: { [key: string]: any } = {\n  [productsActions.SET_PRODUCT_LIST]: setProdutcList,\n  [productsActions.SET_EXTRA_PRODUCT_LIST]: setExtraProdutcList,\n  [productsActions.SET_STATUS_LOADING]: setStatusLoading,\n};\n\nexport const productsReducer = handleActions(reduceMap, initialState);\n","import { StoreModel } from \"../store.model\";\n\nexport const getProducts = (state: StoreModel) => state.products;\n","import React, { FC, memo, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getExtraProductList } from \"../../../../store/cardProduct/cardProduct.utils\";\nimport { getProducts } from \"../../../../store/products\";\n\nimport { ExtraProductBlock } from \"../ExtraProductBlock\";\n\nimport {\n  ExtraProductListModel,\n  OrientationMode,\n} from \"./ExtraProductList.model\";\n\nimport \"./ExtraProductList.scss\";\n\nexport const ExtraProductList: FC<ExtraProductListModel> = memo(\n  ({ orientation, product }) => {\n    const { extraProductList } = useSelector(getProducts);\n\n    const list = useMemo(() => getExtraProductList(extraProductList, product), [\n      extraProductList,\n      product,\n    ]);\n\n    const classnames = useMemo(\n      () =>\n        `extra-product-list ${\n          orientation === OrientationMode.HORIZONTAL\n            ? \"extra-product-list__mode-horizontal\"\n            : \"\"\n        }`,\n      [orientation]\n    );\n\n    if (!extraProductList?.length) return null;\n\n    return (\n      <div className={classnames}>\n        {list.map((extraProduct, key) => (\n          <ExtraProductBlock\n            product={product}\n            extraProduct={extraProduct}\n            key={key}\n          />\n        ))}\n      </div>\n    );\n  }\n);\n","import { ProductModel } from \"../../products/products.model\";\nimport { ProductBasketModel } from \"../shoppingBasket.model\";\nimport { getIndexElementProduct } from \"../shoppingBasket.utils\";\n\n/**\n * Возвращаю кол-во повторений\n * для { ProductModel }\n */\nexport const getCountOfCoincidencesProduct = (\n  list: ProductBasketModel[],\n  item: ProductModel\n): number => {\n  let count = 0;\n\n  list.forEach(({ id, countProduct }) => {\n    if (id === item.id) {\n      count = countProduct;\n    }\n  });\n\n  return count;\n};\n\n/** Добавляю продукт в массив продуктов */\nexport const setProductUtils = (\n  product: ProductModel,\n  list: ProductBasketModel[]\n): ProductBasketModel[] => {\n  const resultList: ProductBasketModel[] = [...list];\n  let prepareItem: ProductBasketModel = {} as ProductBasketModel;\n\n  /** Если продуктов еще нет, то добавляем первый */\n  if (!resultList?.length) {\n    prepareItem = {\n      ...product,\n      countProduct: 1,\n      extraProductList: [],\n    };\n    resultList.push(prepareItem);\n\n    return resultList;\n  }\n\n  /** Порядковый индекс элемента, в массиве продуктов */\n  const productIndex = getIndexElementProduct(list, product);\n  const countProduct = list?.[productIndex]?.countProduct;\n  const extraProductList = list?.[productIndex]?.extraProductList || [];\n\n  /** Если такого продукта еще нет, то добавляем его */\n  if (productIndex < 0) {\n    prepareItem = {\n      ...product,\n      countProduct: 1,\n      extraProductList: [],\n    };\n\n    resultList.push(prepareItem);\n    return resultList;\n  }\n\n  /** Если такой продукт есть, то увеличиваем счетчик на единицу */\n  if (productIndex >= 0) {\n    prepareItem = {\n      ...product,\n      extraProductList,\n      countProduct: countProduct + 1,\n    };\n\n    resultList[productIndex] = {\n      ...prepareItem,\n    };\n    return resultList;\n  }\n\n  return resultList;\n};\n\n/** Удаляю продукт из массива продуктов */\nexport const removeProductUtils = (\n  product: ProductModel,\n  list: ProductBasketModel[]\n): ProductBasketModel[] => {\n  let resultList: ProductBasketModel[] = [...list];\n  let prepareItem: ProductBasketModel = {} as ProductBasketModel;\n\n  /** Если продуктов итак нет, то возвращаю пустой массив */\n  if (!resultList?.length) {\n    return resultList;\n  }\n\n  /** Порядковый индекс элемента, в массиве продуктов */\n  const productIndex = getIndexElementProduct(list, product);\n  const countProduct = list?.[productIndex]?.countProduct;\n  const extraProductList = list?.[productIndex]?.extraProductList || [];\n\n  /** Если такого продукта итак нет, то возвращаем массив продуктов */\n  if (productIndex < 0) {\n    return resultList;\n  }\n\n  /** Если такой продукт есть и он последний, то удаляем продукт */\n  if (productIndex >= 0 && countProduct === 1) {\n    resultList.splice(productIndex, 1);\n\n    if (!resultList?.length) {\n      resultList = [];\n    }\n\n    return resultList;\n  }\n\n  /** Если такой продукт есть, то уменьшаем счетчик на единицу */\n  if (productIndex >= 0) {\n    prepareItem = {\n      ...product,\n      extraProductList,\n      countProduct: countProduct - 1,\n    };\n\n    resultList[productIndex] = { ...prepareItem };\n    return resultList;\n  }\n\n  return resultList;\n};\n","import { ProductBasketModel } from \"../../../store/shoppingBasket/shoppingBasket.model\";\n\n/** Возвращаю суммарную стоимость товаров в корзине */\nexport const getFullPrice = (list: ProductBasketModel[]): number => {\n  let resultPrice = 0;\n\n  list.forEach(({ extraProductList, price, countProduct }) => {\n    resultPrice += price * countProduct;\n\n    extraProductList?.forEach(({ price, countProduct }) => {\n      resultPrice += price * countProduct;\n    });\n  });\n\n  return resultPrice;\n};\n","import React, { FC, memo, useCallback, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { getShoppingBasket } from \"../../../store/shoppingBasket\";\nimport { routerBuilder } from \"../../../routing/RouterBuilder\";\nimport { RouteUrls } from \"../../../routing/routing.enums\";\nimport { getFullPrice } from \"./ShoppingBasket.utils\";\n\nimport \"./ShoppingBasket.scss\";\n\nexport const ShoppingBasket: FC = memo(() => {\n  const history = useHistory();\n  const { list } = useSelector(getShoppingBasket);\n\n  const fullPrice = useMemo(() => getFullPrice(list), [list]);\n\n  const redirectToPay = useCallback(() => {\n    history.push(\n      routerBuilder.generateSimpleSubRoutePattern(RouteUrls.MAIN, RouteUrls.PAY)\n    );\n  }, [history]);\n\n  if (!fullPrice) return null;\n\n  return (\n    <div\n      className=\"shopping-basket\"\n      onClick={redirectToPay}\n    >{`🏃‍♂️30 минут, ${fullPrice} ₽ →`}</div>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/left-black.8818bf28.svg\";","import React, { FC, memo } from \"react\";\n\nimport { NavBarModel } from \"./NavBar.model\";\n\nimport arrowLeft from \"../../../../assets/navbar/left-black.svg\";\nimport \"./NavBar.scss\";\n\nexport const NavBar: FC<NavBarModel> = memo(({ title, leftCb, rightCb }) => {\n  return (\n    <div className=\"navbar\">\n      {!!leftCb && (\n        <div className=\"navbar__left\" onClick={leftCb}>\n          <img src={arrowLeft} alt=\"вернуться обратно\" />\n        </div>\n      )}\n      <div className=\"navbar__title\">{title}</div>\n      {!!rightCb && <div className=\"navbar__right\" onClick={rightCb} />}\n    </div>\n  );\n});\n","import React, {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { ProductCardRouteParams } from \"../../shared/models/productCard/ProductCardRouteParams.model\";\nimport { ActionUrls, RouteUrls } from \"../../routing/routing.enums\";\nimport { cardProductActions } from \"../../store/cardProduct\";\nimport { routerBuilder } from \"../../routing/RouterBuilder\";\nimport { PropertyList } from \"./components/PropertyList\";\nimport { getCardProduct } from \"../../store/cardProduct\";\nimport { Button } from \"../../shared/components/Button\";\nimport {\n  getShoppingBasket,\n  shoppingBasketActions,\n} from \"../../store/shoppingBasket\";\nimport { ExtraProductList } from \"../../shared/components/ExtraProduct\";\nimport {\n  getCountOfCoincidencesProduct,\n  removeProductUtils,\n  setProductUtils,\n} from \"../../store/shoppingBasket/utils/product.utils\";\n\nimport \"./CardProduct.scss\";\nimport { ShoppingBasket } from \"../../shared/components/ShoppingBasket\";\nimport { NavBar } from \"../../shared/components/NavBar\";\n\nexport const CardProduct: FC = memo(() => {\n  const { mode, id } = useParams<ProductCardRouteParams>();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { list } = useSelector(getShoppingBasket);\n  const { card } = useSelector(getCardProduct);\n\n  const [countOfCoincidences, setCountOfCoincidences] = useState(0);\n\n  const product = card?.product;\n\n  /** Редиректим на список продуктов, если пользак попал в несуществующий продукт */\n  const redirectToProductList = useCallback(() => {\n    history.push(\n      routerBuilder.generateSimpleSubRoutePattern(\n        RouteUrls.MAIN,\n        RouteUrls.PRODUCTS\n      )\n    );\n  }, [history]);\n  useEffect(() => {\n    if (mode !== ActionUrls.CREATE && !!id) {\n      dispatch(\n        cardProductActions.fetchCardProduct(parseInt(id), redirectToProductList)\n      );\n    }\n  }, [id, dispatch, mode, redirectToProductList]);\n\n  /** Очищаем состояние после демонтирования компоненты */\n  useEffect((): (() => void) => {\n    return () => dispatch(cardProductActions.clearCardProduct());\n  }, []);\n\n  /** Проверяем кол-во совпадений текущего продукта, с кол-вом которое лежит в корзине */\n  useEffect(() => {\n    if (!product) return;\n\n    setCountOfCoincidences(getCountOfCoincidencesProduct(list, product));\n  }, [list, product]);\n\n  const addProductToBasket = useCallback(() => {\n    if (!product) return;\n\n    const prepareData = setProductUtils(product, list);\n    dispatch(shoppingBasketActions.setProduct(prepareData));\n  }, [dispatch, product, list]);\n\n  const removeProductToBasket = useCallback(() => {\n    if (!product) return;\n\n    const prepareData = removeProductUtils(product, list);\n    dispatch(shoppingBasketActions.removeProduct(prepareData));\n  }, [dispatch, product, list]);\n\n  const propertyList = useMemo(() => {\n    if (!product) return [];\n\n    return [\n      { title: `${product.weight}`, subTitle: \"г\" },\n      { title: `${product.kilocalories}`, subTitle: \"ккал\" },\n      { title: `${product.proteins}`, subTitle: \"белки\" },\n      { title: `${product.fats}`, subTitle: \"жиры\" },\n      { title: `${product.carbohydrates}`, subTitle: \"углеводы\" },\n    ];\n  }, [product]);\n\n  if (!product) return null;\n\n  return (\n    <>\n      <NavBar title=\"вкуснота\" leftCb={redirectToProductList} />\n      <div className=\"card-product\">\n        <div className=\"card-product-icon\">\n          <img src={product.src} alt={product.name} loading=\"lazy\" />\n        </div>\n        <div className=\"card-product-title\">\n          <span>{product.name}</span>\n          <Button\n            title={`${product.price} ₽`}\n            handleAdd={addProductToBasket}\n            handleRemove={removeProductToBasket}\n            count={countOfCoincidences}\n          />\n        </div>\n        <PropertyList list={propertyList} />\n        <div className=\"card-product-description\">{product.description}</div>\n        <ExtraProductList product={product} />\n      </div>\n      <ShoppingBasket />\n    </>\n  );\n});\n","import React, { FC, memo, useCallback } from \"react\";\n\nexport const Login: FC = memo(() => {\n  const handleAuth = useCallback(() => {}, []);\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-page-title\">Log In</div>\n      <div className=\"login-page-form\">\n        <button onClick={handleAuth}>Enter</button>\n      </div>\n    </div>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/cutlery.1a9e6c58.svg\";","export default __webpack_public_path__ + \"static/media/bio.a819f3fd.svg\";","export default __webpack_public_path__ + \"static/media/recycle.4a5472da.svg\";","import React from \"react\";\n\nimport { Button } from \"../../shared/components/Button\";\n\nimport iconCutley from \"../../../assets/navbar/cutlery.svg\";\nimport iconBio from \"../../../assets/navbar/bio.svg\";\nimport iconRecycle from \"../../../assets/navbar/recycle.svg\";\n\nexport interface WishesDataItem {\n  scr: string;\n  alt: string;\n  title: string;\n  subTitle: string;\n  component: any;\n}\n\nexport const WishesDataList: WishesDataItem[] = [\n  {\n    scr: iconCutley,\n    alt: \"добавить в корзину столовые приборы: вилка, ложка и нож\",\n    title: \"Привезите приборы\",\n    subTitle: \"Вилка, ложка и нож\",\n    component: (\n      <Button title=\"0 ₽\" handleAdd={() => {}} handleRemove={() => {}} />\n    ),\n  },\n  {\n    scr: iconBio,\n    alt: \"бесконтактная доставка\",\n    title: \"Бесконтактная доставка\",\n    subTitle: \"Оставим, где скажите\",\n    component: (\n      <Button title=\"0 ₽\" handleAdd={() => {}} handleRemove={() => {}} />\n    ),\n  },\n  {\n    scr: iconRecycle,\n    alt: \"забрать чистую упоковку с прошлого заказа, для вторичной переработки\",\n    title: \"Заберите упаковку\",\n    subTitle: \"Чистые контейнеры от прошлого заказа пойдут на переработку\",\n    component: (\n      <Button title=\"0 ₽\" handleAdd={() => {}} handleRemove={() => {}} />\n    ),\n  },\n];\n","import { PropertyTypes } from \"../../../../store/products/products.model\";\n\nexport const getIcon = (propertyTypes: PropertyTypes): string => {\n  switch (propertyTypes) {\n    case PropertyTypes.VEGAN:\n      return \"🥬\";\n\n    case PropertyTypes.FISH:\n      return \"🐟\";\n\n    case PropertyTypes.CHEESE:\n      return \"🧀\";\n\n    default:\n      return \"\";\n  }\n};\n","import React, {\n  BaseSyntheticEvent,\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  getShoppingBasket,\n  shoppingBasketActions,\n} from \"../../../../store/shoppingBasket\";\nimport { routerBuilder } from \"../../../../routing/RouterBuilder\";\nimport { ActionUrls } from \"../../../../routing/routing.enums\";\nimport { ProductModel } from \"../../../../store/products/products.model\";\nimport { Button } from \"../../../../shared/components/Button\";\nimport { getIcon } from \"./Product.utils\";\nimport { ExtraProductList } from \"../../../../shared/components/ExtraProduct\";\nimport { OrientationMode } from \"../../../../shared/components/ExtraProduct/ExtraProductList/ExtraProductList.model\";\n\nimport \"./Product.scss\";\nimport {\n  getCountOfCoincidencesProduct,\n  removeProductUtils,\n  setProductUtils,\n} from \"../../../../store/shoppingBasket/utils/product.utils\";\n\nexport const Product: FC<ProductModel> = memo((product) => {\n  const { id, name, weight, kilocalories, src, price, propertyTypes } = product;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { list } = useSelector(getShoppingBasket);\n\n  const [countOfCoincidences, setCountOfCoincidences] = useState(0);\n\n  const handleGoCard = useCallback(() => {\n    history.push(routerBuilder.buildProductPath({ mode: ActionUrls.VIEW, id }));\n  }, [history, id]);\n\n  const addProductToBasket = useCallback(\n    (event: BaseSyntheticEvent) => {\n      event.stopPropagation();\n\n      const prepareData = setProductUtils(product, list);\n      dispatch(shoppingBasketActions.setProduct(prepareData));\n    },\n    [dispatch, product, list]\n  );\n\n  const removeProductToBasket = useCallback(\n    (event: BaseSyntheticEvent) => {\n      event.stopPropagation();\n\n      const prepareData = removeProductUtils(product, list);\n      dispatch(shoppingBasketActions.removeProduct(prepareData));\n    },\n    [dispatch, product, list]\n  );\n\n  /** Проверяем кол-во совпадений текущего продукта, с кол-вом которое лежит в корзине */\n  useEffect(() => {\n    if (!product) return;\n\n    setCountOfCoincidences(getCountOfCoincidencesProduct(list, product));\n  }, [list, product]);\n\n  return (\n    <>\n      <div className=\"product\" onClick={handleGoCard}>\n        <div className=\"product-icon\">\n          <img src={src} alt={name} loading=\"lazy\" />\n        </div>\n        <div className=\"product-description\">\n          <div className=\"product-description__title\">{name}</div>\n          <div className=\"product-description__weight-calorie\">{`${weight} г, ${kilocalories} ккал`}</div>\n\n          <div className=\"product-price\">\n            <Button\n              title={`${price} ₽`}\n              handleAdd={addProductToBasket}\n              handleRemove={removeProductToBasket}\n              count={countOfCoincidences}\n            />\n            <span className=\"product-price__icon\">\n              {getIcon(propertyTypes)}\n            </span>\n          </div>\n        </div>\n      </div>\n      {!!countOfCoincidences && (\n        <ExtraProductList\n          product={product}\n          orientation={OrientationMode.HORIZONTAL}\n        />\n      )}\n    </>\n  );\n});\n","import React, { FC, memo, useCallback, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { getFullPrice } from \"../../shared/components/ShoppingBasket/ShoppingBasket.utils\";\nimport { getShoppingBasket } from \"../../store/shoppingBasket\";\nimport { WishesDataItem, WishesDataList } from \"./Pay.utils\";\nimport { routerBuilder } from \"../../routing/RouterBuilder\";\nimport { Product } from \"../Products/components/Product\";\nimport { RouteUrls } from \"../../routing/routing.enums\";\nimport { NavBar } from \"../../shared/components/NavBar\";\n\nimport \"./Pay.scss\";\n\nexport const Pay: FC = memo(() => {\n  const history = useHistory();\n  const { list } = useSelector(getShoppingBasket);\n\n  const fullPrice = useMemo(() => getFullPrice(list), [list]);\n\n  const redirectToProductList = useCallback(() => {\n    history.push(\n      routerBuilder.generateSimpleSubRoutePattern(\n        RouteUrls.MAIN,\n        RouteUrls.PRODUCTS\n      )\n    );\n  }, [history]);\n\n  const wishesList = useCallback(\n    (list: WishesDataItem[]) =>\n      list.map(({ scr, alt, title, subTitle, component }, key) => (\n        <div className=\"pay-wishes__list\" key={key}>\n          <div className=\"pay-wishes__list-item\">\n            <div className=\"pay-wishes__list-item-icon\">\n              <img src={scr} alt={alt} />\n            </div>\n            <div className=\"wishes-item__content\">\n              <div className=\"wishes-item__content-title\">{title}</div>\n              <div className=\"wishes-item__content-subtitle\">{subTitle}</div>\n            </div>\n            {component}\n          </div>\n        </div>\n      )),\n    []\n  );\n\n  useEffect(() => {\n    if (!list?.length) {\n      redirectToProductList();\n    }\n  }, [list, history, redirectToProductList]);\n\n  return (\n    <>\n      <NavBar title=\"еда почти твоя\" leftCb={redirectToProductList} />\n      <div className=\"product-list\">\n        {list.map((item, key) => (\n          <Product {...item} key={key} />\n        ))}\n      </div>\n      <div className=\"pay\">\n        <div className=\"pay-wishes\">\n          <div className=\"pay-wishes__title\">Пожелания</div>\n          {wishesList(WishesDataList)}\n        </div>\n\n        <div className=\"pay-pay\">\n          <div className=\"pay-pay__title\">Оплата</div>\n          <div className=\"pay-pay__price-list\">\n            <div className=\"pay-pay__price-list-item\">\n              <span>{`${fullPrice} ₽`}</span>\n              <span>к оплате</span>\n            </div>\n            <div className=\"pay-pay__price-list-item\">\n              <span>{`${fullPrice} ₽`}</span>\n              <span>за еду</span>\n            </div>\n            <div className=\"pay-pay__price-list-item\">\n              <span>{`0 ₽`}</span>\n              <span>доставка</span>\n            </div>\n          </div>\n          <div className=\"pay-pay__button\">{`Оплатить ${fullPrice} ₽`}</div>\n        </div>\n      </div>\n    </>\n  );\n});\n","import React, { FC, memo } from \"react\";\n\nexport const Personal: FC = memo(() => {\n  return <div className=\"personal\">personal</div>;\n});\n","import React, { FC, memo, useCallback, useMemo } from \"react\";\n\nimport { LocationButtonModel } from \"./LocationButton.model\";\nimport { getFullAddress, getTimeInterval } from \"./LocationButton.utils\";\n\nimport \"./LocationButton.scss\";\n\nexport const LocationButton: FC<LocationButtonModel> = memo(\n  ({ location, id, activeButtonId, setActiveButton }) => {\n    const handleClick = useCallback(() => setActiveButton(id), [\n      setActiveButton,\n      id,\n    ]);\n\n    const classnames = useMemo(\n      () =>\n        `location-button ${\n          activeButtonId === id ? \"location-button_active\" : \"\"\n        }`,\n      [activeButtonId, id]\n    );\n\n    const content = useMemo(() => {\n      if (!location) return \"Добавить адрес\";\n\n      const address = getFullAddress(location);\n      const time = getTimeInterval(location);\n\n      return (\n        <>\n          <div className=\"location-button__address\">{address}</div>\n          <div className=\"location-button__time\">{time}</div>\n        </>\n      );\n    }, [location]);\n\n    return (\n      <div className=\"padding-container\" onClick={handleClick}>\n        <div className={classnames}>{content}</div>\n      </div>\n    );\n  }\n);\n","import { LocationModel } from \"../../../../../store/coordinates/coordinates.model\";\n\n/**\n * Возвращаю полный адрес */\nexport const getFullAddress = (location: LocationModel): string => {\n  const { street, house } = location;\n\n  return `${street}, ${house}`;\n};\n\n/**\n * Возвращаю разницу между двумя датами, в часах\n * TODO Доработать время работы */\nexport const getTimeInterval = (location: LocationModel): string => {\n  const { startDate, endDate } = location;\n\n  return `c 08:00 до 22:00`;\n};\n","import React, { FC, memo, useMemo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getProfile } from \"../../../store/profile\";\nimport { LocationButton } from \"./components/LocationButton\";\n\nimport \"./LocationList.scss\";\n\nexport const LocationList: FC = memo(() => {\n  const { user } = useSelector(getProfile);\n\n  const [activeButtonId, setActiveButton] = useState<number>(0);\n\n  const locationListLength: number = useMemo(\n    () => user?.location?.length || 0,\n    [user]\n  );\n\n  const list = useMemo(\n    () =>\n      user?.location?.map((location, key) => (\n        <LocationButton\n          location={location}\n          id={key}\n          setActiveButton={setActiveButton}\n          activeButtonId={activeButtonId}\n          key={key}\n        />\n      )),\n    [user, activeButtonId]\n  );\n\n  return (\n    <div className=\"location-list\">\n      {list}\n      <LocationButton\n        id={locationListLength + 1}\n        setActiveButton={setActiveButton}\n        activeButtonId={activeButtonId}\n      />\n    </div>\n  );\n});\n","import React, { FC, memo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { ShoppingBasket } from \"../../shared/components/ShoppingBasket\";\nimport { LocationList } from \"../../shared/components/LocationList\";\nimport { NavBar } from \"../../shared/components/NavBar\";\nimport { getProducts } from \"../../store/products\";\nimport { Product } from \"./components/Product\";\n\nimport \"./Products.scss\";\n\nexport const Products: FC = memo(() => {\n  const { productList } = useSelector(getProducts);\n\n  if (!productList?.length) return <div>список продуктов пуст</div>;\n\n  return (\n    <>\n      <NavBar title=\"еда на первом\" />\n      <LocationList />\n      <div className=\"product-list\">\n        {productList.map((item, key) => (\n          <Product {...item} key={key} />\n        ))}\n      </div>\n      <ShoppingBasket />\n    </>\n  );\n});\n","import React, { FC, memo } from \"react\";\n\nexport const PromoCode: FC = memo(() => {\n  return <div className=\"promo-code\">promo-code</div>;\n});\n","import React, { ComponentType } from \"react\";\n\nimport { RouteUrls } from \"./routing.enums\";\nimport {\n  CardProduct,\n  Login,\n  Pay,\n  Personal,\n  Products,\n  PromoCode,\n} from \"../pages\";\nimport { routerBuilder } from \"./RouterBuilder\";\n\nexport interface RouteModel {\n  component: ComponentType<any>;\n  path: string;\n  exact?: boolean;\n  permissions?: any[];\n}\n\nexport interface RouteMenuItemModel {\n  name: string;\n  route: string;\n  permissions?: any[];\n}\n\nexport const Routes: RouteModel[] = [\n  { component: () => <Login />, path: RouteUrls.LOGIN, exact: true },\n  { component: () => <Products />, path: RouteUrls.PRODUCTS, exact: true },\n  { component: () => <Pay />, path: RouteUrls.PAY, exact: true },\n  { component: () => <Personal />, path: RouteUrls.PERSONAL, exact: true },\n  { component: () => <PromoCode />, path: RouteUrls.PROMO_CODE, exact: true },\n  {\n    component: () => <CardProduct />,\n    path: routerBuilder.PRODUCTS_CREATE_PATH,\n    exact: false,\n  },\n  {\n    component: () => <CardProduct />,\n    path: routerBuilder.PRODUCTS_VIEW_EDIT_PATH,\n    exact: false,\n  },\n];\n","import React, { FC, memo } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { RouteUrls } from \"app/routing/routing.enums\";\nimport { Routes } from \"app/routing/routing.const\";\nimport {Products} from \"app/pages/Products\";\n\nexport const Routing: FC = memo(() => {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to={RouteUrls.PRODUCTS} />\n        </Route>\n        {Routes.map((route, key) => {\n          const { path, component, exact } = route;\n          return (\n            <Route exact={exact} path={path} component={component} key={key} />\n          );\n        })}\n        <Route component={Products} />\n      </Switch>\n    </>\n  );\n});\n","import { Action, applyMiddleware, Dispatch, Middleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const actionFunction: Middleware = ({ dispatch, getState }) => (\n  next: Dispatch\n) => (action: Function | Action) => {\n  return action instanceof Function ? action(dispatch, getState) : next(action);\n};\n\nexport const middlewares = composeWithDevTools(applyMiddleware(actionFunction));\n","import { combineReducers } from \"redux\";\nimport { profileReducer as profile } from \"../profile\";\nimport { productsReducer as products } from \"../products\";\nimport { cardProductsReducer as cardProduct } from \"../cardProduct\";\nimport { ordersReducer as orders } from \"../orders\";\nimport { coordinatesReducer as coordinates } from \"../coordinates\";\nimport { shoppingBasketReducer as shoppingBasket } from \"../shoppingBasket\";\n\nexport const reducers = combineReducers({\n  profile,\n  products,\n  cardProduct,\n  orders,\n  coordinates,\n  shoppingBasket,\n});\n","import { createStore } from \"redux\";\n\nimport { middlewares } from \"./middlewares\";\nimport { reducers } from \"./reducers\";\n\nexport const store = createStore(reducers, middlewares);\n","import React, { FC } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { MainLayout } from \"./app/core/MainLayout\";\nimport { Routing } from \"./app/routing/routing\";\nimport { urls } from \"./app/shared/constants\";\nimport { store } from \"./app/store\";\n\nexport const App: FC = () => {\n  return (\n    <Provider store={store}>\n      <Router basename={urls.baseUrl}>\n        <MainLayout>\n          <Routing />\n        </MainLayout>\n      </Router>\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}