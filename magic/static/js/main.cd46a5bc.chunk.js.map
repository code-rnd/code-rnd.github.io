{"version":3,"sources":["components/Convert/index.jsx","components/Convert/utils.js","index.jsx"],"names":["PopupAttention","onClose","message","useState","classes","setClasses","useEffect","timerFadein","setTimeout","timerFadeout","timerClose","clearTimeout","className","Convert","isShow","setIsShow","isMessage","setIsMessage","isText","setIsText","isConvertText","setIsConvertText","string","pattern","firstOctet","secondOctet","indexOf","split","replace","preText","window","navigator","clipboard","writeText","placeholder","type","onChange","event","currentTarget","value","onClick","open","href","ReactDOM","render","document","getElementById"],"mappings":"qPAMMA,G,KAAiB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAAc,EACjBC,mBAAS,mBADQ,mBACxCC,EADwC,KAC/BC,EAD+B,KAqB/C,OAlBAC,qBAAU,WACR,IAAMC,EAAcC,YAAW,WAC7BH,EAAW,4CACV,KAEGI,EAAeD,YAAW,WAC9BH,EAAW,qBACV,KACGK,EAAaF,WAAWP,EAAS,MAGvC,OAAO,WACLU,aAAaJ,GACbI,aAAaF,GACbE,aAAaD,MAEd,CAACR,IAEG,yBAAKU,UAAWR,GAAUF,KAGtBW,EAAU,WAAO,IAAD,EACCV,oBAAS,GADV,mBACpBW,EADoB,KACZC,EADY,OAEOZ,mBAAS,IAFhB,mBAEpBa,EAFoB,KAETC,EAFS,OAICd,mBAAS,IAJV,mBAIpBe,EAJoB,KAIZC,EAJY,OAKehB,mBAAS,IALxB,mBAKpBiB,EALoB,KAKLC,EALK,KAO3Bf,qBAAU,WACRY,GAAUG,ECtCS,SAAAC,GACnB,IAQuE,IAMlC,EAWD,IAzB9BC,EAAU,CAAC,SAAU,QAAS,QAAS,SAAU,SACnDC,EAAa,GACbC,EAAc,GAElB,OAAKH,GAI6B,IAA9BA,EAAOI,QAAQ,YAAiD,IAA7BJ,EAAOI,QAAQ,UAClDF,EAAU,UAAGF,EAAOK,MAAM,OAAO,UAAvB,aAAG,EAAwBC,QAAQL,EAAQ,GAAIA,EAAQ,IACjEE,EAAW,UAAGH,EAAOK,MAAM,OAAO,UAAvB,aAAG,EAAwBA,MAAM,KAAK,GAC3C,GAAN,OAAUH,EAAV,YAAwBC,KAGM,IAA9BH,EAAOI,QAAQ,UAGf,UAFAF,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAQK,MAAM,KAAK,UAEhC,aAAO,EAAYC,QAAQ,SAAS,UAGP,IAA7BN,EAAOI,QAAQ,SACfF,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAQK,MAAM,KAAK,IAIH,IAA7BL,EAAOI,QAAQ,UACfF,EAAU,UAAGF,EAAOK,MAAM,OAAO,UAAvB,aAAG,EAAwBC,QAAQ,QAAS,SACtDH,EAAW,UAAGH,EAAOK,MAAM,OAAO,UAAvB,aAAG,EAAwBA,MAAM,KAAK,GAC3C,GAAN,OAAUH,EAAV,YAAwBC,IAGrB,GA1BI,GDgCgBI,CAAQX,MAClC,CAACA,IAEJZ,qBAAU,WACJc,IACFU,OAAOC,UAAUC,UAAUC,UAAUb,GACrCH,EAAa,iJACbF,GAAU,MAEX,CAACK,IAOJ,OACE,oCACE,yBAAKR,UAAU,WACb,yBAAKA,UAAU,iBACb,0GACA,2BACIsB,YAAa,0IACbC,KAAK,OACLC,SAbS,SAACC,GACpBtB,GAAU,GACVI,EAAUkB,EAAMC,cAAcC,QAYpBA,MAAOrB,KAIb,yBAAKN,UAAU,iBACb,6HAAyBQ,GAAiB,qLAC1C,yBAAKR,UAAU,iBACZQ,GAAiB,0BAAMoB,QAAS,kBAAMV,OAAOW,KAAKrB,KAAiBA,IAClEA,GAAiB,kLAGvB,yBAAKR,UAAU,wBACb,yBAAKA,UAAU,2BAA2B4B,QAAS,WACjDrB,EAAU,IACVJ,GAAU,GACVE,EAAa,8GAHf,6EAKA,yBAAKL,UAAU,2BAA2B4B,QAAS,WACjDvB,EAAa,6EACbF,GAAU,GACVe,OAAOC,UAAUC,UAAUC,UAAU,MAHvC,qFAOJ,yBAAKrB,UAAU,UACb,6bACA,uBAAG8B,KAAK,+BAAR,wEAAoD,6BAApD,mDAED5B,GAAU,kBAAC,EAAD,CAAgBb,QAASc,EAAWb,QAASc,M,MEpF9D2B,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,W","file":"static/js/main.cd46a5bc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {preText} from \"./utils\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst PopupAttention = ({ onClose, message }) => {\r\n  const [classes, setClasses] = useState(\"popup_attention\");\r\n\r\n  useEffect(() => {\r\n    const timerFadein = setTimeout(() => {\r\n      setClasses(\"popup_attention popup_attention-fadein\");\r\n    }, 100);\r\n\r\n    const timerFadeout = setTimeout(() => {\r\n      setClasses(\"popup_attention\");\r\n    }, 2000);\r\n    const timerClose = setTimeout(onClose, 2500);\r\n\r\n    // componentWillUnmount\r\n    return () => {\r\n      clearTimeout(timerFadein);\r\n      clearTimeout(timerFadeout);\r\n      clearTimeout(timerClose);\r\n    };\r\n  }, [message]);\r\n\r\n  return <div className={classes}>{message}</div>;\r\n};\r\n\r\nexport const Convert = () => {\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [isMessage, setIsMessage] = useState('');\r\n\r\n  const [isText, setIsText] = useState(\"\");\r\n  const [isConvertText, setIsConvertText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    isText && setIsConvertText(preText(isText));\r\n  }, [isText]);\r\n\r\n  useEffect(() => {\r\n    if (isConvertText) {\r\n      window.navigator.clipboard.writeText(isConvertText);\r\n      setIsMessage('Ссылка скопирована в буфер');\r\n      setIsShow(true);\r\n    }\r\n  }, [isConvertText]);\r\n\r\n  const handleChange = (event) => {\r\n    setIsShow(false);\r\n    setIsText(event.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"convert\">\r\n        <div className=\"convert-input\">\r\n          <div>полная ссылка</div>\r\n          <input\r\n              placeholder={'Вставь сюда полную ссылку'}\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              value={isText}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"convert-input\">\r\n          <div>{`короткая ссылка ${isConvertText && '(нажми и я откроюсь в новой вкладке)'}`}</div>\r\n          <div className=\"convert-label\">\r\n            {isConvertText && <span onClick={() => window.open(isConvertText)}>{isConvertText}</span>}\r\n            {!isConvertText && \"В этом месте будет готовая ссылка\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"convert-input-custom\">\r\n          <div className='convert-input-custom-btn' onClick={() =>  {\r\n            setIsText('');\r\n            setIsShow(true);\r\n            setIsMessage('Поле ссылки очищено');\r\n          }}>очистить поле</div>\r\n          <div className='convert-input-custom-btn' onClick={() =>  {\r\n            setIsMessage('Буффер очищен');\r\n            setIsShow(true);\r\n            window.navigator.clipboard.writeText('')}}>очистить буфер</div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className='footer'>\r\n        <div>После вставки полной ссылки, готовая ссыкла копируется в буффер автоматически</div>\r\n        <a href=\"tg://resolve?domain=codernd\">есть вопросы? <br/>телега: @codernd</a>\r\n      </div>\r\n      {isShow && <PopupAttention onClose={setIsShow} message={isMessage} />}\r\n    </>\r\n  );\r\n};\r\n","export const preText = string => {\r\n    const pattern = [\"photos\", \"video\", \"posts\", \"videos\", \"photo\"];\r\n    let firstOctet = \"\";\r\n    let secondOctet = \"\";\r\n\r\n    if (!string) {\r\n        return \"\";\r\n    }\r\n\r\n    if (string.indexOf('photos') !== -1 || string.indexOf('photo') !== -1) {\r\n        firstOctet = string.split(\"/a.\")[0]?.replace(pattern[0], pattern[2]);\r\n        secondOctet = string.split(\"/a.\")[1]?.split(\"/\")[1];\r\n        return `${firstOctet}/${secondOctet}`;\r\n    }\r\n\r\n    if (string.indexOf('videos') !== -1) {\r\n        firstOctet = string?.split(\"?\")[0];\r\n\r\n        return firstOctet?.replace('videos','posts');\r\n    }\r\n\r\n    if (string.indexOf('posts') !== -1) {\r\n        firstOctet = string?.split(\"?\")[0];\r\n        return firstOctet;\r\n    }\r\n\r\n    if (string.indexOf('video') !== -1) {\r\n        firstOctet = string.split(\"/a.\")[0]?.replace('video', 'posts');\r\n        secondOctet = string.split(\"/a.\")[1]?.split(\"/\")[1];\r\n        return `${firstOctet}/${secondOctet}`;\r\n    }\r\n\r\n    return \"\";\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {Convert} from \"./components/Convert\";\n\nimport \"./styles/style.scss\";\n\nReactDOM.render(<Convert />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}