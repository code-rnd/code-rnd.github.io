{"version":3,"sources":["store/actions/index.js","store/reducers/TableReducers/index.js","store/reducers/index.js","store/index.js","containers/SearchMenuContainer/index.js","components/SearchMenuComponent/index.js","components/InputBtnSortComponent/index.js","utils/arrBtn.js","containers/SortMenuContainer/index.js","components/SortMenuComponent/index.js","components/GroupMenuComponent/index.js","components/HeadComponent/index.js","utils/filterData.js","components/CellBodyComponent/index.js","components/RowComponent/index.js","utils/sortData.js","components/BodyComponent/index.js","containers/DisplayContainer/index.js","components/DisplayComponent/index.js","containers/InputBtnClearContainer/index.js","components/InputBtnClearComponent/index.js","containers/TableWidgetContainer/index.js","components/TableWidgetComponent/index.js","index.js"],"names":["CHANGE_TEXT","CHANGE_SORT","CHANGE_ACTIVE_INPUT","CHANGE_CLEAR","changeText","text","type","data","initialState","content","id","name","date","count","changeContent","sort","nameInput","filter","inputName","activeInput","reducers","combineReducers","state","action","flag","placeholder","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","SearchMenuContainer","connect","dispatch","handleChangeText","handleChangeActiveInput","changeActiveInput","props","useState","value","setValue","className","data-name","onChange","e","currentTarget","dataset","console","log","InputBtnSortComponent","handleChangeSort","data-placeholder","data-id","onClick","arrBtn","icon","SortMenuContainer","changeSort","map","item","key","GroupMenuComponent","HeadComponent","Object","keys","filterData","key_","row","toString","toLowerCase","indexOf","CellBodyComponent","RowComponent","SortCustom","switchMethod","sortNumber","sortString","sortDate","a","b","Date","nameA","nameB","this","reverse","BodyComponent","sortCustom","length","DisplayContainer","dataLength","InputBtnClearContainer","handleClear","changeClear","TableWidgetContainer","handleChange","ReactDOM","render","document","getElementById"],"mappings":"kWAAaA,EAAc,cACdC,EAAc,cACdC,EAAsB,sBACtBC,EAAe,eAEfC,EAAa,SAAAC,GAAI,MAAK,CACjCC,KAAMN,EACNO,KAAMF,I,yjBCAR,IA2HaG,EAAe,CAC1BC,QAAQ,GAAD,OA5HY,CACnB,CAAEC,GAAI,EAAGC,KAAM,2BAAQC,KAAM,aAAcC,MAAO,IAClD,CAAEH,GAAI,EAAGC,KAAM,2BAAQC,KAAM,aAAcC,MAAO,IAClD,CAAEH,GAAI,EAAGC,KAAM,2BAAQC,KAAM,yCAAiBC,MAAO,GACrD,CAAEH,GAAI,EAAGC,KAAM,yDAAaC,KAAM,aAAcC,MAAO,GACvD,CAAEH,GAAI,EAAGC,KAAM,6CAAWC,KAAM,aAAcC,MAAO,KACrD,CAAEH,GAAI,EAAGC,KAAM,iCAASC,KAAM,YAAaC,MAAO,KAClD,CAAEH,GAAI,EAAGC,KAAM,yDAAaC,KAAM,aAAcC,MAAO,IACvD,CAAEH,GAAI,EAAGC,KAAM,uCAAUC,KAAM,aAAcC,MAAO,IACpD,CAAEH,GAAI,EAAGC,KAAM,uCAAUC,KAAM,aAAcC,MAAO,MAoHpDC,cAAe,GACfC,KAAM,UACNC,UAAW,GACXX,KAAM,CACJY,OAAQ,GACRC,UAAW,IAEbC,YAAa,MCxIR,IAAMC,EAAWC,YAAgB,CACpC,QD0IG,WAAsD,IAA/BC,EAA8B,uDAAtBd,EAAce,EAAQ,uCAC1D,OAAQA,EAAOjB,MACb,KAAKN,EACH,OAAO,EAAP,GAAYsB,EAAZ,GAAsB,CAAEjB,KAAMkB,EAAOhB,OAEvC,KAAKN,EAAL,MACgCsB,EAAOhB,KACrC,OAAO,EAAP,GAAYe,EAAZ,GAAsB,CAAEP,KAF1B,EACUS,KAC4BR,UAFtC,EACgBS,cAGhB,KAAKvB,EACH,OAAO,EAAP,GAAYoB,EAAZ,GAAsB,CAAEH,YAAaI,EAAOhB,OAE9C,KAAKJ,EACH,OAAO,EAAP,GACKmB,EADL,GAEK,CACDP,KAAMQ,EAAOhB,KACbY,YAAaI,EAAOhB,KACpBF,KAAM,CAAEY,OAAQM,EAAOhB,KAAMW,UAAWK,EAAOhB,QAIrD,QACE,OAAOe,MElKAI,EAAQC,YACjBP,EACAQ,OAAOC,8BAAgCD,OAAOC,gC,sBCDlD,IASaC,EAAsBC,aATX,SAAAT,GAAK,MAAK,CAChCH,YAAaG,EAAMb,QAAQU,gBAGF,SAAAa,GAAQ,MAAK,CACtCC,iBAAkB,SAAC5B,EAAMM,GAAP,OAAgBqB,EAAS5B,EAAWC,KACtD6B,wBAAyB,SAAAxB,GAAE,OAAIsB,EJKA,SAAAtB,GAAE,MAAK,CACtCJ,KAAMJ,EACNK,KAAMG,GIPkCyB,CAAkBzB,QAGzBqB,ECVpB,SAA6BK,GAAQ,IAEhDX,EAKEW,EALFX,YACAQ,EAIEG,EAJFH,iBACAvB,EAGE0B,EAHF1B,GACAS,EAEEiB,EAFFjB,YACAe,EACEE,EADFF,wBAEIV,EAAOL,IAAgBT,EARoB,EASvB2B,mBAAS,IATc,mBAS1CC,EAT0C,KASnCC,EATmC,KAWjD,OACE,6BACE,2BACEC,UAAS,qBAAgBhB,EAAO,eAAiB,IACjDlB,KAAK,OACLmB,YAAaA,EACba,MAAOd,EAAOc,EAAQ,GACtBG,YAAWhB,EACXf,GAAIA,EACJgC,SAAU,SAAAC,GACRJ,EAASI,EAAEC,cAAcN,OACzBL,EAAiB,CACfhB,OAAQ0B,EAAEC,cAAcN,MACxBpB,UAAWyB,EAAEC,cAAcC,QAAQlC,OAErCa,EAAOsB,QAAQC,IAAI,oDAAcb,EAAwBxB,UC3BpD,SAASsC,EAAsBZ,GAAQ,IAC5CE,EAAmDF,EAAnDE,MAAOW,EAA4Cb,EAA5Ca,iBAAkBzB,EAA0BY,EAA1BZ,KAAMd,EAAoB0B,EAApB1B,GAAIe,EAAgBW,EAAhBX,YAC3C,OACE,6BACE,2BACEe,UAAU,eACVlC,KAAK,SACLgC,MAAOA,EACPY,mBAAkBzB,EAClB0B,UAASzC,EACT0C,QAAS,WACPH,EAAiB,CAAEzB,OAAMC,oBCb5B,IAAM4B,EAAS,CACpB,CAAE7B,KAAM,EAAG8B,KAAM,gBACjB,CAAE9B,KAAM,EAAG8B,KAAM,gBACjB,CAAE9B,KAAM,UAAW8B,KAAM,W,MCC3B,IAMaC,EAAoBxB,aANT,SAAAT,GAAK,MAAK,MAEP,SAAAU,GAAQ,MAAK,CACtCiB,iBAAkB,SAAAzB,GAAI,OAAIQ,ERGF,SAAAR,GAAI,MAAK,CACjClB,KAAML,EACNM,KAAMiB,GQL6BgC,CAAWhC,QAGfO,ECLlB,SAA2BK,GAAQ,IACxCa,EAAkCb,EAAlCa,iBAAkBxB,EAAgBW,EAAhBX,YAE1B,OACE,yBAAKe,UAAU,gBACZa,EAAOI,KAAI,SAACC,EAAMhD,GAAP,OACV,kBAACsC,EAAD,CACEV,MAAOoB,EAAKJ,KACZ9B,KAAMkC,EAAKlC,KACXyB,iBAAkBA,EAClBxB,YAAaA,EACbkC,IAAKjD,EACLA,GAAIA,W,MCVC,SAASkD,EAAmBxB,GAAQ,IACzCX,EAAoBW,EAApBX,YAAaf,EAAO0B,EAAP1B,GAErB,OACE,6BACE,kBAACoB,EAAD,CAAqBL,YAAaA,EAAaf,GAAIA,IACnD,kBAAC6C,EAAD,CAAmB9B,YAAaA,KCTvB,SAASoC,EAAczB,GAAQ,IACpC7B,EAAS6B,EAAT7B,KACR,OACE,+BACE,4BACGuD,OAAOC,KAAKxD,GAAMkD,KAAI,SAACC,EAAMhD,GAAP,OACrB,wBAAI8B,UAAU,MAAMmB,IAAKjD,GACtBgD,EACD,kBAACE,EAAD,CAAoBnC,YAAaiC,EAAMhD,GAAIA,UCZhD,IAAMsD,EAAa,SAACzD,EAAM0D,EAAM3B,GACrC,OAAI2B,GAAkB,KAAV3B,EACK/B,EAAKU,QAClB,SAAAiD,GAAG,OACDA,EAAID,GACDE,WACAC,cACAC,QAAQ/B,EAAM6B,WAAWC,gBAAkB,KAI3C7D,G,OCTI,SAAS+D,EAAkBlC,GAAQ,IACtCE,EAAUF,EAAVE,MACR,OACI,4BACMA,G,MCFC,SAASiC,EAAanC,GAAQ,IACnC3B,EAAgB2B,EAAhB3B,QAASC,EAAO0B,EAAP1B,GAEjB,OACE,wBAAI8B,UAAS,UAAK9B,EAAK,EAAI,GAAK,iBAAmBiD,IAAKjD,GACrDoD,OAAOC,KAAKtD,GAASgD,KAAI,SAACC,EAAMhD,GAAP,OACxB,kBAAC4D,EAAD,CAAmBhC,MAAO7B,EAAQiD,GAAOC,IAAKjD,Q,YCVjC8D,EACnB,WAAYjE,EAAMS,EAAWD,GAAM,IAAD,OAMhC,OANgC,yBAelC0D,aAAe,WACb,MAAsB,OAAnB,EAAKzD,WAAyC,UAAnB,EAAKA,UAC1B,EAAK0D,WAAW,EAAKpD,MAAO,EAAKN,WACZ,SAAnB,EAAKA,UACP,EAAK2D,WAAW,EAAKrD,MAAO,EAAKN,WACZ,SAAnB,EAAKA,UACP,EAAK4D,SAAS,EAAKtD,MAAO,EAAKN,WAE/B,EAAKM,OAvBkB,KA2BlCoD,WAAa,SAACnE,EAAMS,GAClB,OAAO,YAAIT,GAAMQ,MAAK,SAAS8D,EAAGC,GAChC,OAAOD,EAAE7D,GAAa8D,EAAE9D,OA7BM,KAiClC4D,SAAW,SAACrE,EAAMS,GAChB,OAAO,YAAIT,GAAMQ,MAAK,SAAS8D,EAAGC,GAGhC,OAFc,IAAIC,KAAKF,EAAE7D,IACX,IAAI+D,KAAKD,EAAE9D,QApCK,KAyClC2D,WAAa,SAACpE,EAAMS,GAClB,OAAO,YAAIT,GAAMQ,MAAK,SAAS8D,EAAGC,GAChC,IAAME,EAAQH,EAAE7D,GAAWoD,cACrBa,EAAQH,EAAE9D,GAAWoD,cAC3B,OAAIY,EAAQC,GAEF,EACND,EAAQC,EAAc,EACnB,MA/CTC,KAAK5D,MAAL,YAAiBf,GACjB2E,KAAKlE,UAAYA,EACjBkE,KAAKnE,KAAOA,EAEK,IAAdmE,KAAKnE,KACCmE,KAAKT,eACW,IAAdS,KAAKnE,KACPmE,KAAKT,eAAeU,UAEpBD,KAAK5D,OCPH,SAAS8D,EAAchD,GAAQ,IACpC7B,EAA0B6B,EAA1B7B,KAAMQ,EAAoBqB,EAApBrB,KAAMC,EAAcoB,EAAdpB,UACdqE,EAAa,IAAIb,EAAWjE,EAAMS,EAAWD,GAEnD,OACE,+BACG,YAAIsE,GAAYC,OACb,YAAID,GAAY5B,KAAI,SAACC,EAAMhD,GAAP,OAClB,kBAAC6D,EAAD,CAAc9D,QAASiD,EAAMhD,GAAIA,EAAIiD,IAAKjD,OAG9C,kBAAC6D,EAAD,CAAc9D,QAAS,CAAC,sFCbhC,IAQa8E,EAAmBxD,aARR,SAAAT,GAAK,MAAK,CAChCH,YAAaG,EAAMb,QAAQU,YAC3BJ,KAAMO,EAAMb,QAAQM,KACpBV,KAAMiB,EAAMb,QAAQJ,SAGK,SAAA2B,GAAQ,MAAK,KAERD,ECTjB,SAA0BK,GAAQ,IACvCoD,EAA2BpD,EAA3BoD,WAAYzE,EAAeqB,EAAfrB,KAAMV,EAAS+B,EAAT/B,KAC1B,OACE,6BACE,gHAAqBA,EAAKY,OAASZ,EAAKY,OAAS,2DACjD,qGACkBZ,EAAKa,UAAYb,EAAKa,UAAY,oFAEpD,6HAAwBsE,GAA0B,KAClD,0JACmC,KAATzE,EAAc,uHAA0BA,OCRxE,IAMa0E,EAAyB1D,aANd,SAAAT,GAAK,MAAK,MAEP,SAAAU,GAAQ,MAAK,CACtC0D,YAAa,SAAAlE,GAAI,OAAIQ,EnBaI,SAAAR,GAAI,MAAK,CAClClB,KAAMH,EACNI,KAAMiB,GmBfwBmE,CAAYnE,QAGNO,ECRvB,SAAgCK,GAAQ,IAC7CsD,EAAgBtD,EAAhBsD,YACR,OACE,6BACE,2BACEpF,KAAK,SACLgC,MAAM,qOACNc,QAAS,kBAAMsC,EAAY,W,MCLnC,IAQaE,EAAuB7D,aARZ,SAAAT,GAAK,MAAK,CAChCA,MAAOA,MAGkB,SAAAU,GAAQ,MAAK,CACtC6D,aAAc,SAAAxF,GAAI,OAAI2B,EAAS5B,EAAWC,QAGR0B,ECJrB,SAA8BK,GAAQ,IAC3Cd,EAAUc,EAAVd,MACFqC,EAAMrC,EAAMb,QAAQJ,KAAOiB,EAAMb,QAAQJ,KAAKa,UAAY,GAC1DoB,EAAQhB,EAAMb,QAAQJ,KAAOiB,EAAMb,QAAQJ,KAAKY,OAAS,GACzDV,EAAOyD,EAAW1C,EAAMb,QAAQA,QAASkD,EAAKrB,GAE9CtB,EAAYM,EAAMb,QAAQO,UAC1BD,GAAOO,EAAMb,QAAQM,KAAOO,EAAMb,QAAQM,MAEhD,OACE,yBAAKyB,UAAU,eACb,kBAAC+C,EAAD,CAAkBC,WAAYjF,EAAK+E,SACnC,kBAACG,EAAD,MACA,+BACE,kBAAC5B,EAAD,CAAetD,KAAMe,EAAMb,QAAQA,QAAQ,KAC3C,kBAAC2E,EAAD,CAAe7E,KAAMA,EAAMQ,KAAMA,EAAMC,UAAWA,S,MCd1D8E,IAASC,OACP,kBAAC,IAAD,CAAUrE,MAAOA,GACf,kBAACkE,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.a9b262e3.chunk.js","sourcesContent":["export const CHANGE_TEXT = \"CHANGE_TEXT\";\nexport const CHANGE_SORT = \"CHANGE_SORT\";\nexport const CHANGE_ACTIVE_INPUT = \"CHANGE_ACTIVE_INPUT\";\nexport const CHANGE_CLEAR = \"CHANGE_CLEAR\";\n\nexport const changeText = text => ({\n  type: CHANGE_TEXT,\n  data: text\n});\n\nexport const changeSort = flag => ({\n  type: CHANGE_SORT,\n  data: flag\n});\n\nexport const changeActiveInput = id => ({\n  type: CHANGE_ACTIVE_INPUT,\n  data: id\n});\n\nexport const changeClear = flag => ({\n  type: CHANGE_CLEAR,\n  data: flag\n});","import {\n  CHANGE_TEXT,\n  CHANGE_SORT,\n  CHANGE_ACTIVE_INPUT,\n  CHANGE_CLEAR\n} from \"../../actions\";\n\nconst contentTable = [\n  { id: 1, name: \"Вася\", date: \"15.06.2018\", count: 11 },\n  { id: 2, name: \"Петя\", date: \"23.11.2018\", count: 23 },\n  { id: 3, name: \"Иван\", date: \"12 марта 2017\", count: 3 },\n  { id: 4, name: \"Александр\", date: \"20/12/2010\", count: 1 },\n  { id: 5, name: \"Евгений\", date: \"12.09.2018\", count: 112 },\n  { id: 6, name: \"Мария\", date: \"1.08.2016\", count: 122 },\n  { id: 7, name: \"Анастасия\", date: \"20.11.2018\", count: 34 },\n  { id: 0, name: \"Степан\", date: \"12.11.2019\", count: 99 },\n  { id: 8, name: \"Степан\", date: \"12.11.2019\", count: 10 }\n];\n\nconst contentTable_ = [\n  {\n    id: 0,\n    name: \"Rob\",\n    surName: \"Parken\",\n    phone: \"43-21-11\",\n    card: \"yes\",\n    year: 30,\n    city: \"New-York\"\n  },\n  {\n    id: 1,\n    name: \"Bob\",\n    surName: \"Vanila\",\n    phone: \"22-20-51\",\n    card: \"yes\",\n    year: 20,\n    city: \"New Orlean\"\n  },\n  {\n    id: 2,\n    name: \"Mark\",\n    surName: \"Fujj\",\n    phone: \"34-12-44\",\n    card: \"no\",\n    year: 24,\n    city: \"Guan-Jou\"\n  },\n  {\n    id: 3,\n    name: \"Will\",\n    surName: \"Shielden\",\n    phone: \"90-76-55\",\n    card: \"yes\",\n    year: 45,\n    city: \"New-York\"\n  },\n  {\n    id: 4,\n    name: \"Rob\",\n    surName: \"Parken\",\n    phone: \"43-21-11\",\n    card: \"yes\",\n    year: 30,\n    city: \"New-York\"\n  },\n  {\n    id: 5,\n    name: \"Bob\",\n    surName: \"Vanila\",\n    phone: \"22-20-51\",\n    card: \"no\",\n    year: 20,\n    city: \"New Orlean\"\n  },\n  {\n    id: 6,\n    name: \"Mark\",\n    surName: \"Fujj\",\n    phone: \"34-12-44\",\n    card: \"no\",\n    year: 24,\n    city: \"Guan-Jou\"\n  },\n  {\n    id: 7,\n    name: \"Will\",\n    surName: \"Shielden\",\n    phone: \"90-76-55\",\n    card: \"no\",\n    year: 45,\n    city: \"New-York\"\n  },\n  {\n    id: 8,\n    name: \"Rob\",\n    surName: \"Parken\",\n    phone: \"43-21-11\",\n    card: \"yes\",\n    year: 30,\n    city: \"New-York\"\n  },\n  {\n    id: 9,\n    name: \"Bob\",\n    surName: \"Vanila\",\n    phone: \"22-20-51\",\n    card: \"no\",\n    year: 20,\n    city: \"New Orlean\"\n  },\n  {\n    id: 10,\n    name: \"Mark\",\n    surName: \"Fujj\",\n    phone: \"34-12-44\",\n    card: \"yes\",\n    year: 24,\n    city: \"Guan-Jou\"\n  },\n  {\n    id: 11,\n    name: \"Will\",\n    surName: \"Shielden\",\n    phone: \"90-76-55\",\n    card: \"yes\",\n    year: 45,\n    city: \"New-York\"\n  }\n];\n\nexport const initialState = {\n  content: [...contentTable],\n  changeContent: [],\n  sort: \"default\",\n  nameInput: \"\",\n  text: {\n    filter: \"\",\n    inputName: \"\"\n  },\n  activeInput: null\n};\n\nexport function tableReducers(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_TEXT:\n      return { ...state, ...{ text: action.data } };\n\n    case CHANGE_SORT:\n      const { flag, placeholder } = action.data;\n      return { ...state, ...{ sort: flag, nameInput: placeholder } };\n\n    case CHANGE_ACTIVE_INPUT:\n      return { ...state, ...{ activeInput: action.data } };\n\n    case CHANGE_CLEAR:\n      return {\n        ...state,\n        ...{\n          sort: action.data,\n          activeInput: action.data,\n          text: { filter: action.data, inputName: action.data }\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { tableReducers } from './TableReducers';\n\nexport const reducers = combineReducers({\n    'content': tableReducers,\n})","import { createStore } from 'redux';\nimport { reducers } from './reducers';\n\nexport const store = createStore(\n    reducers, /* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import { connect } from \"react-redux\";\r\nimport SearchMenuComponent from \"../../components/SearchMenuComponent\";\r\nimport { changeText, changeActiveInput } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  activeInput: state.content.activeInput\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChangeText: (text, name) => dispatch(changeText(text, name)),\r\n  handleChangeActiveInput: id => dispatch(changeActiveInput(id))\r\n});\r\n\r\nexport const SearchMenuContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchMenuComponent);\r\n","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function SearchMenuComponent(props) {\r\n  const {\r\n    placeholder,\r\n    handleChangeText,\r\n    id,\r\n    activeInput,\r\n    handleChangeActiveInput\r\n  } = props;\r\n  const flag = activeInput === id;\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className={`input-text ${flag ? \"input-active\" : \"\"}`}\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={flag ? value : \"\"}\r\n        data-name={placeholder}\r\n        id={id}\r\n        onChange={e => {\r\n          setValue(e.currentTarget.value);\r\n          handleChangeText({\r\n            filter: e.currentTarget.value,\r\n            inputName: e.currentTarget.dataset.name\r\n          });\r\n          flag ? console.log(\"заглушка\") : handleChangeActiveInput(id);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InputBtnSortComponent(props) {\r\n  const { value, handleChangeSort, flag, id, placeholder } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"inputBtnComp\"\r\n        type=\"button\"\r\n        value={value}\r\n        data-placeholder={placeholder}\r\n        data-id={id}\r\n        onClick={() => {\r\n          handleChangeSort({ flag, placeholder });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const arrBtn = [\r\n  { flag: 0, icon: \"☝️\" },\r\n  { flag: 1, icon: \"👇\" },\r\n  { flag: \"default\", icon: \"✊\" }\r\n];\r\n","import { connect } from \"react-redux\";\r\nimport SortMenuComponent from \"../../components/SortMenuComponent\";\r\nimport { changeSort } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChangeSort: flag => dispatch(changeSort(flag))\r\n});\r\n\r\nexport const SortMenuContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SortMenuComponent);\r\n","import React from \"react\";\r\nimport InputBtnSortComponent from \"../InputBtnSortComponent\";\r\nimport { arrBtn } from \"../../utils/arrBtn\";\r\nimport \"./style.css\";\r\n\r\nexport default function SortMenuComponent(props) {\r\n  const { handleChangeSort, placeholder } = props;\r\n\r\n  return (\r\n    <div className=\"sortMenuComp\">\r\n      {arrBtn.map((item, id) => (\r\n        <InputBtnSortComponent\r\n          value={item.icon}\r\n          flag={item.flag}\r\n          handleChangeSort={handleChangeSort}\r\n          placeholder={placeholder}\r\n          key={id}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { SearchMenuContainer } from \"../../containers/SearchMenuContainer\";\r\nimport { SortMenuContainer } from \"../../containers/SortMenuContainer\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function GroupMenuComponent(props) {\r\n  const { placeholder, id } = props;\r\n\r\n  return (\r\n    <div>\r\n      <SearchMenuContainer placeholder={placeholder} id={id} />\r\n      <SortMenuContainer placeholder={placeholder} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./style.css\";\nimport GroupMenuComponent from \"../GroupMenuComponent\";\n\nexport default function HeadComponent(props) {\n  const { data } = props;\n  return (\n    <thead>\n      <tr>\n        {Object.keys(data).map((item, id) => (\n          <th className=\"col\" key={id}>\n            {item}\n            <GroupMenuComponent placeholder={item} id={id} />\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n","export const filterData = (data, key_, value) => {\n  if (key_ && value !== \"\") {\n    const result = data.filter(\n      row =>\n        row[key_]\n          .toString()\n          .toLowerCase()\n          .indexOf(value.toString().toLowerCase()) >= 0\n    );\n    return result;\n  } else {\n    return data;\n  }\n};\n","import React from 'react';\n\nexport default function CellBodyComponent(props) {\n    const { value } = props\n    return(\n        <td>\n            { value }\n        </td>\n    )\n}","import React from \"react\";\nimport CellBodyComponent from \"../CellBodyComponent\";\nimport \"./style.css\";\n\nexport default function RowComponent(props) {\n  const { content, id } = props;\n\n  return (\n    <tr className={`${id % 2 ? \"\" : \"rowComp-white\"}`} key={id}>\n      {Object.keys(content).map((item, id) => (\n        <CellBodyComponent value={content[item]} key={id} />\n      ))}\n    </tr>\n  );\n}\n","export default class SortCustom {\n  constructor(data, nameInput, sort){\n\n    this.state = [...data]\n    this.nameInput = nameInput\n    this.sort = sort;\n\n    if(this.sort === 0) {\n      return this.switchMethod()\n    } else if (this.sort === 1) {\n      return this.switchMethod().reverse()\n    } else {\n      return this.state\n    }\n  }\n  \n  switchMethod = () => {\n    if(this.nameInput === 'id' || this.nameInput === 'count') {\n      return this.sortNumber(this.state, this.nameInput)\n    } else if (this.nameInput === 'name') {\n      return this.sortString(this.state, this.nameInput)\n    } else if (this.nameInput === 'data') {\n      return this.sortDate(this.state, this.nameInput)\n    } else {\n      return this.state;\n    }\n  }\n\n  sortNumber = (data, nameInput) => {\n    return [...data].sort(function(a, b) {\n      return a[nameInput] - b[nameInput];\n    });\n  };\n\n  sortDate = (data, nameInput) => {\n    return [...data].sort(function(a, b) {\n      const dateA = new Date(a[nameInput]);\n      const dateB = new Date(b[nameInput]);\n      return dateA - dateB; //сортировка по возрастающей дате\n    });\n  };\n\n  sortString = (data, nameInput) => {\n    return [...data].sort(function(a, b) {\n      const nameA = a[nameInput].toLowerCase();\n      const nameB = b[nameInput].toLowerCase();\n      if (nameA < nameB)\n        //сортируем строки по возрастанию\n        return -1;\n      if (nameA > nameB) return 1;\n      return 0; // Никакой сортировки\n    });\n  };\n}","import React from \"react\";\r\nimport RowComponent from \"../RowComponent\";\r\n// import {sortNumber, sortString, sortDate} from '../../utils/sortData';\r\nimport SortCustom from '../../utils/sortData';\r\n\r\nexport default function BodyComponent(props) {\r\n  const { data, sort, nameInput } = props;\r\n  const sortCustom = new SortCustom(data, nameInput, sort)\r\n\r\n  return (\r\n    <tbody>\r\n      {[...sortCustom].length ? (\r\n          [...sortCustom].map((item, id) => (\r\n            <RowComponent content={item} id={id} key={id} />\r\n          ))\r\n        ) : (\r\n        <RowComponent content={[\"нет совпадений\"]} />\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport DisplayComponent from \"../../components/DisplayComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n  activeInput: state.content.activeInput,\r\n  sort: state.content.sort,\r\n  text: state.content.text\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport const DisplayContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisplayComponent);\r\n","import React from \"react\";\r\n\r\nexport default function DisplayComponent(props) {\r\n  const { dataLength, sort, text } = props;\r\n  return (\r\n    <div>\r\n      <h3>Искомая строка: {text.filter ? text.filter : \"поиск пуст\"}</h3>\r\n      <h3>\r\n        Поиск по полю: {text.inputName ? text.inputName : \"поле не выбрано\"}\r\n      </h3>\r\n      <h3>Кол-во совпадений: {dataLength ? dataLength : \"0\"}</h3>\r\n      <h3>\r\n        Напраление сортировки: {sort === \"\" ? \"направление не задано\" : sort}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport InputBtnClearComponent from \"../../components/InputBtnClearComponent\";\r\nimport { changeClear } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleClear: flag => dispatch(changeClear(flag))\r\n});\r\n\r\nexport const InputBtnClearContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InputBtnClearComponent);\r\n\r\n// кнопка очистки полей\r\n","import React from \"react\";\r\n\r\nexport default function InputBtnClearComponent(props) {\r\n  const { handleClear } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"button\"\r\n        value=\"сбросить конфигурацию поиска и сортировки\"\r\n        onClick={() => handleClear(\"\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\nimport TableWidgetComponent from \"../../components/TableWidgetComponent\";\nimport { changeText } from \"../../store/actions\";\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleChange: text => dispatch(changeText(text))\n});\n\nexport const TableWidgetContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TableWidgetComponent);\n","import React from \"react\";\nimport HeadComponent from \"../HeadComponent\";\nimport { filterData } from \"../../utils/filterData\";\nimport BodyComponent from \"../BodyComponent\";\nimport { DisplayContainer } from \"../../containers/DisplayContainer\";\nimport { InputBtnClearContainer } from \"../../containers/InputBtnClearContainer\";\nimport \"./style.css\";\n\nexport default function TableWidgetComponent(props) {\n  const { state } = props;\n  const key = state.content.text ? state.content.text.inputName : \"\";\n  const value = state.content.text ? state.content.text.filter : \"\";\n  const data = filterData(state.content.content, key, value);\n\n  const nameInput = state.content.nameInput;\n  const sort = state.content.sort ? state.content.sort : state.content.sort;\n\n  return (\n    <div className=\"tableWidget\">\n      <DisplayContainer dataLength={data.length} />\n      <InputBtnClearContainer />\n      <table>\n        <HeadComponent data={state.content.content[0]} />\n        <BodyComponent data={data} sort={sort} nameInput={nameInput} />\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store\";\nimport { TableWidgetContainer } from \"./containers/TableWidgetContainer\";\n\nimport \"./style.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <TableWidgetContainer />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}