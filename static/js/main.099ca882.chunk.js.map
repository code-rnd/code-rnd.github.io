{"version":3,"sources":["store/actions/index.js","store/reducers/TableReducers/index.js","api/index.js","store/reducers/index.js","store/index.js","containers/SearchMenuContainer/index.js","components/SearchMenuComponent/index.js","components/InputBtnSortComponent/index.js","utils/arrBtnForSortMenuComponent.js","containers/SortMenuContainer/index.js","components/SortMenuComponent/index.js","components/GroupMenuComponent/index.js","components/HeadComponent/index.js","utils/filterData.js","components/CellBodyComponent/index.js","components/RowComponent/index.js","utils/SortData.js","components/BodyComponent/index.js","containers/DisplayContainer/index.js","components/DisplayComponent/index.js","containers/InputBtnClearContainer/index.js","components/InputBtnClearComponent/index.js","containers/TableWidgetContainer/index.js","components/TableWidgetComponent/index.js","index.js"],"names":["CHANGE_SEARCH","CHANGE_SORT","CHANGE_ACTIVE_INPUT","CHANGE_CLEAR","changeSearch","data","type","initialState","content","id","name","date","count","sort","value","inputName","search","filter","activeInput","reducers","combineReducers","state","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","SearchMenuContainer","connect","dispatch","handleChangeSearch","handleChangeActiveInput","changeActiveInput","props","placeholder","flag","useState","setValue","className","data-name","onChange","e","currentTarget","dataset","console","log","InputBtnSortComponent","handleChangeSort","data-placeholder","data-id","onClick","arrBtnForSortMenuComponent","icon","SortMenuContainer","changeSort","map","item","key","GroupMenuComponent","HeadComponent","Object","keys","filterData","key_","row","toString","toLowerCase","indexOf","CellBodyComponent","RowComponent","SortCustom","nameInput","switchMethod","sortNumber","sortString","sortDate","a","b","reverseDayToMonth","stringDate","arrDate","split","join","Date","nameA","nameB","this","reverse","BodyComponent","sortCustom","length","DisplayContainer","dataLength","InputBtnClearContainer","handleClear","changeClear","TableWidgetContainer","handleChange","dataSort","dataFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.099ca882.chunk.js","sourcesContent":["export const CHANGE_SEARCH = \"CHANGE_SEARCH\";\r\nexport const CHANGE_SORT = \"CHANGE_SORT\";\r\nexport const CHANGE_ACTIVE_INPUT = \"CHANGE_ACTIVE_INPUT\";\r\nexport const CHANGE_CLEAR = \"CHANGE_CLEAR\";\r\n\r\nexport const changeSearch = data => ({\r\n  type: CHANGE_SEARCH,\r\n  data: data\r\n});\r\n\r\nexport const changeSort = flag => ({\r\n  type: CHANGE_SORT,\r\n  data: flag\r\n});\r\n\r\nexport const changeActiveInput = id => ({\r\n  type: CHANGE_ACTIVE_INPUT,\r\n  data: id\r\n});\r\n\r\nexport const changeClear = flag => ({\r\n  type: CHANGE_CLEAR,\r\n  data: flag\r\n});","import { getContent } from \"../../../api\";\r\nimport {\r\n  CHANGE_SEARCH,\r\n  CHANGE_SORT,\r\n  CHANGE_ACTIVE_INPUT,\r\n  CHANGE_CLEAR\r\n} from \"../../actions\";\r\n\r\nexport const initialState = {\r\n  content: [...getContent()],\r\n  sort: {\r\n    value: \"default\",\r\n    inputName: \"\"\r\n  },\r\n  search: {\r\n    filter: \"\",\r\n    inputName: \"\"\r\n  },\r\n  activeInput: null\r\n};\r\n\r\nexport function tableReducers(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH:\r\n      return { ...state, ...{ search: action.data } };\r\n\r\n    case CHANGE_SORT:\r\n      return { ...state, ...{ sort: action.data } };\r\n\r\n    case CHANGE_ACTIVE_INPUT:\r\n      return { ...state, ...{ activeInput: action.data } };\r\n\r\n    case CHANGE_CLEAR:\r\n      return {\r\n        ...state,\r\n        ...{\r\n          sort: { value: action.data, inputName: action.data },\r\n          activeInput: action.data,\r\n          search: { filter: action.data, inputName: action.data }\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const getContent = () => {\r\n  return [\r\n    { id: 1, name: \"Вася\", date: \"15.06.2018\", count: 11 },\r\n    { id: 2, name: \"Петя\", date: \"23.11.2018\", count: 23 },\r\n    { id: 3, name: \"Иван\", date: \"12 march 2017\", count: 3 },\r\n    { id: 4, name: \"Александр\", date: \"20/12/2010\", count: 1 },\r\n    { id: 5, name: \"Евгений\", date: \"12.09.2018\", count: 112 },\r\n    { id: 6, name: \"Мария\", date: \"1.08.2016\", count: 122 },\r\n    { id: 7, name: \"Анастасия\", date: \"20.11.2018\", count: 34 },\r\n    { id: 0, name: \"Тестович\", date: \"03.04.1994\", count: 13 },\r\n    { id: 8, name: \"Степан\", date: \"12.11.2019\", count: 10 }\r\n  ];\r\n};\r\n","import { combineReducers } from 'redux';\nimport { tableReducers } from './TableReducers';\n\nexport const reducers = combineReducers({\n    'content': tableReducers,\n})","import { createStore } from \"redux\";\r\nimport { reducers } from \"./reducers\";\r\n\r\nexport const store = createStore(\r\n  reducers /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n// подключил для удобной отладки через плагин redux в chrome\r\n","import { connect } from \"react-redux\";\r\nimport SearchMenuComponent from \"../../components/SearchMenuComponent\";\r\nimport { changeSearch, changeActiveInput } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  activeInput: state.content.activeInput\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChangeSearch: (search, name) => dispatch(changeSearch(search, name)),\r\n  handleChangeActiveInput: id => dispatch(changeActiveInput(id))\r\n});\r\n\r\nexport const SearchMenuContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchMenuComponent);\r\n","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function SearchMenuComponent(props) {\r\n  const {\r\n    id,\r\n    placeholder,\r\n    activeInput,\r\n    handleChangeSearch,\r\n    handleChangeActiveInput\r\n  } = props;\r\n  const flag = activeInput === id;\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className={`input-text ${flag ? \"input-active\" : \"\"}`}\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={flag ? value : \"\"}\r\n        data-name={placeholder}\r\n        id={id}\r\n        onChange={e => {\r\n          setValue(e.currentTarget.value);\r\n          handleChangeSearch({\r\n            filter: e.currentTarget.value,\r\n            inputName: e.currentTarget.dataset.name\r\n          });\r\n          flag ? console.log(\"заглушка\") : handleChangeActiveInput(id);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function InputBtnSortComponent(props) {\r\n  const { value, handleChangeSort, flag, id, placeholder } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"inputBtnComp\"\r\n        type=\"button\"\r\n        value={value}\r\n        data-placeholder={placeholder}\r\n        data-id={id}\r\n        onClick={() => {\r\n          handleChangeSort({ value: flag, inputName: placeholder });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","//конфигурация для отрисовки кнопок сортировки\r\nexport const arrBtnForSortMenuComponent = [\r\n  { flag: \"up\", icon: \"up\" },\r\n  { flag: \"down\", icon: \"down\" },\r\n  { flag: \"default\", icon: \"default\" }\r\n];\r\n","import { connect } from \"react-redux\";\r\nimport SortMenuComponent from \"../../components/SortMenuComponent\";\r\nimport { changeSort } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChangeSort: flag => dispatch(changeSort(flag))\r\n});\r\n\r\nexport const SortMenuContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SortMenuComponent);\r\n","import React from \"react\";\r\nimport InputBtnSortComponent from \"../InputBtnSortComponent\";\r\nimport { arrBtnForSortMenuComponent } from \"../../utils/arrBtnForSortMenuComponent\";\r\nimport \"./style.css\";\r\n\r\nexport default function SortMenuComponent(props) {\r\n  const { handleChangeSort, placeholder } = props;\r\n\r\n  return (\r\n    <div className=\"sortMenuComp\">\r\n      {arrBtnForSortMenuComponent.map((item, id) => (\r\n        <InputBtnSortComponent\r\n          value={item.icon}\r\n          flag={item.flag}\r\n          handleChangeSort={handleChangeSort}\r\n          placeholder={placeholder}\r\n          key={id}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { SearchMenuContainer } from \"../../containers/SearchMenuContainer\";\r\nimport { SortMenuContainer } from \"../../containers/SortMenuContainer\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function GroupMenuComponent(props) {\r\n  const { placeholder, id } = props;\r\n\r\n  return (\r\n    <div>\r\n      <SearchMenuContainer placeholder={placeholder} id={id} />\r\n      <SortMenuContainer placeholder={placeholder} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport GroupMenuComponent from \"../GroupMenuComponent\";\r\n\r\nexport default function HeadComponent(props) {\r\n  const { data } = props;\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(data).map((item, id) => (\r\n          <th className=\"col\" key={id}>\r\n            {item}\r\n            <GroupMenuComponent placeholder={item} id={id} />\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n","// поиск совпадений по заданному ключу и вэлью\r\nexport const filterData = (data, key_, value) => {\r\n  if (key_ && value !== \"\") {\r\n    const result = data.filter(\r\n      row =>\r\n        row[key_]\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(value.toString().toLowerCase()) >= 0\r\n    );\r\n    return result;\r\n  } else {\r\n    return data;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './style.css'\r\n\r\nexport default function CellBodyComponent(props) {\r\n    const { value } = props\r\n    return(\r\n        <td className=\"cellBody\">\r\n            { value }\r\n        </td>\r\n    )\r\n}","import React from \"react\";\r\nimport CellBodyComponent from \"../CellBodyComponent\";\r\nimport \"./style.css\";\r\n\r\nexport default function RowComponent(props) {\r\n  const { content, id } = props;\r\n\r\n  return (\r\n    <tr className={`${id % 2 ? \"\" : \"rowComp-white\"}`} key={id}>\r\n      {Object.keys(content).map((item, id) => (\r\n        <CellBodyComponent value={content[item]} key={id} />\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\n","//класс сортировки, практически хард-код, на масштабируемость не дотянул\r\n//не смог додумать, как сортировку сделать универсальной для новых и новых полей (сложненько из-за даты)\r\nexport default class SortCustom {\r\n  constructor(data, nameInput, sort) {\r\n    this.state = [...data];\r\n    this.nameInput = nameInput;\r\n    this.sort = sort;\r\n\r\n    if (this.sort === \"up\") {\r\n      return this.switchMethod();\r\n    } else if (this.sort === \"down\") {\r\n      return this.switchMethod().reverse();\r\n    } else {\r\n      return this.state;\r\n    }\r\n  }\r\n\r\n  switchMethod = () => {\r\n    if (this.nameInput === \"id\" || this.nameInput === \"count\") {\r\n      return this.sortNumber(this.state, this.nameInput);\r\n    } else if (this.nameInput === \"name\") {\r\n      return this.sortString(this.state, this.nameInput);\r\n    } else if (this.nameInput === \"date\") {\r\n      return this.sortDate(this.state, this.nameInput);\r\n    } else {\r\n      return this.state;\r\n    }\r\n  };\r\n\r\n  sortNumber = (data, nameInput) => {\r\n    return [...data].sort(function(a, b) {\r\n      return a[nameInput] - b[nameInput];\r\n    });\r\n  };\r\n\r\n  sortDate = (data, nameInput) => {\r\n    const reverseDayToMonth = stringDate => {\r\n      const arrDate = stringDate.split(/[.|/| ]/);\r\n      [arrDate[0], arrDate[1]] = [arrDate[1], arrDate[0]];\r\n      return arrDate.join(\".\");\r\n    };\r\n\r\n    return [...data].sort(function(a, b) {\r\n      const dateA = new Date(reverseDayToMonth(a[nameInput]));\r\n      const dateB = new Date(reverseDayToMonth(b[nameInput]));\r\n      return dateA - dateB; //сортировка по возрастающей дате\r\n    });\r\n  };\r\n\r\n  sortString = (data, nameInput) => {\r\n    return [...data].sort(function(a, b) {\r\n      const nameA = a[nameInput].toLowerCase();\r\n      const nameB = b[nameInput].toLowerCase();\r\n      if (nameA < nameB)\r\n        //сортируем строки по возрастанию\r\n        return -1;\r\n      if (nameA > nameB) return 1;\r\n      return 0; // Никакой сортировки\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport RowComponent from \"../RowComponent\";\r\nimport SortCustom from \"../../utils/SortData\";\r\n\r\nexport default function BodyComponent(props) {\r\n  const { data, sort, nameInput, value } = props;\r\n  const sortCustom = new SortCustom(data, nameInput, sort, value);\r\n\r\n  return (\r\n    <tbody>\r\n      {[...sortCustom].length ? (\r\n        [...sortCustom].map((item, id) => (\r\n          <RowComponent content={item} id={id} key={id} />\r\n        ))\r\n      ) : (\r\n        <RowComponent content={[\"нет совпадений\"]} />\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport DisplayComponent from \"../../components/DisplayComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n  activeInput: state.content.activeInput,\r\n  sort: state.content.sort,\r\n  search: state.content.search\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport const DisplayContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisplayComponent);\r\n","import React from \"react\";\r\n\r\nexport default function DisplayComponent(props) {\r\n  const { dataLength, sort, search } = props;\r\n  const { value, inputName } = sort;\r\n  const { filter } = search;\r\n  return (\r\n    <div>\r\n      <h3>Искомая строка: {filter ? filter : \"искомая строка не задана\"}</h3>\r\n      <hr />\r\n      <h3>\r\n        Поиск по полю: {search.inputName ? search.inputName : \"поле не выбрано\"}\r\n      </h3>\r\n      <h3>Сортировка по полю: {inputName ? inputName : \"поле не выбрано\"}</h3>\r\n      <h3>\r\n        Напраление сортировки: {value === \"\" ? \"направление не задано\" : value}\r\n      </h3>\r\n      <hr />\r\n      <h3>Кол-во совпадений: {dataLength ? dataLength : \"0\"}</h3>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport InputBtnClearComponent from \"../../components/InputBtnClearComponent\";\r\nimport { changeClear } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleClear: flag => dispatch(changeClear(flag))\r\n});\r\n\r\nexport const InputBtnClearContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InputBtnClearComponent);\r\n\r\n// кнопка очистки полей\r\n","import React from \"react\";\r\n\r\nexport default function InputBtnClearComponent(props) {\r\n  const { handleClear } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"button\"\r\n        value=\"сбросить конфигурацию поиска и сортировки\"\r\n        onClick={() => handleClear(\"\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport TableWidgetComponent from \"../../components/TableWidgetComponent\";\r\nimport { changeSearch } from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  sort: state.content.sort,\r\n  search: state.content.search,\r\n  content: state.content.content\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChange: data => dispatch(changeSearch(data))\r\n});\r\n\r\nexport const TableWidgetContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TableWidgetComponent);\r\n","import React from \"react\";\r\nimport HeadComponent from \"../HeadComponent\";\r\nimport { filterData } from \"../../utils/filterData\";\r\nimport BodyComponent from \"../BodyComponent\";\r\nimport { DisplayContainer } from \"../../containers/DisplayContainer\";\r\nimport { InputBtnClearContainer } from \"../../containers/InputBtnClearContainer\";\r\nimport \"./style.css\";\r\n\r\nexport default function TableWidgetComponent(props) {\r\n  const { content, search, sort } = props;\r\n\r\n  const dataSort = sort.value;\r\n  const value = search.filter;\r\n  const key = search.inputName;\r\n  const nameInput = sort.inputName;\r\n  const dataFilter = filterData(content, key, value);\r\n\r\n  return (\r\n    <div className=\"tableWidget\">\r\n      <div>\r\n        <div>\r\n          <DisplayContainer dataLength={dataFilter.length} />\r\n          <InputBtnClearContainer />\r\n        </div>\r\n        <table>\r\n          <HeadComponent data={content[0]} />\r\n          <BodyComponent\r\n            data={dataFilter}\r\n            sort={dataSort}\r\n            nameInput={nameInput}\r\n            value={value}\r\n          />\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store\";\nimport { TableWidgetContainer } from \"./containers/TableWidgetContainer\";\n\nimport \"./style.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <TableWidgetContainer />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}