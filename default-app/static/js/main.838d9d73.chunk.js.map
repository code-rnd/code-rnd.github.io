{"version":3,"sources":["store/reducers/default/index.js","store/actions/counter/index.js","store/reducers/counter/index.js","store/actions/sw/index.js","store/reducers/sw/index.js","store/reducers/index.js","store/actions/default/index.js","store/index.js","containers/counter/index.js","components/counter/CounterComponent/index.jsx","containers/default/DefaultContainer/index.js","components/default/DefaultComponent/index.js","api/swapi/index.js","containers/sw/SwContainer/index.js","store/actions/sw/async/index.js","components/sw/SwComponent/index.jsx","index.js","components/WidjetComponent/index.jsx"],"names":["initialState","default","id","name","phone","incrementCounter","count","type","data","decrementCounter","toggleIsFetching","status","people","planets","starships","isFetching","reducers","combineReducers","content","state","action","text","counter","newCount","sw","newPeople","newPlanets","newStarships","newIsFetching","store","createStore","composeWithDevTools","applyMiddleware","thunk","mapDispatchToProps","incrementCounterAsync","sec","dispatch","setTimeout","decrementCounterAsync","CounterContainer","connect","props","useState","isCountInc","setIsCountInc","isCountDec","setIsCountDec","className","value","onChange","e","currentTarget","onClick","changeText","DefaultContainer","currentText","placeholder","instance","axios","create","baseURL","swApi","peopleId","get","then","response","planetId","starshipId","getPeople","catch","getPlanets","getStarships","SwContainer","isSearchId","setIsSearchId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.838d9d73.chunk.js","sourcesContent":["import { CHANGE_TEXT } from \"../../actions/default\";\n\nconst initialContent = [\n  {\n    id: 0,\n    name: \"defaultName\",\n    phone: \"404\"\n  },\n  {\n    id: 1,\n    name: \"defaultName\",\n    phone: \"505\"\n  }\n];\n\nexport const initialState = {\n  default: [...initialContent]\n};\n\nexport function defaultReducers(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_TEXT:\n      return { ...state, ...{ text: action.data } };\n\n    default:\n      return state;\n  }\n}\n","export const INCREMENT_COUNTER = \"INCREMENT_COUNTER\";\r\nexport const DECREMENT_COUNTER = \"DECREMENT_COUNTER\";\r\n\r\nexport const incrementCounter = (count = 1) => ({\r\n  type: INCREMENT_COUNTER,\r\n  data: count\r\n});\r\n\r\nexport const decrementCounter = (count = 1) => ({\r\n  type: DECREMENT_COUNTER,\r\n  data: count\r\n});\r\n\r\nexport const incrementCounterAsync = (count, sec = 3) => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(incrementCounter(count));\r\n    }, 1000 * sec);\r\n  };\r\n};\r\n\r\nexport const decrementCounterAsync = (count, sec = 3) => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(decrementCounter(count));\r\n    }, 1000 * sec);\r\n  };\r\n};\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"../../actions/counter\";\r\n\r\nexport const initialState = {\r\n  count: 0\r\n};\r\n\r\nexport function counterReducers(state = initialState, action) {\r\n  const count = state.count;\r\n  let newCount = 0;\r\n\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      newCount = action.data;\r\n      newCount = count + newCount;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          count: newCount\r\n        }\r\n      };\r\n\r\n    case DECREMENT_COUNTER:\r\n      newCount = action.data;\r\n      newCount = count - newCount;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          count: newCount\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SET_PEOPLE = \"SET_PEOPLE\";\r\nexport const SET_PLANETS = \"SET_PLANETS\";\r\nexport const SET_STARSHIPS = \"SET_STARSHIPS\";\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\nexport const setPeople = people => ({\r\n  type: SET_PEOPLE,\r\n  data: people\r\n});\r\n\r\nexport const setPlanets = planets => ({\r\n  type: SET_PLANETS,\r\n  data: planets\r\n});\r\n\r\nexport const setStarships = starships => ({\r\n  type: SET_STARSHIPS,\r\n  data: starships\r\n});\r\n\r\nexport const toggleIsFetching = status => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  data: status\r\n});\r\n","import {\r\n  SET_PEOPLE,\r\n  SET_PLANETS,\r\n  SET_STARSHIPS,\r\n  TOGGLE_IS_FETCHING\r\n} from \"../../actions/sw\";\r\n\r\nexport const initialState = {\r\n  data: {\r\n    people: null,\r\n    planets: null,\r\n    starships: null\r\n  },\r\n  isFetching: false\r\n};\r\n\r\nexport function swReducers(state = initialState, action) {\r\n  const data = state.data;\r\n\r\n  let newPeople = null;\r\n  let newPlanets = null;\r\n  let newStarships = null;\r\n  let newIsFetching = null;\r\n\r\n  switch (action.type) {\r\n    case SET_PEOPLE:\r\n      newPeople = action.data;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          data: {\r\n            ...data,\r\n            people: newPeople\r\n          }\r\n        }\r\n      };\r\n\r\n    case SET_PLANETS:\r\n      newPlanets = action.data;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          data: {\r\n            ...data,\r\n            planets: newPlanets\r\n          }\r\n        }\r\n      };\r\n\r\n    case SET_STARSHIPS:\r\n      newStarships = action.data;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          data: {\r\n            ...data,\r\n            starships: newStarships\r\n          }\r\n        }\r\n      };\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      newIsFetching = action.data;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          isFetching: newIsFetching\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport { defaultReducers } from \"./default\";\nimport { counterReducers } from \"./counter\";\nimport { swReducers } from \"./sw\";\n\nexport const reducers = combineReducers({\n  content: defaultReducers,\n  counter: counterReducers,\n  sw: swReducers\n});\n","export const CHANGE_TEXT = \"CHANGE_TEXT\";\n\nexport const changeText = text => ({\n    type: CHANGE_TEXT,\n    data: text\n})","import { createStore, applyMiddleware } from \"redux\";\nimport { reducers } from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n  reducers /* preloadedState, */,\n  composeWithDevTools(applyMiddleware(thunk))\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { connect } from \"react-redux\";\r\nimport CounterComponent from \"../../components/counter/CounterComponent\";\r\nimport {\r\n  incrementCounter,\r\n  decrementCounter,\r\n  incrementCounterAsync,\r\n  decrementCounterAsync\r\n} from \"../../store/actions/counter\";\r\n\r\nconst mapStateToProps = state => ({\r\n  count: state.counter.count\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  incrementCounter,\r\n  decrementCounter,\r\n  incrementCounterAsync,\r\n  decrementCounterAsync\r\n};\r\n\r\nexport const CounterContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CounterComponent);\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport default function CounterComponent(props) {\r\n  // прокинутые диспатчи\r\n  const {\r\n    incrementCounter,\r\n    decrementCounter,\r\n    incrementCounterAsync,\r\n    decrementCounterAsync\r\n  } = props;\r\n\r\n  // прокинутый стэйт\r\n  const { count } = props;\r\n\r\n  // локальный стейт в хуках\r\n  const [isCountInc, setIsCountInc] = useState(1);\r\n  const [isCountDec, setIsCountDec] = useState(1);\r\n\r\n  return (\r\n    <div className={\"counter\"}>\r\n      <div className={\"display\"}>{count}</div>\r\n\r\n      <div className={\"counter__container counter-increment\"}>\r\n        <div className={\"input-increment\"}>\r\n          <input\r\n            type={\"text\"}\r\n            value={isCountInc}\r\n            onChange={e => {\r\n              setIsCountInc(+e.currentTarget.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"btn-increment\">\r\n          <input\r\n            type={\"button\"}\r\n            value={\"incr\"}\r\n            onClick={() => {\r\n              incrementCounter(isCountInc);\r\n            }}\r\n          />\r\n          <input\r\n            type={\"button\"}\r\n            value={\"incr-Async\"}\r\n            onClick={() => {\r\n              incrementCounterAsync(isCountInc);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={\"counter__container counter-decrement\"}>\r\n        <div className={\"input-decrement\"}>\r\n          <input\r\n            type={\"text\"}\r\n            value={isCountDec}\r\n            onChange={e => {\r\n              setIsCountDec(+e.currentTarget.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"btn-decrement\">\r\n          <input\r\n            type={\"button\"}\r\n            value={\"decr\"}\r\n            onClick={() => {\r\n              decrementCounter(isCountDec);\r\n            }}\r\n          />\r\n          <input\r\n            type={\"button\"}\r\n            value={\"decr-Async\"}\r\n            onClick={() => {\r\n              decrementCounterAsync(isCountDec);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\nimport DefaultComponent from \"../../../components/default/DefaultComponent\";\nimport { changeText } from \"../../../store/actions/default\";\n\nconst mapStateToProps = state => ({\n  currentText: state.content.text\n});\n\nconst mapDispatchToProps = {\n  changeText\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   handleChangeText: text => dispatch(changeText(text))\n// });\n\nexport const DefaultContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DefaultComponent);\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nexport default function DefaultComponent(props) {\n  const { changeText, currentText } = props;\n\n  return (\n    <div className=\"default margin-top20px\">\n      <div>\n        <span>\n          {currentText && currentText !== \" \" ? currentText : \"напечатай\"}\n        </span>\n      </div>\n      <br />\n      <div>\n        <input\n          type={\"text\"}\n          placeholder={\"text\"}\n          onChange={e => changeText(e.currentTarget.value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: \"https://swapi.co/api/\"\r\n});\r\n\r\nexport const swApi = {\r\n  getPeople(peopleId) {\r\n    return instance.get(`people/${peopleId}/`).then(response => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getPlanets(planetId) {\r\n    return instance.get(`planets/${planetId}/`).then(response => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getStarships(starshipId) {\r\n    return instance.get(`starships/${starshipId}/`).then(response => {\r\n      return response.data;\r\n    });\r\n  }\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getPeople,\r\n  getPlanets,\r\n  getStarships\r\n} from \"../../../store/actions/sw/async\";\r\nimport SwComponent from \"../../../components/sw/SwComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n  people: state.sw.data.people,\r\n  planets: state.sw.data.planets,\r\n  starships: state.sw.data.starships,\r\n  isFetching: state.sw.isFetching\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPeople,\r\n  getPlanets,\r\n  getStarships\r\n};\r\n\r\nexport const SwContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SwComponent);\r\n","import { toggleIsFetching, setPeople, setPlanets, setStarships } from \"..\";\r\nimport { swApi } from \"../../../../api/swapi\";\r\n\r\nexport const getPeople = id => {\r\n  return dispatch => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    swApi\r\n      .getPeople(id)\r\n      .then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setPeople(data.name));\r\n      })\r\n      .catch(data => {\r\n        dispatch(toggleIsFetching(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getStarships = id => {\r\n  return dispatch => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    swApi\r\n      .getStarships(id)\r\n      .then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setStarships(data.name));\r\n      })\r\n      .catch(data => {\r\n        dispatch(toggleIsFetching(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getPlanets = id => {\r\n  return dispatch => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    swApi\r\n      .getPlanets(id)\r\n      .then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setPlanets(data.name));\r\n      })\r\n      .catch(data => {\r\n        dispatch(toggleIsFetching(false));\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function SwComponent(props) {\r\n  const { getPeople, getPlanets, getStarships } = props;\r\n  const { people, planets, starships } = props;\r\n  const { isFetching } = props;\r\n\r\n  const [isSearchId, setIsSearchId] = useState(1);\r\n\r\n  const getFormSpin = () => {\r\n    return <div className={\"spin\"}>загружаю...</div>;\r\n  };\r\n\r\n  const getFormDisplay = () => {\r\n    return (\r\n      <div className={\"sw__display\"}>\r\n        <div>{people ? people : \"герой не найден\"}</div>\r\n        <div>{planets ? planets : \"планета не найдена\"}</div>\r\n        <div>{starships ? starships : \"корабль не найден\"}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={\"sw\"}>\r\n      {isFetching ? getFormSpin() : getFormDisplay()}\r\n      <div className={\"sw__configMenu\"}>\r\n        <div className={\"configInput\"}>\r\n          <input\r\n            type={\"text\"}\r\n            value={isSearchId}\r\n            onChange={e => {\r\n              setIsSearchId(+e.currentTarget.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={\"configBtns\"}>\r\n          <input\r\n            type={\"button\"}\r\n            value={\"getPeople\"}\r\n            onClick={() => {\r\n              getPeople(isSearchId);\r\n            }}\r\n          />\r\n          <input\r\n            type={\"button\"}\r\n            value={\"getPlanets\"}\r\n            onClick={() => {\r\n              getPlanets(isSearchId);\r\n            }}\r\n          />\r\n          <input\r\n            type={\"button\"}\r\n            value={\"getStarships\"}\r\n            onClick={() => {\r\n              getStarships(isSearchId);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport WidjetComponent from \"./components/WidjetComponent\";\n\nimport \"./styles/style.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <WidjetComponent />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\r\nimport { CounterContainer } from \"../../containers/counter\";\r\nimport { DefaultContainer } from \"../../containers/default/DefaultContainer\";\r\nimport { SwContainer } from \"../../containers/sw/SwContainer\";\r\n\r\nexport default function WidjetComponent(props) {\r\n  return (\r\n    <div className={\"widjet\"}>\r\n      <CounterContainer />\r\n      <DefaultContainer />\r\n      <SwContainer />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}