{"version":3,"sources":["store/actions/cards/index.js","utils/cards/index.js","store/reducers/cards/index.js","store/actions/timer/index.js","store/reducers/timer/index.js","store/actions/users/index.js","utils/users/index.js","store/reducers/users/index.js","store/reducers/index.js","store/index.js","containers/CardComponent/index.js","components/CardComponent/index.jsx","utils/convertCards.js","containers/CardsContainer/index.js","components/CardsComponent/index.jsx","containers/util/IosSwitchContainer/index.js","components/utils/IosSwitchComponent/index.jsx","containers/InformMenuContainer/index.js","components/InformMenuComponent/index.jsx","containers/MainMenu/UserContainer/index.js","components/MainMenu/UserComponent/index.jsx","containers/MainMenu/UsersContainer/index.js","components/MainMenu/UsersComponent/index.jsx","containers/MainMenu/AddUserContainer/index.js","components/MainMenu/AddUserComponent/index.jsx","components/MainMenu/MenuComponent/index.jsx","containers/WidjetContainer/index.js","components/WidjetComponent/index.jsx","index.js"],"names":["UPDATE_CARD","ADD_OPEN_CARDS","REMOVE_OPEN_CARDS","ADD_MATCHES_FOUND","SET_STATE_CARDS_DEFAULT","SET_STATE_CARDS_SHUFFLED","SET_OPACITY_CARDS","setStateCardsDefault","type","updateCardsUtil","cards","card","newCards","map","item","index","id","addOpenCardsUtil","openCards","newCard","removeOpenCardsUtil","newOpenCards","splice","compareTwoValuesInArray","key","length","comparisonResult","shuffledCardsUtil","array","sort","Math","random","initialContent","n","i","push","data","img","isOpen","hidden","generatedArrayCardsUtil","initialState","matchesCount","opacityCards","SET_TIMER","setTimer","timer","params","status","name","count","ADD_USER","UPDATE_USER","SET_CURRENT_USER","addUsersUtil","users","user","idGen","newUser","updateUsersUtil","idUser","indexUser","getNewRecordTimeUtil","undefined","recordTime","getSortedUsersUtil","a","b","initialUsers","currentUser","reducers","combineReducers","state","action","newTimer","nameUser","newUsers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","mapDispatchToProps","updateCard","addOpenCards","removeOpenCards","addMatchesFound","CardContainer","connect","content","props","isDisabled","useEffect","setTimeout","handleSetHidden","handleClosedCard","className","onClick","disabled","style","backgroundImage","convertArr","updateUser","CardsContainer","handleStopGame","clearInterval","element","setOpacityCards","flag","IosSwitchContainer","useState","isToggle","setToggle","InformMenuContainer","value","setCurrentUser","setStateCardsShuffled","UserContainer","rating","setInterval","handleStartGame","UsersContainer","addUser","AddUserContainer","isNameUser","setNameUser","placeholder","onChange","e","currentTarget","MainMenuComponent","WidjetContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab93595c.chunk.js","sourcesContent":["export const UPDATE_CARD = \"UPDATE_CARD\";\r\nexport const ADD_OPEN_CARDS = \"ADD_OPEN_CARDS\";\r\nexport const REMOVE_OPEN_CARDS = \"REMOVE_OPEN_CARDS\";\r\nexport const ADD_MATCHES_FOUND = \"ADD_MATCHES_FOUND\";\r\nexport const SET_STATE_CARDS_DEFAULT = \"SET_STATE_CARDS_DEFAULT\";\r\nexport const SET_STATE_CARDS_SHUFFLED = \"SET_STATE_CARDS_SHUFFLED\";\r\nexport const SET_OPACITY_CARDS = \"SET_OPACITY_CARDS\";\r\n\r\nexport const updateCard = card => ({\r\n    type: UPDATE_CARD,\r\n    data: card\r\n});\r\n\r\nexport const addOpenCards = card => ({\r\n    type: ADD_OPEN_CARDS,\r\n    data: card\r\n});\r\n\r\nexport const removeOpenCards = card => ({\r\n    type: REMOVE_OPEN_CARDS,\r\n    data: card\r\n});\r\n\r\nexport const addMatchesFound = () => ({\r\n    type: ADD_MATCHES_FOUND,\r\n});\r\n\r\nexport const setStateCardsDefault = () => ({\r\n    type: SET_STATE_CARDS_DEFAULT\r\n});\r\n\r\nexport const setStateCardsShuffled = () => ({\r\n    type: SET_STATE_CARDS_SHUFFLED\r\n});\r\n\r\nexport const setOpacityCards = flag => ({\r\n    type: SET_OPACITY_CARDS,\r\n    data: flag\r\n})","// ищем нужный элемент\r\n// заменяем его на новый-актуальный\r\n// возрващаем обновленный массив\r\nexport const updateCardsUtil = (cards, card) => {\r\n\r\n    if (!cards || !card) {\r\n        return ['null'];\r\n    }\r\n\r\n    let newCards = [...cards];\r\n\r\n    [...cards].map((item, index) => {\r\n        if (item.id === card.id) {\r\n            newCards[index] = {...item, ...card}\r\n        }\r\n    })\r\n\r\n    return newCards;\r\n}\r\n\r\n// добавляем в массив открытых карт - новую открытую карту\r\nexport const addOpenCardsUtil = (openCards, card) => {\r\n    if (!openCards || !card) {\r\n        return [];\r\n    }\r\n\r\n    const newCard = {...card};\r\n    const newOpenCards = [...openCards, newCard];\r\n\r\n    return newOpenCards;\r\n}\r\n\r\n// удаляем из массива открытых карт - карту, которая закрылась\r\nexport const removeOpenCardsUtil = (openCards, card) => {\r\n    if (!openCards || !card) {\r\n        return [];\r\n    }\r\n\r\n    const newOpenCards = [...openCards];\r\n\r\n    [...openCards].map((item, index) => {\r\n        if (item.id === card.id) {\r\n            newOpenCards.splice(index, 1);\r\n        }\r\n    })\r\n\r\n    return newOpenCards;\r\n}\r\n\r\n// сравниваем два элемента по ключу\r\n// возвращаем true или false\r\nexport const compareTwoValuesInArray = (openCards, key) => {\r\n    if (!openCards || openCards.length < 2) {\r\n        return false;\r\n    }\r\n\r\n    const newOpenCards = [...openCards];\r\n    let comparisonResult = false;\r\n\r\n    if (newOpenCards[0][key] === newOpenCards[1][key]) {\r\n        comparisonResult = true;\r\n    }\r\n\r\n    return comparisonResult;\r\n}\r\n\r\nexport const compareValueInArrays = (openCards, card) => {\r\n    if (!openCards || !card) {\r\n        return false;\r\n    }\r\n\r\n    let result = false;\r\n\r\n    openCards.map(openCard => {\r\n        if (openCard.id === card.id) {\r\n            result = true;\r\n        }\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nexport const randomUtil = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются\r\n}\r\n\r\nexport const shuffledCardsUtil = (array) =>\r\n    [...array].sort(() => {\r\n        return Math.random() - 0.5;\r\n    });\r\n\r\n// генерирую массив карт\r\nexport const generatedArrayCardsUtil = (n = 18) => {\r\n    let cards = [];\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        cards.push({\r\n            data: `data-${i}`,\r\n            img: `${i}.jpg`,\r\n            isOpen: false,\r\n            hidden: false\r\n        })\r\n    }\r\n\r\n    cards = [...cards, ...cards];\r\n\r\n    [...cards].map((item, id) => {\r\n        cards[id] = {id: id, ...cards[id]}\r\n    })\r\n\r\n    return cards;\r\n}","import {\n    ADD_OPEN_CARDS,\n    REMOVE_OPEN_CARDS,\n    UPDATE_CARD,\n    ADD_MATCHES_FOUND,\n    SET_STATE_CARDS_DEFAULT,\n    SET_STATE_CARDS_SHUFFLED,\n    SET_OPACITY_CARDS\n} from \"../../actions/cards\";\n\nimport {\n    addOpenCardsUtil,\n    generatedArrayCardsUtil,\n    removeOpenCardsUtil,\n    shuffledCardsUtil,\n    updateCardsUtil\n} from \"../../../utils/cards\";\n\nconst initialContent = [...generatedArrayCardsUtil()];\n\nexport const initialState = {\n    cards: [...initialContent],\n    openCards: [],\n    matchesCount: 0,\n    opacityCards: false,\n}\n\nexport function cardsReducers(state = initialState, action) {\n\n    const cards = [...state.cards];\n    let newCard = {};\n    let newCards = [];\n\n    const openCards = [...state.openCards];\n    let newOpenCards = [];\n\n    const matchesCount = state.matchesCount;\n\n    let opacityCards = 0;\n\n    switch (action.type) {\n\n        case UPDATE_CARD:\n\n            newCard = action.data;\n            newCards = updateCardsUtil(cards, newCard);\n\n            return {\n                ...state,\n                ...{\n                    cards: newCards\n                }\n            }\n\n        case ADD_OPEN_CARDS:\n\n            newCard = action.data;\n            newOpenCards = addOpenCardsUtil(openCards, newCard);\n\n            return {\n                ...state,\n                ...{\n                    openCards: newOpenCards\n                }\n            }\n\n        case REMOVE_OPEN_CARDS:\n\n            newCard = action.data;\n            newOpenCards = removeOpenCardsUtil(openCards, newCard);\n\n            return {\n                ...state,\n                ...{\n                    openCards: newOpenCards\n                }\n            }\n\n        case ADD_MATCHES_FOUND:\n\n            return {\n                ...state,\n                ...{\n                    matchesCount: matchesCount + 1\n                }\n            }\n\n        case SET_STATE_CARDS_DEFAULT:\n\n            return {\n                ...state,\n                ...initialState,\n                ...{\n                    matchesCount: 0\n                }\n            }\n\n        case SET_STATE_CARDS_SHUFFLED:\n\n            newCards = shuffledCardsUtil([...cards]);\n\n            return {\n                ...state,\n                cards: newCards\n            }\n\n        case SET_OPACITY_CARDS:\n\n            opacityCards = action.data;\n\n            return {\n                ...state,\n                opacityCards: opacityCards\n            }\n\n        default:\n            return state\n    }\n}","export const SET_TIMER = \"SET_TIMER\";\r\n\r\nexport const setTimer = timer => ({\r\n    type: SET_TIMER,\r\n    data: timer\r\n})\r\n","import {SET_TIMER} from \"../../actions/timer\";\r\n\r\nexport const initialState = {\r\n    params: {\r\n        status: false,\r\n        name: 'name',\r\n        count: 0\r\n    }\r\n}\r\n\r\nexport function timerReducers(state = initialState, action) {\r\n\r\n    const timer = state.params;\r\n    let newTimer = {}\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_TIMER:\r\n\r\n            newTimer = action.data;\r\n\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    params: {...timer, ...newTimer}\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADD_USER = \"ADD_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const addUser = name => ({\r\n    type: ADD_USER,\r\n    data: name\r\n})\r\n\r\nexport const updateUser = user => ({\r\n    type: UPDATE_USER,\r\n    data: user\r\n})\r\n\r\nexport const setCurrentUser = user => ({\r\n    type: SET_CURRENT_USER,\r\n    data: user\r\n})","export const addUsersUtil = (users, user) => {\r\n\r\n    if (!users || !user) {\r\n        return [];\r\n    }\r\n\r\n    const idGen = [...users][users.length - 1].id + 1;\r\n    const newUser = {id: idGen, ...user};\r\n    const newUsers = [...users, newUser];\r\n\r\n    return newUsers;\r\n}\r\n\r\nexport const updateUsersUtil = (users, user) => {\r\n    if (!users || !user) {\r\n        return [];\r\n    }\r\n\r\n    const idUser = user.id;\r\n    let indexUser = null;\r\n\r\n    [...users].map((item, index) => {\r\n        if (item.id === idUser) {\r\n            indexUser = index\r\n        }\r\n    })\r\n\r\n    const newUser = {...users[indexUser], ...user};\r\n    users[indexUser] = newUser;\r\n\r\n    return users;\r\n}\r\n\r\nexport const getNewRecordTimeUtil = (user, newUser) => {\r\n    if (!user || !newUser) {\r\n        return {};\r\n    }\r\n\r\n    if (user.recordTime === undefined) {\r\n        return {...user, ...newUser};\r\n    }\r\n\r\n    if (user.recordTime <= newUser.recordTime) {\r\n        return user;\r\n    }\r\n\r\n    if (user.recordTime > newUser.recordTime) {\r\n        return {...user, ...newUser};\r\n    }\r\n}\r\n\r\n// сортирую в порядке возрастания\r\n// массив объектов, по заданному ключу\r\nexport const getSortedUsersUtil = (users, key = 'recordTime') => {\r\n    if(!users) {\r\n        return []\r\n    };\r\n\r\n    return users.sort(function (a,b) {\r\n        return a[key] - b[key]\r\n    });\r\n}","import {ADD_USER, UPDATE_USER, SET_CURRENT_USER} from \"../../actions/users\";\r\nimport {addUsersUtil, getNewRecordTimeUtil, setCurrentUserUtil, updateUsersUtil} from \"../../../utils/users\";\r\n\r\nexport const initialUsers = [\r\n    {\r\n        id: 0,\r\n        name: 'Philip',\r\n        recordTime: 43,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Tomas',\r\n        recordTime: 59\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Bob',\r\n        recordTime: 34\r\n    }\r\n]\r\n\r\nexport const initialState = {\r\n    users: [...initialUsers],\r\n    currentUser: [...initialUsers][0]\r\n};\r\n\r\nexport function usersReducers(state = initialState, action) {\r\n\r\n    const users = state.users;\r\n\r\n    const currentUser = state.currentUser;\r\n\r\n    let newUser = {};\r\n    let nameUser = '';\r\n    let newUsers = [];\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_USER:\r\n\r\n            nameUser = action.data;\r\n            newUser = {name: nameUser, recordTime: undefined};\r\n            newUsers = addUsersUtil(users, newUser);\r\n\r\n            return {\r\n                ...state,\r\n                users: [...newUsers]\r\n            }\r\n\r\n        case UPDATE_USER:\r\n\r\n            newUser = action.data;\r\n            newUser = getNewRecordTimeUtil(currentUser, newUser);\r\n\r\n            newUsers = updateUsersUtil(users, newUser);\r\n\r\n            return {\r\n                ...state,\r\n                users: [...newUsers]\r\n            }\r\n\r\n        case SET_CURRENT_USER:\r\n\r\n            newUser = action.data;\r\n\r\n            return {\r\n                ...state,\r\n                currentUser: newUser\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\nimport {cardsReducers} from \"./cards\";\nimport {timerReducers} from \"./timer\";\nimport {usersReducers} from \"./users\";\n\nexport const reducers = combineReducers({\n    'content': cardsReducers,\n    'timer': timerReducers,\n    'users': usersReducers\n})","import { createStore } from \"redux\";\nimport { reducers } from \"./reducers\";\n\nexport const store = createStore(\n    reducers,/* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import {connect} from \"react-redux\";\r\nimport CardComponent from \"../../components/CardComponent\";\r\nimport {\r\n    addOpenCards,\r\n    removeOpenCards,\r\n    updateCard,\r\n    addMatchesFound,\r\n} from \"../../store/actions/cards\";\r\n\r\nconst mapStateToProps = state => ({\r\n    cards: state.content.cards,\r\n    openCards: state.content.openCards,\r\n    opacityCards: state.content.opacityCards\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateCard,\r\n    addOpenCards,\r\n    removeOpenCards,\r\n    addMatchesFound,\r\n\r\n}\r\n\r\nexport const CardContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CardComponent)","import React, {useEffect} from \"react\";\r\nimport {compareTwoValuesInArray} from \"../../utils/cards\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function CardComponent(props) {\r\n\r\n    const {card, openCards, opacityCards} = props;\r\n\r\n    const {isDisabled} = props;\r\n    const {img, isOpen, hidden} = card;\r\n\r\n    const {updateCard, addMatchesFound} = props;\r\n    const {addOpenCards, removeOpenCards} = props;\r\n\r\n    useEffect(() => {\r\n\r\n        // если открыто меньше двух карт,\r\n        // то выхожу из юзээффекта\r\n        if (openCards.length < 2) {\r\n            return;\r\n        }\r\n\r\n        // если карта закрыта,\r\n        // то выхожу из юзэффекта\r\n        if (!isOpen) {\r\n            return;\r\n        }\r\n\r\n        // если карты не равны,\r\n        // то закрываю обе обратно\r\n        if (!compareTwoValuesInArray(openCards, 'data')) {\r\n            setTimeout(() => {\r\n                handleClosedCard();\r\n            }, 300)\r\n\r\n            return;\r\n        }\r\n\r\n        // если карты равны\r\n        // то делаю их скрытыми\r\n        setTimeout(() => {\r\n            openCards.map(item => {\r\n                if (item.id === card.id) {\r\n                    handleSetHidden();\r\n                }\r\n            })\r\n        }, 500)\r\n    }, [openCards])\r\n\r\n    const handleOpenCard = () => {\r\n        updateCard({...card, isOpen: true});\r\n        addOpenCards(card);\r\n    }\r\n\r\n    const handleClosedCard = () => {\r\n        updateCard({...card, isOpen: false});\r\n        removeOpenCards(card);\r\n    }\r\n\r\n    const handleSetHidden = () => {\r\n        updateCard({...card, isOpen: false, hidden: true});\r\n        removeOpenCards(card);\r\n        addMatchesFound();\r\n    }\r\n\r\n    const handleGetDisabledStatus = () => {\r\n        if (isDisabled || isOpen) {\r\n            return true;\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <div className={`card ${hidden && 'card-hidden'}`} onClick={() => {\r\n            handleOpenCard();\r\n        }} disabled={handleGetDisabledStatus() || opacityCards}>\r\n            <div className={`card-img ${!isOpen && 'card-opacity0'} ${opacityCards && 'card-opacity05'}`}\r\n                 style={{backgroundImage: `url('./media/cards/img/${img}')`}}/>\r\n        </div>\r\n    )\r\n}","// конвертируем одномерный массив\r\n// в n - мерный массив\r\n// в данном случае, это нужно для отрисовки таблицы n * n\r\nexport const convertArr = (cards, n) => {\r\n\r\n    let newCards = [];\r\n    let count = -1;\r\n\r\n    [...cards].map((card, id) => {\r\n\r\n        if ((id % n)) {\r\n            newCards[count] = [...newCards[count], card]\r\n        } else {\r\n            count = count + 1;\r\n            newCards = [...newCards, []]\r\n            newCards[count] = [...newCards[count], card]\r\n        }\r\n    })\r\n\r\n    return newCards;\r\n}","import {connect} from \"react-redux\";\r\nimport CardsComponent from \"../../components/CardsComponent\";\r\nimport {setTimer} from \"../../store/actions/timer\";\r\nimport {updateUser} from \"../../store/actions/users\";\r\nimport {setStateCardsDefault} from \"../../store/actions/cards\";\r\n\r\nconst mapStateToProps = state => ({\r\n    cards: state.content.cards,\r\n    openCards: state.content.openCards,\r\n    matchesCount: state.content.matchesCount,\r\n\r\n    name: state.timer.params.name,\r\n    count: state.timer.params.count\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setTimer,\r\n    updateUser,\r\n    setStateCardsDefault\r\n}\r\n\r\nexport const CardsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CardsComponent)","import React, {useEffect} from \"react\";\r\nimport {CardContainer} from \"../../containers/CardComponent\";\r\nimport {convertArr} from \"../../utils/convertCards\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function CardsComponent(props) {\r\n\r\n    const {cards, openCards, matchesCount} = props;\r\n\r\n    const {setTimer, name, count} = props;\r\n\r\n    const {updateUser} = props;\r\n\r\n    const {setStateCardsDefault} = props;\r\n\r\n    useEffect(() => {\r\n        if (matchesCount !== cards.length) {\r\n            return\r\n        }\r\n\r\n        handleStopGame();\r\n    }, [matchesCount])\r\n\r\n    const handleStopGame = () => {\r\n        // если все карты разгаданы\r\n        // обновляю результаты текущего пользователя\r\n        updateUser({recordTime: count});\r\n\r\n        // убиваю таймер\r\n        clearInterval(name);\r\n        setTimer({count: 0, name: '', status: false});\r\n\r\n        // возвращаю состояние карточек\r\n        // в дефолтный вид\r\n        setStateCardsDefault();\r\n    }\r\n\r\n    // пока не закроются открытые карты\r\n    // все остальные карты - заблокированы\r\n    const handleSetHiddenCard = () => {\r\n        if (openCards.length < 2) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className={'cards margin-top20px'}>\r\n            <table>\r\n                <tbody>\r\n                {\r\n                    convertArr(cards, 6).map((element, index) => (\r\n                        <tr key={index}>\r\n                            {element.map((card, i) => (\r\n                                <td key={i}>\r\n                                    <CardContainer card={card} isDisabled={handleSetHiddenCard()}/>\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport IosSwitchComponent from \"../../../components/utils/IosSwitchComponent\";\r\nimport {setOpacityCards} from \"../../../store/actions/cards\";\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = {\r\n    setOpacityCards\r\n}\r\n\r\nexport const IosSwitchContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IosSwitchComponent)","import React, {useState} from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function IosSwitchComponent(props) {\r\n\r\n    const {setOpacityCards} = props;\r\n\r\n    // для анимации свича\r\n    const [isToggle, setToggle] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setToggle(!isToggle);\r\n        setOpacityCards(!isToggle);\r\n    }\r\n\r\n    return (\r\n        <div className={`toggle ${isToggle && 'toggle-active'}`} onClick={() => handleClick()}>\r\n            <span/>\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport InformMenuComponent from \"../../components/InformMenuComponent\";\r\nimport {setTimer} from \"../../store/actions/timer\";\r\nimport {setStateCardsDefault} from \"../../store/actions/cards\";\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: state.users.currentUser,\r\n\r\n    timer: state.timer.params,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setTimer,\r\n    setStateCardsDefault\r\n};\r\n\r\nexport const InformMenuContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InformMenuComponent);","import React from \"react\";\r\nimport {IosSwitchContainer} from \"../../containers/util/IosSwitchContainer\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function InformMenuComponent(props) {\r\n\r\n    const {setTimer, setStateCardsDefault} = props;\r\n    const {currentUser, timer} = props;\r\n\r\n    const handleStopGame = () => {\r\n        // убиваю таймер\r\n        clearInterval(timer.name);\r\n        setTimer({count: 0, name: '', status: false});\r\n\r\n        // возвращаю состояние карточек\r\n        // в дефолтный вид\r\n        setStateCardsDefault();\r\n    }\r\n\r\n    return (\r\n        <div className={'informMenu'}>\r\n            <div className={'informMenu-button'}>\r\n                <input type={'button'} value={'cancel'} onClick={() => {\r\n                    handleStopGame();\r\n                }}/>\r\n            </div>\r\n            <div className={'informMenu-iosSwitch'}>\r\n                <IosSwitchContainer/>\r\n            </div>\r\n            <div className={'informMenu-timer'}>\r\n                {timer.count} sec.\r\n            </div>\r\n            <div className={'informMenu-userInfo'}>\r\n                {currentUser.name}\r\n                <div className={'informMenu-userInfo-avatar margin-left5px'}>\r\n                    {currentUser.recordTime ? `${currentUser.recordTime} s.` : 'x_X'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport UserComponent from \"../../../components/MainMenu/UserComponent\";\r\nimport {setCurrentUser} from \"../../../store/actions/users\";\r\nimport {setTimer} from \"../../../store/actions/timer\";\r\nimport {setStateCardsShuffled} from \"../../../store/actions/cards\";\r\n\r\nconst mapStateToProps = state => ({\r\n    timer: state.timer.params\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrentUser,\r\n    setTimer,\r\n    setStateCardsShuffled\r\n};\r\n\r\nexport const UserContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserComponent);","import React from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function UserComponent(props) {\r\n\r\n    const {user, rating} = props;\r\n    const {name, recordTime} = user;\r\n\r\n    const {setCurrentUser, setStateCardsShuffled} = props;\r\n\r\n    const {setTimer} = props;\r\n\r\n    const handleStartGame = () => {\r\n\r\n        // перемешиваю карыт в массиве\r\n        setStateCardsShuffled();\r\n\r\n        // записываю статус секундомера,\r\n        // как активный\r\n        let count = 0;\r\n        setTimer({status: true});\r\n\r\n        // запускаю секундомер\r\n        const timer = setInterval(() => {\r\n            count = count + 1;\r\n            setTimer({name: timer, status: true, count: count})\r\n        }, 1000)\r\n\r\n        // записываю текущего пользовтеля,\r\n        // как текущего\r\n        setCurrentUser(user);\r\n    };\r\n\r\n    return (\r\n        <div className={'user margin-top20px'}>\r\n            <div className={'user-rating user-name'}>\r\n                {rating}) {name}\r\n            </div>\r\n            <div className={'user-recordTimer'}>\r\n                {recordTime ? `record: ${recordTime} sec.` : 'no result'}\r\n            </div>\r\n            <div className={'user-startGame'}>\r\n                <input type={'button'} value={'start'} onClick={() => {\r\n                    handleStartGame()\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport UsersComponent from \"../../../components/MainMenu/UsersComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.users.users,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const UsersContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UsersComponent);","import React from \"react\";\r\nimport {UserContainer} from \"../../../containers/MainMenu/UserContainer\";\r\nimport {getSortedUsersUtil} from \"../../../utils/users\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function UsersComponent(props) {\r\n\r\n    const {users} = props;\r\n\r\n    return (\r\n        <div className={'users'}>\r\n            {\r\n                getSortedUsersUtil([...users]).map((user, key) => (\r\n                    <UserContainer user={user} rating={(key + 1)} key={key}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport AddUserComponent from \"../../../components/MainMenu/AddUserComponent\";\r\nimport {addUser} from \"../../../store/actions/users\";\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n    addUser\r\n};\r\n\r\nexport const AddUserContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddUserComponent);","import React, {useState} from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function AddUserComponent(props) {\r\n\r\n    const {addUser} = props;\r\n\r\n    const [isNameUser, setNameUser] = useState('');\r\n\r\n    const handleAddUser = () => {\r\n        addUser(isNameUser);\r\n        setNameUser('');\r\n    }\r\n\r\n    return (\r\n        <div className={'addUser user users-addUser margin-top20px'}>\r\n            <input type={'text'} placeholder={'new user..'} value={isNameUser} onChange={(e) => {\r\n                setNameUser(e.currentTarget.value)\r\n            }}/>\r\n            <input type={'button'} value={'add user'} onClick={() => {\r\n                handleAddUser()\r\n            }} disabled={!isNameUser || isNameUser === ' '}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {UsersContainer} from \"../../../containers/MainMenu/UsersContainer\";\r\nimport {AddUserContainer} from \"../../../containers/MainMenu/AddUserContainer\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function MainMenuComponent() {\r\n\r\n    return (\r\n        <div className={'mainMenu'}>\r\n            <div className={'mainMenu-label'}>\r\n                Users\r\n            </div>\r\n            <UsersContainer/>\r\n            <AddUserContainer/>\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport WidjetComponent from \"../../components/WidjetComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.timer.params.status\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport const WidjetContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(WidjetComponent)","import React from \"react\";\r\nimport {CardsContainer} from \"../../containers/CardsContainer\";\r\nimport {InformMenuContainer} from \"../../containers/InformMenuContainer\";\r\nimport MainMenuComponent from \"../MainMenu/MenuComponent\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function WidjetComponent(props) {\r\n\r\n    const {status} = props;\r\n\r\n    const getFormMenu = () => {\r\n        return (\r\n            <div className={'widjet margin-top20px'}>\r\n                <MainMenuComponent/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getFormGame = () => {\r\n        return (\r\n            <div className={'widjet margin-top20px'}>\r\n                <InformMenuContainer/>\r\n                <CardsContainer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'widjet-container'}>\r\n            Fortune-game\r\n            {status ? getFormGame() : getFormMenu()}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport {WidjetContainer} from \"./containers/WidjetContainer\";\n\nimport './styles/style.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <WidjetContainer/>\n    </Provider>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}