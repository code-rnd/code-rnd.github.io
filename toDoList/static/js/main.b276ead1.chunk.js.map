{"version":3,"sources":["store/reducers/TasksReducers/index.js","store/reducers/index.js","store/actions/index.js","store/index.js","containers/MenuContainer/index.js","components/MenuComponent/index.jsx","containers/TaskContainer/index.js","components/TaskComponent/index.jsx","components/TasksComponent/index.jsx","containers/DisplayContainer/index.js","components/DisplayComponent/index.jsx","containers/WidjetContainer/index.js","components/WidjetComonent/index.jsx","index.js"],"names":["initialState","tasks","text","status","selectedTasks","currentTask","reducers","combineReducers","state","action","cloneTasks","cloneSelectedTasks","id","type","data","splice","filter","el","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","MenuContainer","connect","content","props","handleClick","useState","isText","setText","useEffect","className","value","onChange","e","currentTarget","placeholder","disabled","onClick","mapDispatchToProps","removeTask","selectTask","unselectTask","updateTask","task","currentEditTask","TaskContainer","isEdit","setEdit","getStatusDiabled","defaultChecked","checked","getViewForm","TasksComponent","map","key","DisplayContainer","length","addTask","WidjetContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b276ead1.chunk.js","sourcesContent":["import {\n  ADD_TASK,\n  REMOVE_TASK,\n  SELECT_TASK,\n  UNSELECT_TASK,\n  UPDATE_TASK,\n  CURRENT_EDIT_TASK\n} from \"../../actions\";\n\nconst initialContent = [\n  {\n    text: \"Съездить в автосалон\",\n    status: true\n  },\n  {\n    text: \"Приготовить пляжные шлепанцы\",\n    status: false\n  }\n];\n\nexport const initialState = {\n  tasks: [...initialContent],\n  selectedTasks: [],\n  currentTask: null\n};\n\nexport function defaultReducers(state = initialState, action) {\n  let cloneTasks = [...state.tasks];\n  let cloneSelectedTasks = [...state.selectedTasks];\n  let id = null;\n  let text = null;\n\n  switch (action.type) {\n    case ADD_TASK:\n      text = action.data;\n      return {\n        ...state,\n        ...{\n          tasks: [...state.tasks, { text: text }]\n        }\n      };\n\n    case REMOVE_TASK:\n      id = action.data;\n      cloneTasks.splice(id, 1);\n\n      cloneSelectedTasks = [...state.selectedTasks.filter(el => el !== id)];\n      return {\n        ...state,\n        ...{\n          tasks: [...cloneTasks],\n          selectedTasks: [...cloneSelectedTasks]\n        }\n      };\n\n    case SELECT_TASK:\n      id = action.data;\n      cloneTasks[id].status = true;\n\n      return {\n        ...state,\n        ...{\n          selectedTasks: [...cloneSelectedTasks, id],\n          tasks: [...cloneTasks]\n        }\n      };\n\n    case UNSELECT_TASK:\n      id = action.data;\n      cloneTasks[id].status = false;\n\n      cloneSelectedTasks = [...state.selectedTasks.filter(el => el !== id)];\n      return {\n        ...state,\n        ...{\n          selectedTasks: [...cloneSelectedTasks],\n          tasks: [...cloneTasks]\n        }\n      };\n\n    case UPDATE_TASK:\n      id = action.data.id;\n      text = action.data.text;\n\n      cloneTasks[id].text = text;\n\n      return {\n        ...state,\n        ...{\n          tasks: [...cloneTasks]\n        }\n      };\n\n    case CURRENT_EDIT_TASK:\n      id = action.data;\n\n      return {\n        ...state,\n        ...{\n          currentTask: id\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux'\nimport {defaultReducers} from \"./TasksReducers\";\n\nexport const reducers = combineReducers({\n    'content': defaultReducers\n})","export const ADD_TASK = \"ADD_TASK\";\nexport const REMOVE_TASK = \"REMOVE_TASK\";\nexport const SELECT_TASK = \"SELECT_TASK\";\nexport const UNSELECT_TASK = \"UNSELECT_TASK\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\nexport const CURRENT_EDIT_TASK = \"CURRENT_EDIT_TASK\";\n\nexport const addTask = task => ({\n    type: ADD_TASK,\n    data: task\n})\nexport const removeTask = id => ({\n    type: REMOVE_TASK,\n    data: id\n})\nexport const selectTask = id => ({\n    type: SELECT_TASK,\n    data: id\n})\nexport const unselectTask = id => ({\n    type: UNSELECT_TASK,\n    data: id\n})\nexport const updateTask = task => ({\n    type: UPDATE_TASK,\n    data: task\n})\nexport const currentEditTask = id => ({\n    type: CURRENT_EDIT_TASK,\n    data: id\n})","import { createStore } from \"redux\";\nimport { reducers } from \"./reducers\";\n\nexport const store = createStore(\n    reducers,/* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import { connect } from \"react-redux\";\r\nimport MenuComponent from \"../../components/MenuComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n  currentTask: state.content.currentTask\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const MenuContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuComponent);\r\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./style.scss\";\n\nexport default function MenuComponent(props) {\n  const { tasks } = props;\n  const { handleClick } = props;\n\n  const { currentTask } = props;\n\n  const [isText, setText] = useState(\"\");\n\n  useEffect(() => {\n    setText(\"\");\n  }, [tasks]);\n\n  return (\n    <div className={`${currentTask !== null && \"disabled\"}`}>\n      <div className=\"menu margin-top10\">\n        <input\n          type={\"text\"}\n          value={isText}\n          onChange={e => {\n            setText(e.currentTarget.value);\n          }}\n          placeholder={\"new task...\"}\n          disabled={currentTask !== null}\n        />\n        <input\n          type={\"button\"}\n          value={\"Add Task\"}\n          onClick={() => {\n            handleClick(isText);\n          }}\n          disabled={currentTask !== null || !isText}\n        />\n      </div>\n    </div>\n  );\n}\n","import {connect} from 'react-redux';\nimport TaskComponent from \"../../components/TaskComponent\";\nimport {removeTask, selectTask, unselectTask, updateTask, currentEditTask} from '../../store/actions';\n\nconst mapStateToProps = state => ({\n    currentTask: state.content.currentTask\n})\n\nconst mapDispatchToProps = {\n    removeTask,\n    selectTask,\n    unselectTask,\n    updateTask,\n    currentEditTask\n}\n\nexport const TaskContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TaskComponent)","import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nexport default function TaskComponent(props) {\n  const { id, text, status } = props;\n\n  const {\n    removeTask,\n    selectTask,\n    unselectTask,\n    updateTask,\n    currentEditTask\n  } = props;\n  const { currentTask } = props;\n\n  const [isEdit, setEdit] = useState(false);\n  const [isText, setText] = useState(text);\n\n  const getViewForm = () => {\n    const handleEdit = () => {\n      setEdit(!isEdit);\n      currentEditTask(id);\n    };\n\n    const getStatusDiabled = () => {\n      return currentTask !== null && currentTask !== id;\n    };\n\n    return (\n      <div className={`view ${getStatusDiabled() && \"disabled\"}`}>\n        <label>\n          <div className=\"text_and_input-menu\">\n            <input\n              type={\"checkbox\"}\n              defaultChecked={status}\n              onChange={e => {\n                e.currentTarget.checked ? selectTask(id) : unselectTask(id);\n              }}\n              disabled={getStatusDiabled()}\n            />\n            <div className={`task-text ${status && \"text-strike\"}`}>{text}</div>\n          </div>\n          <div className=\"button-menu\">\n            <input\n              type={\"button\"}\n              value={\"edit\"}\n              onClick={() => {\n                handleEdit();\n              }}\n              disabled={getStatusDiabled()}\n            />\n          </div>\n        </label>\n      </div>\n    );\n  };\n\n  const getEditForm = () => {\n    const handleSave = () => {\n      setEdit(!isEdit);\n      updateTask({ id: id, text: isText });\n      currentEditTask(null);\n    };\n    const handleCancel = () => {\n      setEdit(!isEdit);\n      setText(text);\n      currentEditTask(null);\n    };\n    const handleRemove = () => {\n      setEdit(!isEdit);\n      removeTask(id);\n      currentEditTask(null);\n    };\n\n    return (\n      <div className=\"edit\">\n        <input\n          type={\"text\"}\n          value={isText}\n          onChange={e => {\n            setText(e.currentTarget.value);\n          }}\n        />\n        <div className=\"button-menu\">\n          <input\n            type={\"button\"}\n            value={\"save\"}\n            onClick={() => {\n              handleSave();\n            }}\n            disabled={!isText}\n          />\n          <input\n            type={\"button\"}\n            value={\"cancel\"}\n            onClick={() => {\n              handleCancel();\n            }}\n          />\n          <input\n            type={\"button\"}\n            value={\"remove\"}\n            onClick={() => {\n              handleRemove();\n            }}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"task margin-top10\">\n      {isEdit ? getEditForm() : getViewForm()}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TaskContainer } from \"../../containers/TaskContainer\";\n\nexport default function TasksComponent(props) {\n  const { tasks } = props;\n\n  return (\n    <div className=\"tasks\">\n      {tasks.map(({ text, status }, key) => (\n        <TaskContainer text={text} status={status} key={key} id={key} />\n      ))}\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport DisplayComponent from \"../../components/DisplayComponent\";\n\nconst mapStateToProps = state => ({\n  tasks: state.content.tasks,\n  selectedTasks: state.content.selectedTasks,\n  currentTask: state.content.currentTask\n});\n\nconst mapDispatchToProps = {};\n\nexport const DisplayContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayComponent);\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nexport default function DisplayComponent(props) {\n  const { tasks, selectedTasks, currentTask } = props;\n\n  const getViewCountTasks = () => {\n    return <div>{`Tasks: ${tasks.length}`}</div>;\n  };\n\n  const getViewCountTasksComplete = () => {\n    return <div>{`Tasks complete: ${selectedTasks.length}`}</div>;\n  };\n\n  return (\n    <div className=\"display margin-top10\">\n      {currentTask !== null ? \"Edit status\" : \"Work status\"}\n      {getViewCountTasks()}\n      {getViewCountTasksComplete()}\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport WidjetComponent from \"../../components/WidjetComonent\";\nimport { addTask } from \"../../store/actions\";\n\nconst mapStateToProps = state => ({\n  state: state,\n  tasks: state.content.tasks\n});\n\nconst mapDispatchToProps = {\n  addTask\n};\n\nexport const WidjetContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WidjetComponent);\n","import React from \"react\";\nimport { MenuContainer } from \"../../containers/MenuContainer\";\nimport TasksComponent from \"../TasksComponent\";\nimport { DisplayContainer } from \"../../containers/DisplayContainer\";\nimport \"./style.scss\";\n\nexport default function WidjetComponent(props) {\n  const { tasks } = props;\n  const { addTask } = props;\n\n  return (\n    <div className=\"widjet\">\n      <DisplayContainer />\n      <MenuContainer handleClick={addTask} tasks={tasks} />\n      <TasksComponent tasks={tasks} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport \"./style.scss\";\nimport { WidjetContainer } from \"./containers/WidjetContainer\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <WidjetContainer />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}