{"version":3,"sources":["store/actions/index.js","utils/tasksCRUD.js","store/reducers/tasksReducers/index.js","store/reducers/index.js","store/index.js","serviceWorker.js","components/IosSwitchComponent/index.jsx","containers/TaskContainer/index.js","components/TaskComponent/index.jsx","containers/TasksContainer/index.js","components/TasksComponent/index.jsx","containers/InputMenuContainer/index.js","components/InputMenuComponent/index.jsx","utils/countersTasks.js","containers/DisplayContainer/index.js","components/DisplayComponent/index.jsx","index.js","components/WidjetComponent/index.jsx"],"names":["ADD_TASK","UPDATE_TASK","REMOVE_TASK","SET_CURRENT_TASK","addTaskUtil","tasks","task","idGen","length","id","newTask","ready","updateTaskUtil","idTask","indexTask","forEach","item","index","removeTaskUtil","newTasks","splice","initialState","content","process","isCurrentEdit","currentTask","reducers","combineReducers","state","action","type","data","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","IosSwitchComponent","props","handleCheckedTask","useState","isToggle","setToggle","useEffect","className","onClick","mapDispatchToProps","updateTask","removeTask","setCurrentTask","TaskContainer","connect","isEdit","setEdit","isTaskContent","setTaskContent","isReady","setIsReady","handleSetEdit","edit","handleOnBlur","value","onChange","e","currentTarget","rows","autoFocus","onBlur","getEditTask","checked","TasksContainer","x","dispatch","map","key","addTask","InputMenuContainer","isContent","setContent","placeholder","disabled","counterReadyTask","countReadyTask","DisplayContainer","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.a60f859c.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\nexport const REMOVE_TASK = \"REMOVE_TASK\";\nexport const SET_CURRENT_TASK = \"SET_CURRENT_TASK\";\n\nexport const addTask = task => ({\n    type: ADD_TASK,\n    data: task\n})\n\nexport const updateTask = task => ({\n    type: UPDATE_TASK,\n    data: task\n})\n\nexport const removeTask = task => ({\n    type: REMOVE_TASK,\n    data: task\n})\n\nexport const setCurrentTask = task => ({\n    type: SET_CURRENT_TASK,\n    data: task\n})","export const addTaskUtil = (tasks, task) => {\r\n\r\n    if (!tasks || !task) {\r\n        return []\r\n    }\r\n\r\n    const idGen = [...tasks][tasks.length - 1].id + 1;\r\n    const newTask = {...task, id: idGen, ready: false};\r\n    const newTasks = [...tasks, newTask];\r\n\r\n    return newTasks;\r\n}\r\n\r\nexport const updateTaskUtil = (tasks, task) => {\r\n\r\n    if (!tasks || !task) {\r\n        return []\r\n    }\r\n\r\n    const idTask = task.id;\r\n    let indexTask = null;\r\n\r\n    [...tasks].forEach((item, index) => {\r\n        if (item.id === idTask) {\r\n            indexTask = index\r\n        }\r\n    })\r\n\r\n    const newTask = {...tasks[indexTask], ...task};\r\n    tasks[indexTask] = newTask;\r\n\r\n    return tasks;\r\n}\r\n\r\nexport const removeTaskUtil = (tasks, task) => {\r\n\r\n    if (!tasks || !task) {\r\n        return []\r\n    }\r\n\r\n    const idTask = task.id;\r\n    let indexTask = null;\r\n\r\n    [...tasks].forEach((item, index) => {\r\n        if (item.id === idTask) {\r\n            indexTask = index\r\n        }\r\n    });\r\n\r\n    let newTasks = [...tasks];\r\n\r\n    newTasks.splice(indexTask, 1);\r\n\r\n    return newTasks;\r\n}","import {ADD_TASK, REMOVE_TASK, UPDATE_TASK, SET_CURRENT_TASK} from '../../actions';\nimport {addTaskUtil, updateTaskUtil, removeTaskUtil} from \"../../../utils/tasksCRUD\";\n\nconst initialContent = [\n    {\n        id: 0,\n        content: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥–∏—Ç–∞—Ä–Ω—ã–π üé∏ –≥—Ä–∏—Ñ',\n        process: 67,\n        ready: false,\n        isCurrentEdit: false\n    },\n    {\n        id: 1,\n        content: '–ü—Ä–æ–¥–ª–∏—Ç—å –∞—Ä–µ–Ω–¥—É —Å–ø–æ—Ä—Ç-–∫–∞—Ä–∞ üèéÔ∏è',\n        process: 67,\n        ready: true,\n        isCurrentEdit: false\n    },\n    {\n        id: 2,\n        content: '–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –≤ –ê–ª—å–ø—ã üß≥. –ê–ª—å–±–µ—Ä—Ç—É, –∫–∞—Å–∞–µ–º–æ –≤–∏–Ω–æ–¥–µ–ª—å–Ω–∏',\n        process: 67,\n        ready: false,\n        isCurrentEdit: false\n    },\n    {\n        id: 3,\n        content: '–û—Ç–æ–≥–Ω–∞—Ç—å —è—Ö—Ç—É üö§ –≤ —Å–æ—Å–µ–¥–Ω–∏–π –ø–æ—Ä—Ç',\n        process: 67,\n        ready: false,\n        isCurrentEdit: false\n    }\n]\n\nexport const initialState = {\n    tasks: [...initialContent],\n    currentTask: {}\n}\n\nexport function defaultReducers(state = initialState, action) {\n\n    let tasks = [...state.tasks];\n    let newTasks = [];\n    let newTask = {};\n\n    switch (action.type) {\n\n        case ADD_TASK:\n            newTask = action.data;\n\n            newTasks = addTaskUtil(tasks, newTask);\n\n            return {\n                ...state,\n                ...{\n                    tasks: newTasks\n                }\n            }\n\n        case UPDATE_TASK:\n            newTask = action.data;\n\n            newTasks = updateTaskUtil(tasks, newTask);\n\n            return {\n                ...state,\n                ...{\n                    tasks: newTasks\n                }\n            }\n\n        case REMOVE_TASK:\n            newTask = action.data;\n\n            newTasks = removeTaskUtil(tasks, newTask);\n\n            return {\n                ...state,\n                ...{\n                    tasks: newTasks\n                }\n            }\n\n        case SET_CURRENT_TASK:\n            newTask = action.data;\n\n            return {\n                ...state,\n                ...{\n                    currentTask: newTask\n                }\n            }\n\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport {defaultReducers} from \"./tasksReducers\";\n\nexport const reducers = combineReducers({\n    'content': defaultReducers\n})","import { createStore } from \"redux\";\nimport { reducers } from \"./reducers\";\n\nexport const store = createStore(\n    reducers,/* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function IosSwitchComponent(props) {\r\n\r\n    const {ready, handleCheckedTask} = props;\r\n\r\n    // –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–≤–∏—á–∞\r\n    const [isToggle, setToggle] = useState(ready);\r\n\r\n    useEffect(() => {\r\n        setToggle(ready);\r\n    }, [ready]);\r\n\r\n    const handleClick = () => {\r\n        setToggle(!isToggle);\r\n        handleCheckedTask(!isToggle);\r\n    };\r\n\r\n    return (\r\n        <div className={`toggle ${isToggle && 'toggle-active'}`} onClick={() => handleClick()}>\r\n            <span/>\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport TaskComponent from \"../../components/TaskComponent\";\r\nimport {removeTask, setCurrentTask, updateTask} from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: state.content.tasks,\r\n    currentTask: state.content.currentTask\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateTask,\r\n    removeTask,\r\n    setCurrentTask\r\n}\r\n\r\nexport const TaskContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TaskComponent)","import React, {useEffect, useState} from \"react\";\r\n\r\nimport './style.scss';\r\nimport IosSwitchComponent from \"../IosSwitchComponent\";\r\n\r\nexport default function TaskComponent(props) {\r\n\r\n    const {task} = props;\r\n    const {content, ready, id} = task;\r\n\r\n    const {updateTask, removeTask} = props;\r\n    const [isEdit, setEdit] = useState(false);\r\n    const [isTaskContent, setTaskContent] = useState(content);\r\n    const [isReady, setIsReady] = useState(ready);\r\n\r\n    useEffect(() => {\r\n        setIsReady(ready);\r\n    }, [ready])\r\n\r\n    useEffect(() => {\r\n        setTaskContent(content);\r\n    }, [task])\r\n\r\n    const handleSetEdit = (edit) => {\r\n        setEdit(edit);\r\n        updateTask({\r\n            id: id,\r\n            isCurrentEdit: edit\r\n        });\r\n    }\r\n\r\n    const getViewTask = () => {\r\n\r\n        const handleCheckedTask = (checked) => {\r\n            updateTask({\r\n                id: id,\r\n                ready: checked\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className={'task-view'}>\r\n                <div className={\"task-content\"} onClick={() => {\r\n                    handleSetEdit(true);\r\n                }}>{content}</div>\r\n                <div className={'task-childBlocksCenter'}>\r\n                    <IosSwitchComponent ready={isReady} handleCheckedTask={handleCheckedTask}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getEditTask = () => {\r\n\r\n        const handleRemoveTask = () => {\r\n            handleSetEdit(false);\r\n            removeTask({\r\n                id: id\r\n            })\r\n        }\r\n\r\n        const handleUpdateTask = () => {\r\n            handleSetEdit(false);\r\n            updateTask({\r\n                id: id,\r\n                content: isTaskContent\r\n            });\r\n        }\r\n\r\n        const handleOnBlur = () => {\r\n            !isTaskContent || isTaskContent === ' ' ?\r\n                handleRemoveTask() : handleUpdateTask()\r\n        }\r\n\r\n        return (\r\n            <div className={'task-edit'}>\r\n                <textarea value={isTaskContent}\r\n                          onChange={e => setTaskContent(e.currentTarget.value)}\r\n                          rows={3}\r\n                          className={'task-textarea'}\r\n                          autoFocus={true}\r\n                    onBlur={() => handleOnBlur()}\r\n                />\r\n                <div className={'task-edit-exit'}>save</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`task ${ready ? 'task-ready' : ''}`}>\r\n            {isEdit ? getEditTask() : getViewTask()}\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\nimport TasksComponent from \"../../components/TasksComponent\";\n\nconst mapStateToProps = state => ({\n    tasks: state.content.tasks,\n    x: state.tasks\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport const TasksContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TasksComponent)","import React from \"react\";\r\nimport {TaskContainer} from \"../../containers/TaskContainer\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function TasksComponent(props) {\r\n\r\n    const {tasks} = props;\r\n\r\n    return (\r\n        <div className={'tasks'}>\r\n            {\r\n                tasks ?\r\n                    tasks.map((task, key) => <TaskContainer key={key} task={task}/>) :\r\n                    '–ù–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–¥–∞—á –Ω–µ—Ç'\r\n            }\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport {addTask} from \"../../store/actions\";\r\nimport InputMenuComponent from \"../../components/InputMenuComponent\";\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = {\r\n    addTask\r\n}\r\n\r\nexport const InputMenuContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InputMenuComponent)","import React, {useState} from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function InputMenuComponent(props) {\r\n\r\n    const {addTask} = props;\r\n    const [isContent, setContent] = useState('');\r\n\r\n    const handleAddTask = () => {\r\n        addTask({content: isContent});\r\n        setContent('');\r\n    }\r\n\r\n    const getButtonAddTask = () => {\r\n        return (\r\n            <div className={'task-edit-exit'} onClick={() => {\r\n                handleAddTask()\r\n            }} disabled={!isContent}>\r\n                add\r\n            </div>\r\n            // <input type={'button'} value={`add`} onClick={() => {\r\n            //     handleAddTask()\r\n            // }} disabled={!isContent}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'inputMenu'}>\r\n            <input type={'text'} placeholder={'new task...'} value={isContent} onChange={(e) => {\r\n                setContent(e.currentTarget.value)\r\n            }}/>\r\n            {getButtonAddTask()}\r\n        </div>\r\n    )\r\n}","export const counterReadyTask = (tasks) => {\r\n    if(!tasks) {\r\n        return 0\r\n    }\r\n\r\n    let countReadyTask = 0;\r\n\r\n    tasks.map(task => {\r\n        if(task.ready) {\r\n            countReadyTask = countReadyTask + 1;\r\n        }\r\n    })\r\n\r\n    return countReadyTask;\r\n}","import {connect} from 'react-redux'\r\nimport DisplayComponent from \"../../components/DisplayComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: state.content.tasks\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport const DisplayContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DisplayComponent)","import React from \"react\";\r\nimport {counterReadyTask} from \"../../utils/countersTasks\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function DisplayComponent(props) {\r\n\r\n    const {tasks} = props;\r\n\r\n    const handleGetCountReadyTask = () => {\r\n        const countReadyTask = counterReadyTask([...tasks]);\r\n\r\n        return countReadyTask\r\n    }\r\n\r\n    const handleGetCountAllTasks = () => {\r\n        const countAllTasks = tasks.length;\r\n\r\n        return countAllTasks;\r\n    }\r\n\r\n    return (\r\n        <div className={'display'}>\r\n            <div>–≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {handleGetCountReadyTask()}</div>\r\n            <div>–æ–±—â–µ–µ –∫–æ–ª-–≤–æ: {handleGetCountAllTasks()}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport * as serviceWorker from './serviceWorker';\nimport WidjetComponent from \"./components/WidjetComponent\";\n\nimport './style.scss';\nimport './styleMedia/style.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <WidjetComponent/>\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();","import React from \"react\";\r\nimport {TasksContainer} from \"../../containers/TasksContainer\";\r\nimport {InputMenuContainer} from \"../../containers/InputMenuContainer\";\r\nimport {DisplayContainer} from \"../../containers/DisplayContainer\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function WidjetComponent(props) {\r\n\r\n    return (\r\n        <div className={'widjet'}>\r\n            <DisplayContainer/>\r\n            <TasksContainer/>\r\n            <InputMenuContainer/>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}