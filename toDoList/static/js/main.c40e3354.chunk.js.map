{"version":3,"sources":["store/actions/index.js","utils/tasksCRUD.js","store/reducers/tasksReducers/index.js","store/reducers/index.js","store/index.js","containers/TaskContainer/index.js","components/TaskComponent/index.jsx","containers/TasksContainer/index.js","components/TasksComponent/index.jsx","containers/InputMenuContainer/index.js","components/InputMenuComponent/index.jsx","utils/countersTasks.js","containers/DisplayContainer/index.js","components/DisplayComponent/index.jsx","index.js","components/WidjetComponent/index.jsx"],"names":["ADD_TASK","UPDATE_TASK","REMOVE_TASK","SET_CURRENT_TASK","addTaskUtil","tasks","task","idGen","length","id","newTask","ready","updateTaskUtil","idTask","indexTask","map","item","index","removeTaskUtil","newTasks","splice","initialState","content","process","isCurrentEdit","currentTask","reducers","combineReducers","state","action","type","data","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","mapDispatchToProps","updateTask","removeTask","setCurrentTask","TaskContainer","connect","props","useState","isEdit","setEdit","isTaskContent","setTaskContent","useEffect","handleSetEdit","edit","className","value","onChange","e","currentTarget","onClick","checked","TasksContainer","x","dispatch","key","addTask","InputMenuContainer","isContent","setContent","placeholder","disabled","counterReadyTask","countReadyTask","DisplayContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c40e3354.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\nexport const REMOVE_TASK = \"REMOVE_TASK\";\nexport const SET_CURRENT_TASK = \"SET_CURRENT_TASK\";\n\nexport const addTask = task => ({\n    type: ADD_TASK,\n    data: task\n})\n\nexport const updateTask = task => ({\n    type: UPDATE_TASK,\n    data: task\n})\n\nexport const removeTask = task => ({\n    type: REMOVE_TASK,\n    data: task\n})\n\nexport const setCurrentTask = task => ({\n    type: SET_CURRENT_TASK,\n    data: task\n})","export const addTaskUtil = (tasks, task) => {\r\n\r\n    if (!tasks || !task) {\r\n        return []\r\n    }\r\n\r\n    const idGen = [...tasks][tasks.length - 1].id + 1;\r\n    const newTask = {...task, id: idGen, ready: false};\r\n    const newTasks = [...tasks, newTask];\r\n\r\n    return newTasks;\r\n}\r\n\r\nexport const updateTaskUtil = (tasks, task) => {\r\n\r\n    if (!tasks || !task) {\r\n        return []\r\n    }\r\n\r\n    const idTask = task.id;\r\n    let indexTask = null;\r\n\r\n    [...tasks].map((item, index) => {\r\n        if (item.id === idTask) {\r\n            indexTask = index\r\n        }\r\n    })\r\n\r\n    const newTask = {...tasks[indexTask], ...task};\r\n    tasks[indexTask] = newTask;\r\n\r\n    return tasks;\r\n}\r\n\r\nexport const removeTaskUtil = (tasks, task) => {\r\n\r\n    if (!tasks || !task) {\r\n        return []\r\n    }\r\n\r\n    const idTask = task.id;\r\n    let indexTask = null;\r\n\r\n    [...tasks].map((item, index) => {\r\n        if (item.id === idTask) {\r\n            indexTask = index\r\n        }\r\n    });\r\n\r\n    let newTasks = [...tasks];\r\n\r\n    newTasks.splice(indexTask, 1);\r\n\r\n    return newTasks;\r\n}","import {ADD_TASK, REMOVE_TASK, UPDATE_TASK, SET_CURRENT_TASK} from '../../actions';\nimport {addTaskUtil, updateTaskUtil, removeTaskUtil} from \"../../../utils/tasksCRUD\";\n\nconst initialContent = [\n    {\n        id: 0,\n        content: 'Настроить гитарный гриф',\n        process: 67,\n        ready: false,\n        isCurrentEdit: false\n    },\n    {\n        id: 1,\n        content: 'Продлить аренду спорт-кара',\n        process: 67,\n        ready: true,\n        isCurrentEdit: false\n    },\n    {\n        id: 2,\n        content: 'Написать письмо в Альпы. Альберту, касаемо винодельни',\n        process: 67,\n        ready: false,\n        isCurrentEdit: false\n    }\n]\n\nexport const initialState = {\n    tasks: [...initialContent],\n    currentTask: {}\n}\n\nexport function defaultReducers(state = initialState, action) {\n\n    let tasks = [...state.tasks];\n    let newTasks = [];\n    let newTask = {};\n\n    switch (action.type) {\n\n        case ADD_TASK:\n            newTask = action.data;\n\n            newTasks = addTaskUtil(tasks, newTask);\n\n            return {\n                ...state,\n                ...{\n                    tasks: newTasks\n                }\n            }\n\n        case UPDATE_TASK:\n            newTask = action.data;\n\n            newTasks = updateTaskUtil(tasks, newTask);\n\n            return {\n                ...state,\n                ...{\n                    tasks: newTasks\n                }\n            }\n\n        case REMOVE_TASK:\n            newTask = action.data;\n\n            newTasks = removeTaskUtil(tasks, newTask);\n\n            return {\n                ...state,\n                ...{\n                    tasks: newTasks\n                }\n            }\n\n        case SET_CURRENT_TASK:\n            newTask = action.data;\n\n            return {\n                ...state,\n                ...{\n                    currentTask: newTask\n                }\n            }\n\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport {defaultReducers} from \"./tasksReducers\";\n\nexport const reducers = combineReducers({\n    'content': defaultReducers\n})","import { createStore } from \"redux\";\nimport { reducers } from \"./reducers\";\n\nexport const store = createStore(\n    reducers,/* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)","import {connect} from 'react-redux'\r\nimport TaskComponent from \"../../components/TaskComponent\";\r\nimport {removeTask, setCurrentTask, updateTask} from \"../../store/actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: state.content.tasks,\r\n    currentTask: state.content.currentTask\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateTask,\r\n    removeTask,\r\n    setCurrentTask\r\n}\r\n\r\nexport const TaskContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TaskComponent)","import React, {useState, useEffect} from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function TaskComponent(props) {\r\n\r\n    const {task} = props;\r\n    const {content, ready, id, isCurrentEdit} = task;\r\n\r\n    const {updateTask, removeTask} = props;\r\n    const [isEdit, setEdit] = useState(false);\r\n    const [isTaskContent, setTaskContent] = useState(content);\r\n\r\n    useEffect(() => {\r\n        isCurrentEdit ? setEdit(true) : setEdit(false);\r\n    }, [isCurrentEdit])\r\n\r\n    const handleSetEdit = (edit) => {\r\n        setEdit(edit);\r\n        updateTask({\r\n            id: id,\r\n            isCurrentEdit: edit\r\n        });\r\n    }\r\n\r\n    const getViewTask = () => {\r\n\r\n        const handleCheckedTask = (checked) => {\r\n            updateTask({\r\n                id: id,\r\n                ready: checked\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className={'task-view'}>\r\n                <div className={`task-content ${ready ? 'task-ready' : ''}`}>{content}</div>\r\n                <div>\r\n                    <label className={'task-label'}>\r\n                        <input type={'checkbox'} checked={ready} onChange={(e) => {\r\n                            handleCheckedTask(e.currentTarget.checked);\r\n                        }}/>\r\n                        {ready ? '🟢' : '⭕'}\r\n                    </label>\r\n\r\n                    <input type={'button'} value={'⚙'} onClick={() => {\r\n                        handleSetEdit(true)\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getEditTask = () => {\r\n\r\n        const handleRemoveTask = () => {\r\n            handleSetEdit(false);\r\n            removeTask({\r\n                id: id\r\n            })\r\n        }\r\n\r\n        const handleUpdateTask = () => {\r\n            handleSetEdit(false);\r\n            updateTask({\r\n                id: id,\r\n                content: isTaskContent\r\n            });\r\n            setTaskContent(isTaskContent);\r\n        }\r\n\r\n        const handleCancelEditTask = () => {\r\n            handleSetEdit(false);\r\n            setTaskContent(content);\r\n        }\r\n\r\n        return (\r\n            <div className={'task-edit'}>\r\n                <input type={'text'} value={isTaskContent} onChange={(e) => {\r\n                    setTaskContent(e.currentTarget.value)\r\n                }}/>\r\n\r\n                <input type={'button'} value={'💾'} onClick={() => {\r\n                    handleUpdateTask()\r\n                }}/>\r\n                <input type={'button'} value={'🗑️'} onClick={() => {\r\n                    handleRemoveTask()\r\n                }}/>\r\n                <input type={'button'} value={'❌'} onClick={() => {\r\n                    handleCancelEditTask()\r\n                }}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`task ${ready ? 'task-ready' : ''}`}>\r\n            {isEdit ? getEditTask() : getViewTask()}\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\nimport TasksComponent from \"../../components/TasksComponent\";\n\nconst mapStateToProps = state => ({\n    tasks: state.content.tasks,\n    x: state.tasks\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport const TasksContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TasksComponent)","import React from \"react\";\r\nimport {TaskContainer} from \"../../containers/TaskContainer\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function TasksComponent(props) {\r\n\r\n    const {tasks} = props;\r\n\r\n    return (\r\n        <div className={'tasks'}>\r\n            {\r\n                tasks ?\r\n                    tasks.map((task, key) => <TaskContainer key={key} task={task}/>) :\r\n                    'На сегодня задач нет'\r\n            }\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport {addTask} from \"../../store/actions\";\r\nimport InputMenuComponent from \"../../components/InputMenuComponent\";\r\n\r\nconst mapStateToProps = state => ({})\r\n\r\nconst mapDispatchToProps = {\r\n    addTask\r\n}\r\n\r\nexport const InputMenuContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(InputMenuComponent)","import React, {useState} from \"react\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function InputMenuComponent(props) {\r\n\r\n    const {addTask} = props;\r\n    const [isContent, setContent] = useState('');\r\n\r\n    const handleAddTask = () => {\r\n        addTask({content: isContent});\r\n        setContent('');\r\n    }\r\n\r\n    const getButtonAddTask = () => {\r\n        return (\r\n            <input type={'button'} value={`${isContent ? '✅' : '✔'}`} onClick={() => {\r\n                handleAddTask()\r\n            }} disabled={!isContent}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'inputMenu'}>\r\n            <input type={'text'} placeholder={'new task...'} value={isContent} onChange={(e) => {\r\n                setContent(e.currentTarget.value)\r\n            }}/>\r\n            {getButtonAddTask()}\r\n        </div>\r\n    )\r\n}","export const counterReadyTask = (tasks) => {\r\n    if(!tasks) {\r\n        return 0\r\n    }\r\n\r\n    let countReadyTask = 0;\r\n\r\n    tasks.map(task => {\r\n        if(task.ready) {\r\n            countReadyTask = countReadyTask + 1;\r\n        }\r\n    })\r\n\r\n    return countReadyTask;\r\n}","import {connect} from 'react-redux'\r\nimport DisplayComponent from \"../../components/DisplayComponent\";\r\n\r\nconst mapStateToProps = state => ({\r\n    tasks: state.content.tasks\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport const DisplayContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DisplayComponent)","import React from \"react\";\r\nimport {counterReadyTask} from \"../../utils/countersTasks\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function DisplayComponent(props) {\r\n\r\n    const {tasks} = props;\r\n\r\n    const handleGetCountReadyTask = () => {\r\n        const countReadyTask = counterReadyTask([...tasks]);\r\n\r\n        return countReadyTask\r\n    }\r\n\r\n    const handleGetCountAllTasks = () => {\r\n        const countAllTasks = tasks.length;\r\n\r\n        return countAllTasks;\r\n    }\r\n\r\n    return (\r\n        <div className={'display'}>\r\n            <div>выполнено: {handleGetCountReadyTask()}</div>\r\n            <div>общее кол-во: {handleGetCountAllTasks()}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport WidjetComponent from \"./components/WidjetComponent\";\n\nimport './style.scss';\nimport './styleMedia/style.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <WidjetComponent/>\n    </Provider>,\n    document.getElementById('root'));\n\n","import React from \"react\";\r\nimport {TasksContainer} from \"../../containers/TasksContainer\";\r\nimport {InputMenuContainer} from \"../../containers/InputMenuContainer\";\r\nimport {DisplayContainer} from \"../../containers/DisplayContainer\";\r\n\r\nimport './style.scss';\r\n\r\nexport default function WidjetComponent(props) {\r\n\r\n    return (\r\n        <div className={'widjet'}>\r\n            <DisplayContainer/>\r\n            <TasksContainer/>\r\n            <InputMenuContainer/>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}